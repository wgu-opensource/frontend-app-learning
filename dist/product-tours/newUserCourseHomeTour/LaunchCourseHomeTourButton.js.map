{"version":3,"sources":["../../../src/product-tours/newUserCourseHomeTour/LaunchCourseHomeTourButton.jsx"],"names":["LaunchCourseHomeTourButton","intl","srOnly","courseId","state","courseHome","org","toursEnabled","tours","dispatch","handleClick","administrator","org_key","courserun_key","is_staff","tour_variant","Compass","height","width","formatMessage","messages","launchTour","defaultProps","propTypes","intlShape","isRequired","PropTypes","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA,SAASA,0BAAT,OAAsD;AAAA,MAAlB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAkB;AACpD,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAIA,QAAM;AACJC,IAAAA;AADI,MAEF,0BAAS,gBAAT,EAA2BH,QAA3B,CAFJ;AAIA,QAAM;AACJI,IAAAA;AADI,MAEF,6BAAYH,KAAK,IAAIA,KAAK,CAACI,KAA3B,CAFJ;AAIA,QAAMC,QAAQ,GAAG,8BAAjB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAoB,iCAA1B;AACA,mCAAe,gCAAf,EAAiD;AAC/CC,MAAAA,OAAO,EAAEN,GADsC;AAE/CO,MAAAA,aAAa,EAAEV,QAFgC;AAG/CW,MAAAA,QAAQ,EAAEH,aAHqC;AAI/CI,MAAAA,YAAY,EAAE;AAJiC,KAAjD;AAOAN,IAAAA,QAAQ,CAAC,kCAAD,CAAR;AACD,GAVD;;AAYA,sBACE;AAAA,cACGF,YAAY,iBACX,sBAAC,eAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,IAAI,EAAC,QAA5B;AAAqC,MAAA,SAAS,EAAG,OAAML,MAAM,IAAI,2BAA4B,EAA7F;AAAgG,MAAA,OAAO,EAAEQ,WAAzG;AAAA,iBACG,CAACR,MAAD,iBACC,qBAAC,aAAD;AACE,QAAA,GAAG,EAAEc,cADP;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE;AAAzB;AAHT,QAFJ,EAQGjB,IAAI,CAACkB,aAAL,CAAmBC,kBAASC,UAA5B,CARH;AAAA;AAFJ,IADF;AAgBD;;AAEDrB,0BAA0B,CAACsB,YAA3B,GAA0C;AACxCpB,EAAAA,MAAM,EAAE;AADgC,CAA1C;AAIAF,0BAA0B,CAACuB,SAA3B,GAAuC;AACrCtB,EAAAA,IAAI,EAAEuB,gBAAUC,UADqB;AAErCvB,EAAAA,MAAM,EAAEwB,mBAAUC;AAFmB,CAAvC;;eAKe,sBAAW3B,0BAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Button, Icon } from '@edx/paragon';\nimport { Compass } from '@edx/paragon/icons';\n\nimport { useModel } from '../../generic/model-store';\nimport { launchCourseHomeTour } from '../data/slice';\nimport messages from '../messages';\n\nfunction LaunchCourseHomeTourButton({ intl, srOnly }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    org,\n  } = useModel('courseHomeMeta', courseId);\n\n  const {\n    toursEnabled,\n  } = useSelector(state => state.tours);\n\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    const { administrator } = getAuthenticatedUser();\n    sendTrackEvent('edx.ui.lms.launch_tour.clicked', {\n      org_key: org,\n      courserun_key: courseId,\n      is_staff: administrator,\n      tour_variant: 'course_home',\n    });\n\n    dispatch(launchCourseHomeTour());\n  };\n\n  return (\n    <>\n      {toursEnabled && (\n        <Button variant=\"link\" size=\"inline\" className={`p-0 ${srOnly && 'sr-only sr-only-focusable'}`} onClick={handleClick}>\n          {!srOnly && (\n            <Icon\n              src={Compass}\n              className=\"mr-2\"\n              style={{ height: '18px', width: '18px' }}\n            />\n          )}\n          {intl.formatMessage(messages.launchTour)}\n        </Button>\n      )}\n    </>\n  );\n}\n\nLaunchCourseHomeTourButton.defaultProps = {\n  srOnly: false,\n};\n\nLaunchCourseHomeTourButton.propTypes = {\n  intl: intlShape.isRequired,\n  srOnly: PropTypes.bool,\n};\n\nexport default injectIntl(LaunchCourseHomeTourButton);\n"],"file":"LaunchCourseHomeTourButton.js"}