{"version":3,"sources":["../../../src/product-tours/data/api.js"],"names":["getTourData","username","url","LMS_BASE_URL","data","get","toursEnabled","error","httpErrorStatus","customAttributes","patchTourData","tourData","patch"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;AAEO,eAAeA,WAAf,CAA2BC,QAA3B,EAAqC;AAC1C,QAAMC,GAAG,GAAI,GAAE,mCAAYC,YAAa,sBAAqBF,QAAS,EAAtE;;AACA,MAAI;AACF,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAM,wCAA6BC,GAA7B,CAAiCH,GAAjC,CAAvB;AACA;AAASI,MAAAA,YAAY,EAAE;AAAvB,OAAgC,uCAAgBF,IAAhB,CAAhC;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACd,UAAM;AAAEC,MAAAA;AAAF,QAAsBD,KAAK,IAAIA,KAAK,CAACE,gBAA3C;AACA;AACJ;AACA;AACA;AACA;;AACI,QAAID,eAAe,KAAK,GAApB,IAA2BA,eAAe,KAAK,GAA/C,IAAsDA,eAAe,KAAK,GAA9E,EAAmF;AACjF,aAAO;AAAEF,QAAAA,YAAY,EAAE;AAAhB,OAAP;AACD;;AACD,UAAMC,KAAN;AACD;AACF;;AAEM,eAAeG,aAAf,CAA6BT,QAA7B,EAAuCU,QAAvC,EAAiD;AACtD,QAAMT,GAAG,GAAI,GAAE,mCAAYC,YAAa,sBAAqBF,QAAS,EAAtE;AACA,SAAO,wCAA6BW,KAA7B,CAAmCV,GAAnC,EAAwCS,QAAxC,CAAP;AACD","sourcesContent":["import { camelCaseObject, getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\n\nexport async function getTourData(username) {\n  const url = `${getConfig().LMS_BASE_URL}/api/user_tours/v1/${username}`;\n  try {\n    const { data } = await getAuthenticatedHttpClient().get(url);\n    return { toursEnabled: true, ...camelCaseObject(data) };\n  } catch (error) {\n    const { httpErrorStatus } = error && error.customAttributes;\n    /** The API will return a\n     *    401 if the user is not authenticated\n     *    403 if the tour waffle flag is inactive\n     *    404 if no User Tour objects exist for the given username\n     */\n    if (httpErrorStatus === 401 || httpErrorStatus === 403 || httpErrorStatus === 404) {\n      return { toursEnabled: false };\n    }\n    throw error;\n  }\n}\n\nexport async function patchTourData(username, tourData) {\n  const url = `${getConfig().LMS_BASE_URL}/api/user_tours/v1/${username}`;\n  return getAuthenticatedHttpClient().patch(url, tourData);\n}\n"],"file":"api.js"}