{"version":3,"sources":["../../../src/experiments/mm-p2p/index.jsx"],"names":["MMP2PKeys","enableFn","flyoverVisible","state","access","meta","location","windowKey","field","setWindowVal","val","window","windowVal","defaultWindowVal","undefined","createWindowStateSetter","stateSetter","key","value","externalConfig","runs","upgradeDeadline","courses","courseRun","subSections","initDatesMMP2P","defaultState","isEnabled","MMP2POptions","setMMP2POptions","initHomeMMP2P","courseId","afterUpgradeDeadline","defaultAccess","isAudit","accessExpirationDate","upgradeUrl","price","_setMMP2POptions","MMP2PAccess","_setMMP2PAccess","setMMP2PAccess","accessExpiration","verifiedMode","loadAccess","expirationDate","currencySymbol","enableFunction","Date","initCoursewareMMP2P","sequenceId","unitId","isWhitelisted","defaultMeta","blockContent","gradedLock","modalLock","showLock","verifiedLock","MMP2PMeta","_setMMP2PMeta","MMP2PIsFlyoverVisible","setMMP2PIsFlyoverVisible","setMMP2PMeta","flyover","isVisible","toggle","loadOptions","dispatch","getState","options","indexOf","models","coursewareMeta","courseHomeMeta","units","graded","length","config"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,SAAS,GAAG,uBAAW;AAC3BC,EAAAA,QAAQ,EAAE,QADiB;AAE3BC,EAAAA,cAAc,EAAE,gBAFW;AAG3BC,EAAAA,KAAK,EAAE,OAHoB;AAI3BC,EAAAA,MAAM,EAAE,QAJmB;AAK3BC,EAAAA,IAAI,EAAE;AALqB,CAAX,CAAlB;AAQA,IAAIC,QAAJ;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAY,qBAAoBF,QAAS,IAAGE,KAAM,EAApE;;AAEA,MAAMC,YAAY,GAAG,CAACD,KAAD,EAAQE,GAAR,KAAgB;AACnCC,EAAAA,MAAM,CAACJ,SAAS,CAACC,KAAD,CAAV,CAAN,GAA2BE,GAA3B;AACD,CAFD;;AAIA,MAAME,SAAS,GAAIJ,KAAD,IAAWG,MAAM,CAACJ,SAAS,CAACC,KAAD,CAAV,CAAnC;;AACA,MAAMK,gBAAgB,GAAG,CAACL,KAAD,EAAQE,GAAR,KACvBE,SAAS,CAACJ,KAAD,CAAT,KAAqBM,SAArB,GAAiCJ,GAAjC,GAAuCE,SAAS,CAACJ,KAAD,CADlD;;AAIA,MAAMO,uBAAuB,GAAG,CAACC,WAAD,EAAcC,GAAd,KAAuBC,KAAD,IAAW;AAC/DF,EAAAA,WAAW,CAACE,KAAD,CAAX;AACAT,EAAAA,YAAY,CAACQ,GAAD,EAAMC,KAAN,CAAZ;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,CACJ;AACEC,IAAAA,eAAe,EAAE,0BADnB;AAEEC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,SAAS,EAAE,iCADb;AAEEC,MAAAA,WAAW,EAAE,CACX,uEADW,EAEX,uFAFW,EAGX,sEAHW,EAIX,kEAJW,EAKX,yEALW,EAMX,uFANW;AAFf,KADO;AAFX,GADI;AADe,CAAvB;;AAqBA,MAAMC,cAAc,GAAG,MAAM;AAC3BnB,EAAAA,QAAQ,GAAG,OAAX;AAEA,QAAMoB,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,KADQ;AAEnBN,IAAAA,eAAe,EAAE;AAFE,GAArB;AAKA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkC,qBACtChB,gBAAgB,CAACb,SAAS,CAACG,KAAX,oBAAuBuB,YAAvB,EADsB,CAAxC;AAIAjB,EAAAA,YAAY,CAACT,SAAS,CAACC,QAAX,EAAsBoB,eAAD,IAAqB;AACpD,QAAIA,eAAe,KAAKP,SAAxB,EAAmC;AACjCe,MAAAA,eAAe,mBAAMH,YAAN,EAAf;AACD,KAFD,MAEO;AACLG,MAAAA,eAAe,CAAC;AACdF,QAAAA,SAAS,EAAE,IADG;AAEdN,QAAAA;AAFc,OAAD,CAAf;AAID;AACF,GATW,CAAZ;AAWA,SAAO;AACLlB,IAAAA,KAAK,EAAEyB;AADF,GAAP;AAGD,CA1BD;;;;AA4BA,MAAME,aAAa,GAAIC,QAAD,IAAc;AAClCzB,EAAAA,QAAQ,GAAG,MAAX;AAEA,QAAMoB,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,KADQ;AAEnBN,IAAAA,eAAe,EAAE,IAFE;AAGnBW,IAAAA,oBAAoB,EAAE;AAHH,GAArB;AAKA,QAAMC,aAAa,GAAG;AACpBC,IAAAA,OAAO,EAAE,KADW;AAEpBC,IAAAA,oBAAoB,EAAE,IAFF;AAGpBC,IAAAA,UAAU,EAAE,IAHQ;AAIpBC,IAAAA,KAAK,EAAE;AAJa,GAAtB;AAOA,QAAM,CAACT,YAAD,EAAeU,gBAAf,IAAmC,qBAASzB,gBAAgB,CAACb,SAAS,CAACG,KAAX,oBAAuBuB,YAAvB,EAAzB,CAAzC;AACA,QAAM,CAACa,WAAD,EAAcC,eAAd,IAAiC,qBAAS3B,gBAAgB,CAACb,SAAS,CAACI,MAAX,oBAAwB6B,aAAxB,EAAzB,CAAvC;AAEA,QAAMJ,eAAe,GAAGd,uBAAuB,CAACuB,gBAAD,EAAmBtC,SAAS,CAACG,KAA7B,CAA/C;AACA,QAAMsC,cAAc,GAAG1B,uBAAuB,CAACyB,eAAD,EAAkBxC,SAAS,CAACI,MAA5B,CAA9C;AAEA,QAAM;AAAEsC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAqC,0BAAS,SAAT,EAAoBZ,QAApB,CAA3C;;AAEA,QAAMa,UAAU,GAAG,MAAM;AACvB,QAAIF,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK5B,SAAtD,EAAiE;AAC/D2B,MAAAA,cAAc,CAAC;AACbP,QAAAA,OAAO,EAAE,IADI;AAEbC,QAAAA,oBAAoB,EAAEO,gBAAgB,CAACG,cAF1B;AAGbT,QAAAA,UAAU,EAAEM,gBAAgB,CAACN,UAHhB;AAIbC,QAAAA,KAAK,EAAIM,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK7B,SAA3C,GACH,GAAE6B,YAAY,CAACG,cAAe,GAAEH,YAAY,CAACN,KAAM,EADhD,GAEJ;AANS,OAAD,CAAd;AASD;AACF,GAZD;;AAcA,QAAMU,cAAc,GAAI1B,eAAD,IAAqB;AAC1C,QAAIA,eAAe,KAAKP,SAAxB,EAAmC;AACjCe,MAAAA,eAAe,mBAAMH,YAAN,EAAf;AACAe,MAAAA,cAAc,mBAAMR,aAAN,EAAd;AACD,KAHD,MAGO;AACLJ,MAAAA,eAAe,CAAC;AACdF,QAAAA,SAAS,EAAE,IADG;AAEdN,QAAAA,eAFc;AAGdW,QAAAA,oBAAoB,EAAE,IAAIgB,IAAJ,KAAa,IAAIA,IAAJ,CAAS3B,eAAT;AAHrB,OAAD,CAAf;AAKAuB,MAAAA,UAAU;AACX;AACF,GAZD;;AAcAnC,EAAAA,YAAY,CAACT,SAAS,CAACC,QAAX,EAAqB8C,cAArB,CAAZ;AAEA,SAAO;AACL5C,IAAAA,KAAK,EAAEyB,YADF;AAELxB,IAAAA,MAAM,EAAEmC;AAFH,GAAP;AAID,CAzDD;;;;AA2DA,MAAMU,mBAAmB,GAAG,CAAClB,QAAD,EAAWmB,UAAX,EAAuBC,MAAvB,KAAkC;AAC5D7C,EAAAA,QAAQ,GAAG,QAAX;AAEA,QAAMoB,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,KADQ;AAEnBN,IAAAA,eAAe,EAAE,IAFE;AAGnBW,IAAAA,oBAAoB,EAAE,KAHH;AAInBR,IAAAA,WAAW,EAAE,EAJM;AAKnB4B,IAAAA,aAAa,EAAE;AALI,GAArB;AAOA,QAAMnB,aAAa,GAAG;AACpBC,IAAAA,OAAO,EAAE,KADW;AAEpBC,IAAAA,oBAAoB,EAAE,IAFF;AAGpBC,IAAAA,UAAU,EAAE,IAHQ;AAIpBC,IAAAA,KAAK,EAAE;AAJa,GAAtB;AAMA,QAAMgB,WAAW,GAAG;AAClBC,IAAAA,YAAY,EAAE,KADI;AAElBC,IAAAA,UAAU,EAAE,KAFM;AAGlBC,IAAAA,SAAS,EAAE,KAHO;AAIlBC,IAAAA,QAAQ,EAAE,KAJQ;AAKlBC,IAAAA,YAAY,EAAE;AALI,GAApB;AAQA,QAAM,CAAC9B,YAAD,EAAeU,gBAAf,IAAmC,qBAASzB,gBAAgB,CAACb,SAAS,CAACG,KAAX,oBAAuBuB,YAAvB,EAAzB,CAAzC;AACA,QAAM,CAACa,WAAD,EAAcC,eAAd,IAAiC,qBAAS3B,gBAAgB,CAACb,SAAS,CAACI,MAAX,oBAAwB6B,aAAxB,EAAzB,CAAvC;AACA,QAAM,CAAC0B,SAAD,EAAYC,aAAZ,IAA6B,qBAAS/C,gBAAgB,CAACb,SAAS,CAACK,IAAX,oBAAsBgD,WAAtB,EAAzB,CAAnC;AACA,QAAM,CAACQ,qBAAD,EAAwBC,wBAAxB,IAAoD,qBACxDjD,gBAAgB,CAACb,SAAS,CAACE,cAAX,EAA2B,CAAC,sBAA5B,CADwC,CAA1D;AAIA,QAAM2B,eAAe,GAAGd,uBAAuB,CAACuB,gBAAD,EAAmBtC,SAAS,CAACG,KAA7B,CAA/C;AACA,QAAMsC,cAAc,GAAG1B,uBAAuB,CAACyB,eAAD,EAAkBxC,SAAS,CAACI,MAA5B,CAA9C;AACA,QAAM2D,YAAY,GAAGhD,uBAAuB,CAAC6C,aAAD,EAAgB5D,SAAS,CAACK,IAA1B,CAA5C;AAEA,QAAM2D,OAAO,GAAG;AACdC,IAAAA,SAAS,EAAEJ,qBADG;AAEdK,IAAAA,MAAM,EAAE,MAAM;AACZJ,MAAAA,wBAAwB,CAAC,CAACD,qBAAF,CAAxB;AACApD,MAAAA,YAAY,CAACT,SAAS,CAACE,cAAX,EAA2B,CAAC2D,qBAA5B,CAAZ;AACD;AALa,GAAhB;;AAQA,QAAMM,WAAW,GAAG,CAAC9C,eAAD,EAAkBG,WAAlB,KAAkC,CAAC4C,QAAD,EAAWC,QAAX,KAAwB;AAC5E,UAAMlE,KAAK,GAAGkE,QAAQ,EAAtB;AAEA,UAAMC,OAAO,GAAG;AACd3C,MAAAA,SAAS,EAAE,IADG;AAEdN,MAAAA,eAFc;AAGdW,MAAAA,oBAAoB,EAAE,IAAIgB,IAAJ,KAAa,IAAIA,IAAJ,CAAS3B,eAAT,CAHrB;AAId+B,MAAAA,aAAa,EAAE5B,WAAW,CAAC+C,OAAZ,CAAoBrB,UAApB,IAAkC,CAAC;AAJpC,KAAhB;AAMArB,IAAAA,eAAe,CAACyC,OAAD,CAAf;AAEA,UAAME,MAAM,GAAG;AACbC,MAAAA,cAAc,EAAEtE,KAAK,CAACqE,MAAN,CAAaC,cAAb,CAA4B1C,QAA5B,CADH;AAEb2C,MAAAA,cAAc,EAAEvE,KAAK,CAACqE,MAAN,CAAaE,cAAb,CAA4B3C,QAA5B,CAFH;AAGb4C,MAAAA,KAAK,EAAExE,KAAK,CAACqE,MAAN,CAAaG,KAAb,CAAmBxB,MAAnB;AAHM,KAAf;AAKA,UAAM;AAAET,MAAAA;AAAF,QAAuB8B,MAAM,CAACC,cAApC;AACA,UAAM;AAAE9B,MAAAA;AAAF,QAAmB6B,MAAM,CAACE,cAAhC;AACA,UAAME,MAAM,GAAGJ,MAAM,CAACG,KAAP,KAAiB7D,SAAjB,GAA6B0D,MAAM,CAACG,KAAP,CAAaC,MAA1C,GAAmD,KAAlE;AAEA,QAAIxE,MAAM,GAAG,EAAb;;AACA,QAAIsC,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK5B,SAAtD,EAAiE;AAC/DV,MAAAA,MAAM,GAAG;AACP8B,QAAAA,OAAO,EAAE,IADF;AAEPC,QAAAA,oBAAoB,EAAEO,gBAAgB,CAACG,cAFhC;AAGPT,QAAAA,UAAU,EAAEM,gBAAgB,CAACN,UAHtB;AAIPC,QAAAA,KAAK,EAAIM,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK7B,SAA3C,GACH,GAAE6B,YAAY,CAACG,cAAe,GAAEH,YAAY,CAACN,KAAM,EADhD,GAEJ;AANG,OAAT;AASAI,MAAAA,cAAc,CAACrC,MAAD,CAAd;AACD;;AACD,UAAMC,IAAI,GAAG;AACXqD,MAAAA,YAAY,EAAGtD,MAAM,CAAC8B,OAAP,IAAkB,CAACoC,OAAO,CAAClB,aAD/B;AAEXG,MAAAA,UAAU,EAAGnD,MAAM,CAAC8B,OAAP,IAAkBoC,OAAO,CAAClB,aAA1B,IAA2CwB,MAF7C;AAGXpB,MAAAA,SAAS,EAAGpD,MAAM,CAAC8B,OAAP,IAAkB,CAACoC,OAAO,CAAClB,aAA3B,IAA4CkB,OAAO,CAACtC;AAHrD,KAAb;AAKA3B,IAAAA,IAAI,CAACoD,QAAL,GAAiBa,OAAO,CAAC3C,SAAR,KAAsBtB,IAAI,CAACqD,YAAL,IAAqBrD,IAAI,CAACkD,UAAhD,CAAjB;AACAlD,IAAAA,IAAI,CAACiD,YAAL,GAAqBgB,OAAO,CAAC3C,SAAR,IAAqBtB,IAAI,CAACqD,YAA/C;AACAK,IAAAA,YAAY,CAAC1D,IAAD,CAAZ;AACD,GAzCD;;AA2CA,QAAM+D,QAAQ,GAAG,8BAAjB;;AACA,QAAMrB,cAAc,GAAG,CAAC1B,eAAD,EAAkBG,WAAlB,KAAkC;AACvD,QAAIA,WAAW,CAACqD,MAAZ,KAAuB/D,SAAvB,IAAoCU,WAAW,CAACqD,MAAZ,GAAqB,CAA7D,EAAgE;AAC9DT,MAAAA,QAAQ,CAACD,WAAW,CAAC9C,eAAD,EAAkBG,WAAlB,CAAZ,CAAR;AACD,KAFD,MAEO;AACLK,MAAAA,eAAe,mBAAMH,YAAN,EAAf;AACAe,MAAAA,cAAc,mBAAMR,aAAN,EAAd;AACA8B,MAAAA,YAAY,mBAAMV,WAAN,EAAZ;AACD;AACF,GARD;;AAUA5C,EAAAA,YAAY,CAACT,SAAS,CAACC,QAAX,EAAqB8C,cAArB,CAAZ,CAjG4D,CAmG5D;;AACAtC,EAAAA,YAAY,CAAC,gBAAD,EAAmBU,cAAnB,CAAZ;AAEA,QAAM2D,MAAM,GAAG;AACb1E,IAAAA,MAAM,EAAEmC,WADK;AAEbyB,IAAAA,OAFa;AAGb3D,IAAAA,IAAI,EAAEsD,SAHO;AAIbxD,IAAAA,KAAK,EAAEyB;AAJM,GAAf;AAOA,SAAOkD,MAAP;AACD,CA9GD","sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useModel } from '../../generic/model-store';\n\nimport MMP2PBlockModal from './BlockModal';\nimport MMP2PFlyover from './Flyover';\nimport MMP2PFlyoverMobile from './FlyoverMobile';\nimport MMP2PFlyoverTrigger from './FlyoverTrigger';\nimport MMP2PFlyoverTriggerMobile from './FlyoverTriggerMobile';\nimport MMP2PLockPaywall from './LockPaywall';\nimport MMP2PSidecard from './Sidecard';\n\nimport { isMobile, StrictDict } from './utils';\n\nconst MMP2PKeys = StrictDict({\n  enableFn: 'enable',\n  flyoverVisible: 'flyoverVisible',\n  state: 'state',\n  access: 'access',\n  meta: 'meta',\n});\n\nlet location;\nconst windowKey = (field) => `experiment__mmp2p_${location}_${field}`;\n\nconst setWindowVal = (field, val) => {\n  window[windowKey(field)] = val;\n};\n\nconst windowVal = (field) => window[windowKey(field)];\nconst defaultWindowVal = (field, val) => (\n  windowVal(field) === undefined ? val : windowVal(field)\n);\n\nconst createWindowStateSetter = (stateSetter, key) => (value) => {\n  stateSetter(value);\n  setWindowVal(key, value);\n};\n\nconst externalConfig = {\n  runs: [\n    {\n      upgradeDeadline: 'Mar 29 2021 11:59 PM EST',\n      courses: [\n        {\n          courseRun: 'course-v1:edX+DemoX+Demo_Course',\n          subSections: [\n            'block-v1:edX+DemoX+Demo_Course+type@sequential+block@edx_introduction',\n            'block-v1:edX+DemoX+Demo_Course+type@sequential+block@19a30717eff543078a5d94ae9d6c18a5',\n            'block-v1:edX+DemoX+Demo_Course+type@sequential+block@basic_questions',\n            'block-v1:edX+DemoX+Demo_Course+type@sequential+block@simulations',\n            'block-v1:edX+DemoX+Demo_Course+type@sequential+block@graded_simulations',\n            'block-v1:edX+DemoX+Demo_Course+type@sequential+block@175e76c4951144a29d46211361266e0e',\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nconst initDatesMMP2P = () => {\n  location = 'dates';\n\n  const defaultState = {\n    isEnabled: false,\n    upgradeDeadline: null,\n  };\n\n  const [MMP2POptions, setMMP2POptions] = useState(\n    defaultWindowVal(MMP2PKeys.state, { ...defaultState }),\n  );\n\n  setWindowVal(MMP2PKeys.enableFn, (upgradeDeadline) => {\n    if (upgradeDeadline === undefined) {\n      setMMP2POptions({ ...defaultState });\n    } else {\n      setMMP2POptions({\n        isEnabled: true,\n        upgradeDeadline,\n      });\n    }\n  });\n\n  return {\n    state: MMP2POptions,\n  };\n};\n\nconst initHomeMMP2P = (courseId) => {\n  location = 'home';\n\n  const defaultState = {\n    isEnabled: false,\n    upgradeDeadline: null,\n    afterUpgradeDeadline: false,\n  };\n  const defaultAccess = {\n    isAudit: false,\n    accessExpirationDate: null,\n    upgradeUrl: null,\n    price: null,\n  };\n\n  const [MMP2POptions, _setMMP2POptions] = useState(defaultWindowVal(MMP2PKeys.state, { ...defaultState }));\n  const [MMP2PAccess, _setMMP2PAccess] = useState(defaultWindowVal(MMP2PKeys.access, { ...defaultAccess }));\n\n  const setMMP2POptions = createWindowStateSetter(_setMMP2POptions, MMP2PKeys.state);\n  const setMMP2PAccess = createWindowStateSetter(_setMMP2PAccess, MMP2PKeys.access);\n\n  const { accessExpiration, verifiedMode } = useModel('outline', courseId);\n\n  const loadAccess = () => {\n    if (accessExpiration !== null && accessExpiration !== undefined) {\n      setMMP2PAccess({\n        isAudit: true,\n        accessExpirationDate: accessExpiration.expirationDate,\n        upgradeUrl: accessExpiration.upgradeUrl,\n        price: ((verifiedMode !== null && verifiedMode !== undefined)\n          ? `${verifiedMode.currencySymbol}${verifiedMode.price}`\n          : ''\n        ),\n      });\n    }\n  };\n\n  const enableFunction = (upgradeDeadline) => {\n    if (upgradeDeadline === undefined) {\n      setMMP2POptions({ ...defaultState });\n      setMMP2PAccess({ ...defaultAccess });\n    } else {\n      setMMP2POptions({\n        isEnabled: true,\n        upgradeDeadline,\n        afterUpgradeDeadline: new Date() > new Date(upgradeDeadline),\n      });\n      loadAccess();\n    }\n  };\n\n  setWindowVal(MMP2PKeys.enableFn, enableFunction);\n\n  return {\n    state: MMP2POptions,\n    access: MMP2PAccess,\n  };\n};\n\nconst initCoursewareMMP2P = (courseId, sequenceId, unitId) => {\n  location = 'course';\n\n  const defaultState = {\n    isEnabled: false,\n    upgradeDeadline: null,\n    afterUpgradeDeadline: false,\n    subSections: [],\n    isWhitelisted: false,\n  };\n  const defaultAccess = {\n    isAudit: false,\n    accessExpirationDate: null,\n    upgradeUrl: null,\n    price: null,\n  };\n  const defaultMeta = {\n    blockContent: false,\n    gradedLock: false,\n    modalLock: false,\n    showLock: false,\n    verifiedLock: false,\n  };\n\n  const [MMP2POptions, _setMMP2POptions] = useState(defaultWindowVal(MMP2PKeys.state, { ...defaultState }));\n  const [MMP2PAccess, _setMMP2PAccess] = useState(defaultWindowVal(MMP2PKeys.access, { ...defaultAccess }));\n  const [MMP2PMeta, _setMMP2PMeta] = useState(defaultWindowVal(MMP2PKeys.meta, { ...defaultMeta }));\n  const [MMP2PIsFlyoverVisible, setMMP2PIsFlyoverVisible] = useState(\n    defaultWindowVal(MMP2PKeys.flyoverVisible, !isMobile()),\n  );\n\n  const setMMP2POptions = createWindowStateSetter(_setMMP2POptions, MMP2PKeys.state);\n  const setMMP2PAccess = createWindowStateSetter(_setMMP2PAccess, MMP2PKeys.access);\n  const setMMP2PMeta = createWindowStateSetter(_setMMP2PMeta, MMP2PKeys.meta);\n\n  const flyover = {\n    isVisible: MMP2PIsFlyoverVisible,\n    toggle: () => {\n      setMMP2PIsFlyoverVisible(!MMP2PIsFlyoverVisible);\n      setWindowVal(MMP2PKeys.flyoverVisible, !MMP2PIsFlyoverVisible);\n    },\n  };\n\n  const loadOptions = (upgradeDeadline, subSections) => (dispatch, getState) => {\n    const state = getState();\n\n    const options = {\n      isEnabled: true,\n      upgradeDeadline,\n      afterUpgradeDeadline: new Date() > new Date(upgradeDeadline),\n      isWhitelisted: subSections.indexOf(sequenceId) > -1,\n    };\n    setMMP2POptions(options);\n\n    const models = {\n      coursewareMeta: state.models.coursewareMeta[courseId],\n      courseHomeMeta: state.models.courseHomeMeta[courseId],\n      units: state.models.units[unitId],\n    };\n    const { accessExpiration } = models.coursewareMeta;\n    const { verifiedMode } = models.courseHomeMeta;\n    const graded = models.units !== undefined ? models.units.graded : false;\n\n    let access = {};\n    if (accessExpiration !== null && accessExpiration !== undefined) {\n      access = {\n        isAudit: true,\n        accessExpirationDate: accessExpiration.expirationDate,\n        upgradeUrl: accessExpiration.upgradeUrl,\n        price: ((verifiedMode !== null && verifiedMode !== undefined)\n          ? `${verifiedMode.currencySymbol}${verifiedMode.price}`\n          : ''\n        ),\n      };\n      setMMP2PAccess(access);\n    }\n    const meta = {\n      verifiedLock: (access.isAudit && !options.isWhitelisted),\n      gradedLock: (access.isAudit && options.isWhitelisted && graded),\n      modalLock: (access.isAudit && !options.isWhitelisted && options.afterUpgradeDeadline),\n    };\n    meta.showLock = (options.isEnabled && (meta.verifiedLock || meta.gradedLock));\n    meta.blockContent = (options.isEnabled && meta.verifiedLock);\n    setMMP2PMeta(meta);\n  };\n\n  const dispatch = useDispatch();\n  const enableFunction = (upgradeDeadline, subSections) => {\n    if (subSections.length !== undefined && subSections.length > 0) {\n      dispatch(loadOptions(upgradeDeadline, subSections));\n    } else {\n      setMMP2POptions({ ...defaultState });\n      setMMP2PAccess({ ...defaultAccess });\n      setMMP2PMeta({ ...defaultMeta });\n    }\n  };\n\n  setWindowVal(MMP2PKeys.enableFn, enableFunction);\n\n  // testing\n  setWindowVal('externalConfig', externalConfig);\n\n  const config = {\n    access: MMP2PAccess,\n    flyover,\n    meta: MMP2PMeta,\n    state: MMP2POptions,\n  };\n\n  return config;\n};\n\nexport {\n  MMP2PBlockModal,\n  MMP2PFlyover,\n  MMP2PFlyoverMobile,\n  MMP2PFlyoverTrigger,\n  MMP2PFlyoverTriggerMobile,\n  MMP2PLockPaywall,\n  MMP2PSidecard,\n  initCoursewareMMP2P,\n  initHomeMMP2P,\n  initDatesMMP2P,\n};\n"],"file":"index.js"}