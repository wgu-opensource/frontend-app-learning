{"version":3,"sources":["../../../src/experiments/mm-p2p/FlyoverTriggerMobile.jsx"],"names":["FlyoverTriggerMobile","options","isVisible","toggle","flyover","access","isAudit","state","afterUpgradeDeadline","propTypes","PropTypes","shape","bool","isRequired","func","defaultProps"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;AANA;AAQA,MAAMA,oBAAoB,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC5C,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwBF,OAAO,CAACG,OAAtC;;AACA,MAAI,CAACH,OAAO,CAACI,MAAR,CAAeC,OAAhB,IAA2BL,OAAO,CAACM,KAAR,CAAcC,oBAA7C,EAAmE;AACjE,WAAO,IAAP;AACD;;AACD,SAAQ,uCACN;AACE,IAAA,SAAS,EAAE,yBACT,oCADS,EAET;AAAE,yBAAmBN;AAArB,KAFS,CADb;AAKE,mBAAY,MALd;AAME,IAAA,OAAO,EAAEC,MANX;AAAA,2BAQE,qBAAC,2BAAD;AARF,IADF;AAYD,CAjBD;;AAmBAH,oBAAoB,CAACS,SAArB,GAAiC;AAC/BR,EAAAA,OAAO,EAAES,mBAAUC,KAAV,CAAgB;AACvBN,IAAAA,MAAM,EAAEK,mBAAUC,KAAV,CAAgB;AACtBL,MAAAA,OAAO,EAAEI,mBAAUE,IAAV,CAAeC;AADF,KAAhB,CADe;AAIvBT,IAAAA,OAAO,EAAEM,mBAAUC,KAAV,CAAgB;AACvBT,MAAAA,SAAS,EAAEQ,mBAAUE,IAAV,CAAeC,UADH;AAEvBV,MAAAA,MAAM,EAAEO,mBAAUI,IAAV,CAAeD;AAFA,KAAhB,CAJc;AAQvBN,IAAAA,KAAK,EAAEG,mBAAUC,KAAV,CAAgB;AACrBH,MAAAA,oBAAoB,EAAEE,mBAAUE,IAAV,CAAeC;AADhB,KAAhB;AARgB,GAAhB;AADsB,CAAjC;AAeAb,oBAAoB,CAACe,YAArB,GAAoC;AAClCd,EAAAA,OAAO,EAAE;AACPI,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADD;AAEPF,IAAAA,OAAO,EAAE;AACPF,MAAAA,SAAS,EAAE,IADJ;AAEPC,MAAAA,MAAM,EAAE,MAAM,CAAE;AAFT,KAFF;AAMPI,IAAAA,KAAK,EAAE;AAAEC,MAAAA,oBAAoB,EAAE;AAAxB;AANA;AADyB,CAApC;eAWeR,oB","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport FlyoverTriggerIcon from './FlyoverTriggerIcon';\nimport { isMobile } from './utils';\n\nconst FlyoverTriggerMobile = ({ options }) => {\n  const { isVisible, toggle } = options.flyover;\n  if (!options.access.isAudit || options.state.afterUpgradeDeadline) {\n    return null;\n  }\n  return (isMobile() && (\n    <div\n      className={classNames(\n        'mmp2p-toggle-flyover-button-mobile',\n        { 'flyover-visible': isVisible },\n      )}\n      aria-hidden=\"true\"\n      onClick={toggle}\n    >\n      <FlyoverTriggerIcon />\n    </div>\n  ));\n};\n\nFlyoverTriggerMobile.propTypes = {\n  options: PropTypes.shape({\n    access: PropTypes.shape({\n      isAudit: PropTypes.bool.isRequired,\n    }),\n    flyover: PropTypes.shape({\n      isVisible: PropTypes.bool.isRequired,\n      toggle: PropTypes.func.isRequired,\n    }),\n    state: PropTypes.shape({\n      afterUpgradeDeadline: PropTypes.bool.isRequired,\n    }),\n  }),\n};\n\nFlyoverTriggerMobile.defaultProps = {\n  options: {\n    access: { isAudit: false },\n    flyover: {\n      isVisible: true,\n      toggle: () => {},\n    },\n    state: { afterUpgradeDeadline: false },\n  },\n};\n\nexport default FlyoverTriggerMobile;\n"],"file":"FlyoverTriggerMobile.js"}