{"version":3,"sources":["../../../src/experiments/mm-p2p/LockPaywall.jsx"],"names":["LockPaywallContent","React","lazy","LockPaywall","options","meta","gradedLock","verifiedLock","propTypes","PropTypes","shape","access","upgradeUrl","string","isRequired","price","bool","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;AAEA,MAAMA,kBAAkB,gBAAGC,eAAMC,IAAN,CAAW,mEAAa,sBAAb,GAAX,CAA3B;;AAEA,MAAMC,WAAW,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;;AACnC,MAAI,EAAEA,OAAO,CAACC,IAAR,CAAaC,UAAb,IAA2BF,OAAO,CAACC,IAAR,CAAaE,YAA1C,CAAJ,EAA6D;AAC3D,WAAO,IAAP;AACD;;AACD,sBACE,qBAAC,eAAD;AACE,IAAA,QAAQ,eAAG,qBAAC,oBAAD;AAAa,MAAA,SAAS,EAAC;AAAvB,MADb;AAAA,2BAGE,qBAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEH;AAA7B;AAHF,IADF;AAOD,CAXD;;AAYAD,WAAW,CAACK,SAAZ,GAAwB;AACtBJ,EAAAA,OAAO,EAAEK,mBAAUC,KAAV,CAAgB;AACvBC,IAAAA,MAAM,EAAEF,mBAAUC,KAAV,CAAgB;AACtBE,MAAAA,UAAU,EAAEH,mBAAUI,MAAV,CAAiBC,UADP;AAEtBC,MAAAA,KAAK,EAAEN,mBAAUI,MAAV,CAAiBC;AAFF,KAAhB,CADe;AAKvBT,IAAAA,IAAI,EAAEI,mBAAUC,KAAV,CAAgB;AACpBJ,MAAAA,UAAU,EAAEG,mBAAUO,IAAV,CAAeF,UADP;AAEpBP,MAAAA,YAAY,EAAEE,mBAAUO,IAAV,CAAeF;AAFT,KAAhB;AALiB,GAAhB;AADa,CAAxB;AAaAX,WAAW,CAACc,YAAZ,GAA2B;AACzBb,EAAAA,OAAO,EAAE;AACPO,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE,EADN;AAENG,MAAAA,KAAK,EAAE;AAFD,KADD;AAKPV,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE,KADR;AAEJC,MAAAA,YAAY,EAAE;AAFV;AALC;AADgB,CAA3B;eAYeJ,W","sourcesContent":["import React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PageLoading from '../../generic/PageLoading';\n\nconst LockPaywallContent = React.lazy(() => import('./LockPaywallContent'));\n\nconst LockPaywall = ({ options }) => {\n  if (!(options.meta.gradedLock || options.meta.verifiedLock)) {\n    return null;\n  }\n  return (\n    <Suspense\n      fallback={(<PageLoading srMessage=\"Loading locked content messaging...\" />)}\n    >\n      <LockPaywallContent options={options} />\n    </Suspense>\n  );\n};\nLockPaywall.propTypes = {\n  options: PropTypes.shape({\n    access: PropTypes.shape({\n      upgradeUrl: PropTypes.string.isRequired,\n      price: PropTypes.string.isRequired,\n    }),\n    meta: PropTypes.shape({\n      gradedLock: PropTypes.bool.isRequired,\n      verifiedLock: PropTypes.bool.isRequired,\n    }),\n  }),\n};\n\nLockPaywall.defaultProps = {\n  options: {\n    access: {\n      upgradeUrl: '',\n      price: '$23',\n    },\n    meta: {\n      gradedLock: false,\n      verifiedLock: false,\n    },\n  },\n};\nexport default LockPaywall;\n"],"file":"LockPaywall.js"}