{"version":3,"file":"courseBlocks.factory.js","names":["_rosie","require","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","getIds","attr","blocks","Array","isArray","map","block","id","getBlocks","reduce","acc","Factory","define","option","courseId","build","type","units","children","sequences","sections","course","buildSimpleCourseBlocks","title","options","unitBlocks","sequenceBlocks","sectionBlocks","courseBlock","display_name","courseBlocks","hasScheduledContent","buildMinimalCourseBlocks","effort_activities","effort_time","complete","resume_block","resumeBlock","has_scheduled_content","buildBinaryCourseBlocks","sectionTree","sequenceTree","unitTree","sectionIndex","sequenceIndex","unitIndex"],"sources":["../../../../src/shared/data/__factories__/courseBlocks.factory.js"],"sourcesContent":["import { Factory } from 'rosie'; // eslint-disable-line import/no-extraneous-dependencies\nimport './block.factory';\n\n// Most of this file can be removed at some point, now that we rarely use course blocks\n// in favor of learning sequences. But for now, these are mostly used to then feed into\n// buildOutlineFromBlocks, which is an awkward flow if we don't really care about the\n// course blocks themselves. A future cleanup to do.\n\n// Generates an Array of block IDs, either from a single block or an array of blocks.\nconst getIds = (attr) => {\n  const blocks = Array.isArray(attr) ? attr : [attr];\n  return blocks.map(block => block.id);\n};\n\n// Generates an Object in { [block.id]: block } format, either from a single block or an array of blocks.\nconst getBlocks = (attr) => {\n  const blocks = Array.isArray(attr) ? attr : [attr];\n  // eslint-disable-next-line no-return-assign,no-sequences\n  return blocks.reduce((acc, block) => (acc[block.id] = block, acc), {});\n};\n\nFactory.define('courseBlocks')\n  .option('courseId', 'course-v1:edX+DemoX+Demo_Course')\n  .option('units', ['courseId'], courseId => [\n    Factory.build(\n      'block',\n      { type: 'vertical' },\n      { courseId },\n    ),\n  ])\n  .option('sequences', ['courseId', 'units'], (courseId, units) => [\n    Factory.build(\n      'block',\n      { type: 'sequential', children: getIds(units) },\n      { courseId },\n    ),\n  ])\n  .option('sections', ['courseId', 'sequences'], (courseId, sequences) => [\n    Factory.build(\n      'block',\n      { type: 'chapter', children: getIds(sequences) },\n      { courseId },\n    ),\n  ])\n  .option('course', ['courseId', 'sections'], (courseId, sections) => Factory.build(\n    'block',\n    { type: 'course', children: getIds(sections) },\n    { courseId },\n  ))\n  .attr(\n    'blocks',\n    ['course', 'sections', 'sequences', 'units'],\n    (course, sections, sequences, units) => ({\n      [course.id]: course,\n      ...getBlocks(sections),\n      ...getBlocks(sequences),\n      ...getBlocks(units),\n    }),\n  )\n  .attr('root', ['course'], course => course.id);\n\n/**\n * Builds a course with a single chapter, sequence, and unit.\n */\nexport function buildSimpleCourseBlocks(courseId, title, options = {}) {\n  const unitBlocks = options.unitBlocks || [Factory.build(\n    'block',\n    { type: 'vertical' },\n    { courseId },\n  )];\n  const sequenceBlocks = options.sequenceBlocks || [Factory.build(\n    'block',\n    { type: 'sequential', children: unitBlocks.map(block => block.id) },\n    { courseId },\n  )];\n  const sectionBlocks = options.sectionBlocks || [Factory.build(\n    'block',\n    { type: 'chapter', children: sequenceBlocks.map(block => block.id) },\n    { courseId },\n  )];\n  const courseBlock = options.courseBlock || Factory.build(\n    'block',\n    { type: 'course', display_name: title, children: sectionBlocks.map(block => block.id) },\n    { courseId },\n  );\n  return {\n    courseBlocks: options.courseBlocks || Factory.build(\n      'courseBlocks',\n      {\n        courseId,\n        hasScheduledContent: options.hasScheduledContent || false,\n        title,\n      },\n      {\n        units: unitBlocks,\n        sequences: sequenceBlocks,\n        sections: sectionBlocks,\n        course: courseBlock,\n      },\n    ),\n    unitBlocks,\n    sequenceBlocks,\n    sectionBlocks,\n    courseBlock,\n  };\n}\n\n/**\n * Builds a course with a single chapter and sequence, but no units.\n */\nexport function buildMinimalCourseBlocks(courseId, title, options = {}) {\n  const sequenceBlocks = options.sequenceBlocks || [Factory.build(\n    'block',\n    {\n      display_name: 'Title of Sequence',\n      effort_activities: 2,\n      effort_time: 15,\n      type: 'sequential',\n    },\n    { courseId },\n  )];\n  const sectionBlocks = options.sectionBlocks || [Factory.build(\n    'block',\n    {\n      type: 'chapter',\n      display_name: 'Title of Section',\n      complete: options.complete || false,\n      resume_block: options.resumeBlock || false,\n      children: sequenceBlocks.map(block => block.id),\n    },\n    { courseId },\n  )];\n  const courseBlock = options.courseBlock || Factory.build(\n    'block',\n    {\n      type: 'course',\n      display_name: title,\n      has_scheduled_content: options.hasScheduledContent || false,\n      children: sectionBlocks.map(block => block.id),\n    },\n    { courseId },\n  );\n  return {\n    courseBlocks: options.courseBlocks || Factory.build(\n      'courseBlocks',\n      { courseId },\n      {\n        sequences: sequenceBlocks,\n        sections: sectionBlocks,\n        course: courseBlock,\n        units: [],\n      },\n    ),\n    unitBlocks: [],\n    sequenceBlocks,\n    sectionBlocks,\n    courseBlock,\n  };\n}\n\n/**\n * Builds a course with two branches at each node. That is:\n *\n *                  Crs\n *                   |\n *        Sec--------+-------Sec\n *         |                  |\n *   Seq---+---Seq      Seq---+---Seq\n *    |         |        |         |\n * U--+--U   U--+--U  U--+--U   U--+--U\n *                          ^\n *\n * Each left branch is indexed 0, and each right branch is indexed 1.\n * So, the caret in the diagram above is pointing to `unitTree[1][0][1]`,\n * whose parent is `sequenceTree[1][0]`, whose parent is `sectionTree[1]`.\n */\nexport function buildBinaryCourseBlocks(courseId, title) {\n  const sectionTree = [];\n  const sequenceTree = [[], []];\n  const unitTree = [[[], []], [[], []]];\n  [0, 1].forEach(sectionIndex => {\n    [0, 1].forEach(sequenceIndex => {\n      [0, 1].forEach(unitIndex => {\n        unitTree[sectionIndex][sequenceIndex][unitIndex] = Factory.build(\n          'block',\n          { type: 'vertical' },\n          { courseId },\n        );\n      });\n      sequenceTree[sectionIndex][sequenceIndex] = Factory.build(\n        'block',\n        { type: 'sequential', children: unitTree[sectionIndex][sequenceIndex].map(block => block.id) },\n        { courseId },\n      );\n    });\n    sectionTree[sectionIndex] = Factory.build(\n      'block',\n      { type: 'chapter', children: sequenceTree[sectionIndex].map(block => block.id) },\n      { courseId },\n    );\n  });\n  const courseBlock = Factory.build(\n    'block',\n    { type: 'course', display_name: title, children: sectionTree.map(block => block.id) },\n    { courseId },\n  );\n  const sectionBlocks = [\n    sectionTree[0],\n    sectionTree[1],\n  ];\n  const sequenceBlocks = [\n    sequenceTree[0][0],\n    sequenceTree[0][1],\n    sequenceTree[1][0],\n    sequenceTree[1][1],\n  ];\n  const unitBlocks = [\n    unitTree[0][0][0],\n    unitTree[0][0][1],\n    unitTree[0][1][0],\n    unitTree[0][1][1],\n    unitTree[1][0][0],\n    unitTree[1][0][1],\n    unitTree[1][1][0],\n    unitTree[1][1][1],\n  ];\n  return {\n    // Expose blocks as a combined list, lists separated by type, and as\n    // trees separated by type. The caller can decide which they want to\n    // work with.\n    courseBlocks: Factory.build(\n      'courseBlocks',\n      { courseId, title },\n      {\n        units: unitBlocks,\n        sequences: sequenceBlocks,\n        sections: sectionBlocks,\n        course: courseBlock,\n      },\n    ),\n    unitBlocks,\n    sequenceBlocks,\n    sectionBlocks,\n    courseBlock,\n    unitTree,\n    sequenceTree,\n    sectionTree,\n  };\n}\n"],"mappings":"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"}