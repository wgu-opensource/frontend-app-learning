{"version":3,"sources":["../../src/shared/links.jsx"],"names":["IntlDashboardLink","intl","LMS_BASE_URL","formatMessage","messages","dashboardLink","propTypes","intlShape","isRequired","IntlIdVerificationSupportLink","SUPPORT_URL_ID_VERIFICATION","idVerificationSupportLink","IntlProfileLink","username","profileLink","DashboardLink","IdVerificationSupportLink","ProfileLink"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAEA,SAASA,iBAAT,OAAqC;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACnC,sBACE,qBAAC,kBAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,WAAW,EAAG,GAAE,mCAAYC,YAAa,YAH3C;AAAA,cAKGD,IAAI,CAACE,aAAL,CAAmBC,kBAASC,aAA5B;AALH,IADF;AASD;;AAEDL,iBAAiB,CAACM,SAAlB,GAA8B;AAC5BL,EAAAA,IAAI,EAAEM,gBAAUC;AADY,CAA9B;;AAIA,SAASC,6BAAT,QAAiD;AAAA,MAAV;AAAER,IAAAA;AAAF,GAAU;;AAC/C,MAAI,CAAC,mCAAYS,2BAAjB,EAA8C;AAC5C,WAAO,IAAP;AACD;;AACD,sBACE,qBAAC,kBAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,WAAW,EAAE,mCAAYA,2BAH3B;AAAA,cAKGT,IAAI,CAACE,aAAL,CAAmBC,kBAASO,yBAA5B;AALH,IADF;AASD;;AAEDF,6BAA6B,CAACH,SAA9B,GAA0C;AACxCL,EAAAA,IAAI,EAAEM,gBAAUC;AADwB,CAA1C;;AAIA,SAASI,eAAT,QAAmC;AAAA,MAAV;AAAEX,IAAAA;AAAF,GAAU;AACjC,QAAM;AAAEY,IAAAA;AAAF,MAAe,iCAArB;AAEA,sBACE,qBAAC,kBAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,WAAW,EAAG,GAAE,mCAAYX,YAAa,MAAKW,QAAS,EAHzD;AAAA,cAKGZ,IAAI,CAACE,aAAL,CAAmBC,kBAASU,WAA5B;AALH,IADF;AASD;;AAEDF,eAAe,CAACN,SAAhB,GAA4B;AAC1BL,EAAAA,IAAI,EAAEM,gBAAUC;AADU,CAA5B;AAIA,MAAMO,aAAa,GAAG,sBAAWf,iBAAX,CAAtB;;AACA,MAAMgB,yBAAyB,GAAG,sBAAWP,6BAAX,CAAlC;;AACA,MAAMQ,WAAW,GAAG,sBAAWL,eAAX,CAApB","sourcesContent":["import React from 'react';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport { getConfig } from '@edx/frontend-platform';\nimport { Hyperlink } from '@edx/paragon';\n\nimport messages from '../courseware/course/course-exit/messages';\n\nfunction IntlDashboardLink({ intl }) {\n  return (\n    <Hyperlink\n      variant=\"muted\"\n      isInline\n      destination={`${getConfig().LMS_BASE_URL}/dashboard`}\n    >\n      {intl.formatMessage(messages.dashboardLink)}\n    </Hyperlink>\n  );\n}\n\nIntlDashboardLink.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nfunction IntlIdVerificationSupportLink({ intl }) {\n  if (!getConfig().SUPPORT_URL_ID_VERIFICATION) {\n    return null;\n  }\n  return (\n    <Hyperlink\n      variant=\"muted\"\n      isInline\n      destination={getConfig().SUPPORT_URL_ID_VERIFICATION}\n    >\n      {intl.formatMessage(messages.idVerificationSupportLink)}\n    </Hyperlink>\n  );\n}\n\nIntlIdVerificationSupportLink.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nfunction IntlProfileLink({ intl }) {\n  const { username } = getAuthenticatedUser();\n\n  return (\n    <Hyperlink\n      variant=\"muted\"\n      isInline\n      destination={`${getConfig().LMS_BASE_URL}/u/${username}`}\n    >\n      {intl.formatMessage(messages.profileLink)}\n    </Hyperlink>\n  );\n}\n\nIntlProfileLink.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nconst DashboardLink = injectIntl(IntlDashboardLink);\nconst IdVerificationSupportLink = injectIntl(IntlIdVerificationSupportLink);\nconst ProfileLink = injectIntl(IntlProfileLink);\n\nexport { DashboardLink, IdVerificationSupportLink, ProfileLink };\n"],"file":"links.js"}