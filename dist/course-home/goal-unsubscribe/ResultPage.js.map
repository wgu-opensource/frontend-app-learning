{"version":3,"sources":["../../../src/course-home/goal-unsubscribe/ResultPage.jsx"],"names":["ResultPage","courseTitle","error","intl","errorDescription","contactSupport","textDecoration","CONTACT_URL","formatMessage","messages","header","errorHeader","description","LMS_BASE_URL","goToDashboard","defaultProps","propTypes","PropTypes","string","bool","intlShape","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAEA,SAASA,UAAT,OAAkD;AAAA,MAA9B;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,GAA8B;AAChD,QAAMC,gBAAgB,gBACpB,qBAAC,sBAAD;AACE,IAAA,EAAE,EAAC,6CADL;AAEE,IAAA,cAAc,EAAC,mHAFjB;AAGE,IAAA,MAAM,EAAE;AACNC,MAAAA,cAAc,eACZ,qBAAC,kBAAD;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,cAAc,EAAE;AAAlB,SAFT;AAGE,QAAA,WAAW,EAAG,GAAE,mCAAYC,WAAY,EAH1C;AAAA,kBAKGJ,IAAI,CAACK,aAAL,CAAmBC,kBAASJ,cAA5B;AALH;AAFI;AAHV,IADF;AAkBA,QAAMK,MAAM,GAAGR,KAAK,GAChBC,IAAI,CAACK,aAAL,CAAmBC,kBAASE,WAA5B,CADgB,GAEhBR,IAAI,CAACK,aAAL,CAAmBC,kBAASC,MAA5B,CAFJ;AAGA,QAAME,WAAW,GAAGV,KAAK,GACrBE,gBADqB,GAErBD,IAAI,CAACK,aAAL,CAAmBC,kBAASG,WAA5B,EAAyC;AAAEX,IAAAA;AAAF,GAAzC,CAFJ;AAIA,sBACE;AAAA,4BACE,qBAAC,2BAAD;AAAiB,MAAA,SAAS,EAAC,cAA3B;AAA0C,MAAA,GAAG,EAAC;AAA9C,MADF,eAEE;AAAK,MAAA,IAAI,EAAC,SAAV;AAAoB,oBAAW,GAA/B;AAAmC,MAAA,SAAS,EAAC,IAA7C;AAAA,gBAAmDS;AAAnD,MAFF,eAGE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBAAsCE;AAAtC;AADF,MAHF,eAME,qBAAC,eAAD;AAAQ,MAAA,OAAO,EAAC,OAAhB;AAAwB,MAAA,IAAI,EAAG,GAAE,mCAAYC,YAAa,YAA1D;AAAuE,MAAA,SAAS,EAAC,MAAjF;AAAA,gBACGV,IAAI,CAACK,aAAL,CAAmBC,kBAASK,aAA5B;AADH,MANF;AAAA,IADF;AAYD;;AAEDd,UAAU,CAACe,YAAX,GAA0B;AACxBd,EAAAA,WAAW,EAAE,IADW;AAExBC,EAAAA,KAAK,EAAE;AAFiB,CAA1B;AAKAF,UAAU,CAACgB,SAAX,GAAuB;AACrBf,EAAAA,WAAW,EAAEgB,mBAAUC,MADF;AAErBhB,EAAAA,KAAK,EAAEe,mBAAUE,IAFI;AAGrBhB,EAAAA,IAAI,EAAEiB,gBAAUC;AAHK,CAAvB;;eAMe,sBAAWrB,UAAX,C","sourcesContent":["import PropTypes from 'prop-types';\nimport { getConfig } from '@edx/frontend-platform';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Button, Hyperlink } from '@edx/paragon';\n\nimport messages from './messages';\nimport { ReactComponent as UnsubscribeIcon } from './unsubscribe.svg';\n\nfunction ResultPage({ courseTitle, error, intl }) {\n  const errorDescription = (\n    <FormattedMessage\n      id=\"learning.goals.unsubscribe.errorDescription\"\n      defaultMessage=\"We were unable to unsubscribe you from goal reminder emails. Please try again later or {contactSupport} for help.\"\n      values={{\n        contactSupport: (\n          <Hyperlink\n            className=\"text-reset\"\n            style={{ textDecoration: 'underline' }}\n            destination={`${getConfig().CONTACT_URL}`}\n          >\n            {intl.formatMessage(messages.contactSupport)}\n          </Hyperlink>\n        ),\n      }}\n    />\n  );\n\n  const header = error\n    ? intl.formatMessage(messages.errorHeader)\n    : intl.formatMessage(messages.header);\n  const description = error\n    ? errorDescription\n    : intl.formatMessage(messages.description, { courseTitle });\n\n  return (\n    <>\n      <UnsubscribeIcon className=\"text-primary\" alt=\"\" />\n      <div role=\"heading\" aria-level=\"1\" className=\"h2\">{header}</div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-7 col-12 p-0\">{description}</div>\n      </div>\n      <Button variant=\"brand\" href={`${getConfig().LMS_BASE_URL}/dashboard`} className=\"mt-4\">\n        {intl.formatMessage(messages.goToDashboard)}\n      </Button>\n    </>\n  );\n}\n\nResultPage.defaultProps = {\n  courseTitle: null,\n  error: false,\n};\n\nResultPage.propTypes = {\n  courseTitle: PropTypes.string,\n  error: PropTypes.bool,\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(ResultPage);\n"],"file":"ResultPage.js"}