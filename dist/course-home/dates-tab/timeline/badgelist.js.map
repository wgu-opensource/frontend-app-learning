{"version":3,"file":"badgelist.js","names":["_react","_interopRequireDefault","require","_classnames","_reactFontawesome","_faLock","_paragon","_messages","_utils","_jsxRuntime","obj","__esModule","default","hasAccess","item","learnerHasAccess","isComplete","assignment","complete","isPastDue","Date","date","isUnreleased","link","getBadgeListAndColor","intl","items","now","assignments","filter","isLearnerAssignment","isToday","daycmp","isInFuture","badgesInfo","message","messages","today","shownForDay","bg","className","completed","length","every","shownForItem","x","pastDue","dueNext","some","unreleased","verifiedOnly","icon","faLock","color","badges","jsx","Fragment","children","map","b","shown","jsxs","Badge","classNames","FontAwesomeIcon","formatMessage","id"],"sources":["../../../../src/course-home/dates-tab/timeline/badgelist.jsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { Badge } from '@edx/paragon';\n\nimport messages from '../messages';\nimport { daycmp, isLearnerAssignment } from '../utils';\n\nfunction hasAccess(item) {\n  return item.learnerHasAccess;\n}\n\nfunction isComplete(assignment) {\n  return assignment.complete;\n}\n\nfunction isPastDue(assignment) {\n  return !isComplete(assignment) && (new Date(assignment.date) < new Date());\n}\n\nfunction isUnreleased(assignment) {\n  return !assignment.link;\n}\n\n// Pass a null item if you want to get a whole day's badge list, not just one item's list.\n// Returns an object with 'color' and 'badges' properties.\nfunction getBadgeListAndColor(date, intl, item, items) {\n  const now = new Date();\n  const assignments = items.filter(isLearnerAssignment);\n  const isToday = daycmp(date, now) === 0;\n  const isInFuture = daycmp(date, now) > 0;\n\n  // This badge info list is in order of priority (they will appear left to right in this order and the first badge\n  // sets the color of the dot in the timeline).\n  const badgesInfo = [\n    {\n      message: messages.today,\n      shownForDay: isToday,\n      bg: 'bg-warning-300',\n      className: 'text-dark',\n    },\n    {\n      message: messages.completed,\n      shownForDay: assignments.length && assignments.every(isComplete),\n      shownForItem: x => isLearnerAssignment(x) && isComplete(x),\n      bg: 'bg-light-500',\n      className: 'text-dark',\n    },\n    {\n      message: messages.pastDue,\n      shownForDay: assignments.length && assignments.every(isPastDue),\n      shownForItem: x => isLearnerAssignment(x) && isPastDue(x),\n      bg: 'bg-dark-200',\n      className: 'text-dark',\n    },\n    {\n      message: messages.dueNext,\n      shownForDay: !isToday && assignments.some(x => x.dueNext),\n      shownForItem: x => x.dueNext,\n      bg: 'bg-gray-500',\n      className: 'text-white',\n    },\n    {\n      message: messages.unreleased,\n      shownForDay: assignments.length && assignments.every(isUnreleased),\n      shownForItem: x => isLearnerAssignment(x) && isUnreleased(x),\n      className: 'border border-gray-500 text-gray-500',\n    },\n    {\n      message: messages.verifiedOnly,\n      shownForDay: items.length && items.every(x => !hasAccess(x)),\n      shownForItem: x => !hasAccess(x),\n      icon: faLock,\n      bg: 'bg-dark-700',\n      className: 'text-white',\n    },\n  ];\n  let color = null; // first color of any badge\n  const badges = (\n    <>\n      {badgesInfo.map(b => {\n        let shown = b.shownForDay;\n        if (item) {\n          if (b.shownForDay) {\n            shown = false; // don't double up, if the day already has this badge\n          } else {\n            shown = b.shownForItem && b.shownForItem(item);\n          }\n        }\n        if (!shown) {\n          return null;\n        }\n\n        if (!color && !isInFuture) {\n          color = b.bg;\n        }\n        return (\n          <Badge key={b.message.id} className={classNames('ml-2', b.bg, b.className)} data-testid=\"dates-badge\">\n            {b.icon && <FontAwesomeIcon icon={b.icon} className=\"mr-1\" />}\n            {intl.formatMessage(b.message)}\n          </Badge>\n        );\n      })}\n    </>\n  );\n  if (!color && isInFuture) {\n    color = 'bg-gray-900';\n  }\n\n  return {\n    color,\n    badges,\n  };\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport { getBadgeListAndColor };\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,WAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,iBAAA,GAAAF,OAAA;AAAiE,IAAAG,OAAA,GAAAH,OAAA;AAEjE,IAAAI,QAAA,GAAAJ,OAAA;AAEA,IAAAK,SAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AAAuD,IAAAO,WAAA,GAAAP,OAAA;AAAA,SAAAD,uBAAAS,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAEvD,SAASG,SAASA,CAACC,IAAI,EAAE;EACvB,OAAOA,IAAI,CAACC,gBAAgB;AAC9B;AAEA,SAASC,UAAUA,CAACC,UAAU,EAAE;EAC9B,OAAOA,UAAU,CAACC,QAAQ;AAC5B;AAEA,SAASC,SAASA,CAACF,UAAU,EAAE;EAC7B,OAAO,CAACD,UAAU,CAACC,UAAU,CAAC,IAAK,IAAIG,IAAI,CAACH,UAAU,CAACI,IAAI,CAAC,GAAG,IAAID,IAAI,CAAC,CAAE;AAC5E;AAEA,SAASE,YAAYA,CAACL,UAAU,EAAE;EAChC,OAAO,CAACA,UAAU,CAACM,IAAI;AACzB;;AAEA;AACA;AACA,SAASC,oBAAoBA,CAACH,IAAI,EAAEI,IAAI,EAAEX,IAAI,EAAEY,KAAK,EAAE;EACrD,MAAMC,GAAG,GAAG,IAAIP,IAAI,CAAC,CAAC;EACtB,MAAMQ,WAAW,GAAGF,KAAK,CAACG,MAAM,CAACC,0BAAmB,CAAC;EACrD,MAAMC,OAAO,GAAG,IAAAC,aAAM,EAACX,IAAI,EAAEM,GAAG,CAAC,KAAK,CAAC;EACvC,MAAMM,UAAU,GAAG,IAAAD,aAAM,EAACX,IAAI,EAAEM,GAAG,CAAC,GAAG,CAAC;;EAExC;EACA;EACA,MAAMO,UAAU,GAAG,CACjB;IACEC,OAAO,EAAEC,iBAAQ,CAACC,KAAK;IACvBC,WAAW,EAAEP,OAAO;IACpBQ,EAAE,EAAE,gBAAgB;IACpBC,SAAS,EAAE;EACb,CAAC,EACD;IACEL,OAAO,EAAEC,iBAAQ,CAACK,SAAS;IAC3BH,WAAW,EAAEV,WAAW,CAACc,MAAM,IAAId,WAAW,CAACe,KAAK,CAAC3B,UAAU,CAAC;IAChE4B,YAAY,EAAEC,CAAC,IAAI,IAAAf,0BAAmB,EAACe,CAAC,CAAC,IAAI7B,UAAU,CAAC6B,CAAC,CAAC;IAC1DN,EAAE,EAAE,cAAc;IAClBC,SAAS,EAAE;EACb,CAAC,EACD;IACEL,OAAO,EAAEC,iBAAQ,CAACU,OAAO;IACzBR,WAAW,EAAEV,WAAW,CAACc,MAAM,IAAId,WAAW,CAACe,KAAK,CAACxB,SAAS,CAAC;IAC/DyB,YAAY,EAAEC,CAAC,IAAI,IAAAf,0BAAmB,EAACe,CAAC,CAAC,IAAI1B,SAAS,CAAC0B,CAAC,CAAC;IACzDN,EAAE,EAAE,aAAa;IACjBC,SAAS,EAAE;EACb,CAAC,EACD;IACEL,OAAO,EAAEC,iBAAQ,CAACW,OAAO;IACzBT,WAAW,EAAE,CAACP,OAAO,IAAIH,WAAW,CAACoB,IAAI,CAACH,CAAC,IAAIA,CAAC,CAACE,OAAO,CAAC;IACzDH,YAAY,EAAEC,CAAC,IAAIA,CAAC,CAACE,OAAO;IAC5BR,EAAE,EAAE,aAAa;IACjBC,SAAS,EAAE;EACb,CAAC,EACD;IACEL,OAAO,EAAEC,iBAAQ,CAACa,UAAU;IAC5BX,WAAW,EAAEV,WAAW,CAACc,MAAM,IAAId,WAAW,CAACe,KAAK,CAACrB,YAAY,CAAC;IAClEsB,YAAY,EAAEC,CAAC,IAAI,IAAAf,0BAAmB,EAACe,CAAC,CAAC,IAAIvB,YAAY,CAACuB,CAAC,CAAC;IAC5DL,SAAS,EAAE;EACb,CAAC,EACD;IACEL,OAAO,EAAEC,iBAAQ,CAACc,YAAY;IAC9BZ,WAAW,EAAEZ,KAAK,CAACgB,MAAM,IAAIhB,KAAK,CAACiB,KAAK,CAACE,CAAC,IAAI,CAAChC,SAAS,CAACgC,CAAC,CAAC,CAAC;IAC5DD,YAAY,EAAEC,CAAC,IAAI,CAAChC,SAAS,CAACgC,CAAC,CAAC;IAChCM,IAAI,EAAEC,cAAM;IACZb,EAAE,EAAE,aAAa;IACjBC,SAAS,EAAE;EACb,CAAC,CACF;EACD,IAAIa,KAAK,GAAG,IAAI,CAAC,CAAC;EAClB,MAAMC,MAAM,gBACV,IAAA7C,WAAA,CAAA8C,GAAA,EAAA9C,WAAA,CAAA+C,QAAA;IAAAC,QAAA,EACGvB,UAAU,CAACwB,GAAG,CAACC,CAAC,IAAI;MACnB,IAAIC,KAAK,GAAGD,CAAC,CAACrB,WAAW;MACzB,IAAIxB,IAAI,EAAE;QACR,IAAI6C,CAAC,CAACrB,WAAW,EAAE;UACjBsB,KAAK,GAAG,KAAK,CAAC,CAAC;QACjB,CAAC,MAAM;UACLA,KAAK,GAAGD,CAAC,CAACf,YAAY,IAAIe,CAAC,CAACf,YAAY,CAAC9B,IAAI,CAAC;QAChD;MACF;MACA,IAAI,CAAC8C,KAAK,EAAE;QACV,OAAO,IAAI;MACb;MAEA,IAAI,CAACP,KAAK,IAAI,CAACpB,UAAU,EAAE;QACzBoB,KAAK,GAAGM,CAAC,CAACpB,EAAE;MACd;MACA,oBACE,IAAA9B,WAAA,CAAAoD,IAAA,EAACvD,QAAA,CAAAwD,KAAK;QAAoBtB,SAAS,EAAE,IAAAuB,mBAAU,EAAC,MAAM,EAAEJ,CAAC,CAACpB,EAAE,EAAEoB,CAAC,CAACnB,SAAS,CAAE;QAAC,eAAY,aAAa;QAAAiB,QAAA,GAClGE,CAAC,CAACR,IAAI,iBAAI,IAAA1C,WAAA,CAAA8C,GAAA,EAACnD,iBAAA,CAAA4D,eAAe;UAACb,IAAI,EAAEQ,CAAC,CAACR,IAAK;UAACX,SAAS,EAAC;QAAM,CAAE,CAAC,EAC5Df,IAAI,CAACwC,aAAa,CAACN,CAAC,CAACxB,OAAO,CAAC;MAAA,GAFpBwB,CAAC,CAACxB,OAAO,CAAC+B,EAGf,CAAC;IAEZ,CAAC;EAAC,CACF,CACH;EACD,IAAI,CAACb,KAAK,IAAIpB,UAAU,EAAE;IACxBoB,KAAK,GAAG,aAAa;EACvB;EAEA,OAAO;IACLA,KAAK;IACLC;EACF,CAAC;AACH;;AAEA"}