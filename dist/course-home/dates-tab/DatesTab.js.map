{"version":3,"sources":["../../../src/course-home/dates-tab/DatesTab.jsx"],"names":["DatesTab","intl","courseId","state","courseHome","isSelfPaced","org","courseDateBlocks","mmp2p","hasDeadlines","some","x","dateType","logUpgradeLinkClick","org_key","courserun_key","linkCategory","linkName","linkType","pageName","formatMessage","messages","title","isEnabled","fetchDatesTab","propTypes","intlShape","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;;;;;AALA;AAOA,SAASA,QAAT,OAA4B;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC1B,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAIA,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA;AAFI,MAGF,0BAAS,gBAAT,EAA2BJ,QAA3B,CAHJ;AAKA,QAAM;AACJK,IAAAA;AADI,MAEF,0BAAS,OAAT,EAAkBL,QAAlB,CAFJ;AAIA;;AACA,QAAMM,KAAK,GAAG,2BAAeN,QAAf,CAAd;AAEA,QAAMO,YAAY,GAAGF,gBAAgB,IAAIA,gBAAgB,CAACG,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAe,qBAA1C,CAAzC;;AAEA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,mCAAe,uCAAf,EAAwD;AACtDC,MAAAA,OAAO,EAAER,GAD6C;AAEtDS,MAAAA,aAAa,EAAEb,QAFuC;AAGtDc,MAAAA,YAAY,EAAE,gCAHwC;AAItDC,MAAAA,QAAQ,EAAE,eAJ4C;AAKtDC,MAAAA,QAAQ,EAAE,QAL4C;AAMtDC,MAAAA,QAAQ,EAAE;AAN4C,KAAxD;AAQD,GATD;;AAWA,sBACE;AAAA,4BACE;AAAK,MAAA,IAAI,EAAC,SAAV;AAAoB,oBAAW,GAA/B;AAAmC,MAAA,SAAS,EAAC,SAA7C;AAAA,gBACGlB,IAAI,CAACmB,aAAL,CAAmBC,kBAASC,KAA5B;AADH,MADF,EAKGjB,WAAW,IAAII,YAAf,IAA+B,CAACD,KAAK,CAACL,KAAN,CAAYoB,SAA5C,iBACC;AAAA,8BACE,qBAAC,wBAAD;AAAiB,QAAA,KAAK,EAAC,OAAvB;AAA+B,QAAA,KAAK,EAAEC;AAAtC,QADF,eAEE,qBAAC,gCAAD,KAFF,eAGE,qBAAC,+BAAD;AAAwB,QAAA,mBAAmB,EAAEX;AAA7C,QAHF,eAIE,qBAAC,iCAAD;AAA0B,QAAA,mBAAmB,EAAEA,mBAA/C;AAAoE,QAAA,KAAK,EAAC;AAA1E,QAJF;AAAA,MANJ,eAaE,qBAAC,iBAAD;AAAU,MAAA,KAAK,EAAEL;AAAjB,MAbF;AAAA,IADF;AAiBD;;AAEDR,QAAQ,CAACyB,SAAT,GAAqB;AACnBxB,EAAAA,IAAI,EAAEyB,gBAAUC;AADG,CAArB;;eAIe,sBAAW3B,QAAX,C","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport messages from './messages';\nimport Timeline from './timeline/Timeline';\n\nimport { fetchDatesTab } from '../data';\nimport { useModel } from '../../generic/model-store';\n\n/** [MM-P2P] Experiment */\nimport { initDatesMMP2P } from '../../experiments/mm-p2p';\nimport SuggestedScheduleHeader from '../suggested-schedule-messaging/SuggestedScheduleHeader';\nimport ShiftDatesAlert from '../suggested-schedule-messaging/ShiftDatesAlert';\nimport UpgradeToCompleteAlert from '../suggested-schedule-messaging/UpgradeToCompleteAlert';\nimport UpgradeToShiftDatesAlert from '../suggested-schedule-messaging/UpgradeToShiftDatesAlert';\n\nfunction DatesTab({ intl }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    isSelfPaced,\n    org,\n  } = useModel('courseHomeMeta', courseId);\n\n  const {\n    courseDateBlocks,\n  } = useModel('dates', courseId);\n\n  /** [MM-P2P] Experiment */\n  const mmp2p = initDatesMMP2P(courseId);\n\n  const hasDeadlines = courseDateBlocks && courseDateBlocks.some(x => x.dateType === 'assignment-due-date');\n\n  const logUpgradeLinkClick = () => {\n    sendTrackEvent('edx.bi.ecommerce.upsell_links_clicked', {\n      org_key: org,\n      courserun_key: courseId,\n      linkCategory: 'personalized_learner_schedules',\n      linkName: 'dates_upgrade',\n      linkType: 'button',\n      pageName: 'dates_tab',\n    });\n  };\n\n  return (\n    <>\n      <div role=\"heading\" aria-level=\"1\" className=\"h2 my-3\">\n        {intl.formatMessage(messages.title)}\n      </div>\n      { /** [MM-P2P] Experiment */ }\n      {isSelfPaced && hasDeadlines && !mmp2p.state.isEnabled && (\n        <>\n          <ShiftDatesAlert model=\"dates\" fetch={fetchDatesTab} />\n          <SuggestedScheduleHeader />\n          <UpgradeToCompleteAlert logUpgradeLinkClick={logUpgradeLinkClick} />\n          <UpgradeToShiftDatesAlert logUpgradeLinkClick={logUpgradeLinkClick} model=\"dates\" />\n        </>\n      )}\n      <Timeline mmp2p={mmp2p} />\n    </>\n  );\n}\n\nDatesTab.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(DatesTab);\n"],"file":"DatesTab.js"}