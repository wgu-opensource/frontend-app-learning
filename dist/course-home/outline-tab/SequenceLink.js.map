{"version":3,"sources":["../../../src/course-home/outline-tab/SequenceLink.jsx"],"names":["SequenceLink","id","intl","courseId","first","sequence","complete","description","due","showLink","title","userTimezone","timezoneFormatArgs","timeZone","coursewareUrl","displayTitle","fasCheckCircle","formatMessage","messages","completedAssignment","farCheckCircle","incompleteAssignment","assignmentDue","propTypes","PropTypes","string","isRequired","intlShape","bool","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport {\n  FormattedMessage,\n  FormattedTime,\n  injectIntl,\n  intlShape,\n} from '@edx/frontend-platform/i18n';\nimport { faCheckCircle as fasCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faCheckCircle as farCheckCircle } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport EffortEstimate from '../../shared/effort-estimate';\nimport { useModel } from '../../generic/model-store';\nimport messages from './messages';\n\nfunction SequenceLink({\n  id,\n  intl,\n  courseId,\n  first,\n  sequence,\n}) {\n  const {\n    complete,\n    description,\n    due,\n    showLink,\n    title,\n  } = sequence;\n  const {\n    userTimezone,\n  } = useModel('outline', courseId);\n\n  const timezoneFormatArgs = userTimezone ? { timeZone: userTimezone } : {};\n\n  const coursewareUrl = <Link to={`/course/${courseId}/${id}`}>{title}</Link>;\n  const displayTitle = showLink ? coursewareUrl : title;\n\n  return (\n    <li>\n      <div className={classNames('', { 'mt-2 pt-2 border-top border-light': !first })}>\n        <div className=\"row w-100 m-0\">\n          <div className=\"col-auto p-0\">\n            {complete ? (\n              <FontAwesomeIcon\n                icon={fasCheckCircle}\n                fixedWidth\n                className=\"float-left text-success mt-1\"\n                aria-hidden=\"true\"\n                title={intl.formatMessage(messages.completedAssignment)}\n              />\n            ) : (\n              <FontAwesomeIcon\n                icon={farCheckCircle}\n                fixedWidth\n                className=\"float-left text-gray-400 mt-1\"\n                aria-hidden=\"true\"\n                title={intl.formatMessage(messages.incompleteAssignment)}\n              />\n            )}\n          </div>\n          <div className=\"col-10 p-0 ml-3 text-break\">\n            <span className=\"align-middle\">{displayTitle}</span>\n            <span className=\"sr-only\">\n              , {intl.formatMessage(complete ? messages.completedAssignment : messages.incompleteAssignment)}\n            </span>\n            <EffortEstimate className=\"ml-3 align-middle\" block={sequence} />\n          </div>\n        </div>\n        {due && (\n          <div className=\"row w-100 m-0 ml-3 pl-3\">\n            <small className=\"text-body pl-2\">\n              <FormattedMessage\n                id=\"learning.outline.sequence-due\"\n                defaultMessage=\"{description} due {assignmentDue}\"\n                description=\"Used below an assignment title\"\n                values={{\n                  assignmentDue: (\n                    <FormattedTime\n                      key={`${id}-due`}\n                      day=\"numeric\"\n                      month=\"short\"\n                      year=\"numeric\"\n                      timeZoneName=\"short\"\n                      value={due}\n                      {...timezoneFormatArgs}\n                    />\n                  ),\n                  description: description || '',\n                }}\n              />\n            </small>\n          </div>\n        )}\n      </div>\n    </li>\n  );\n}\n\nSequenceLink.propTypes = {\n  id: PropTypes.string.isRequired,\n  intl: intlShape.isRequired,\n  courseId: PropTypes.string.isRequired,\n  first: PropTypes.bool.isRequired,\n  sequence: PropTypes.shape().isRequired,\n};\n\nexport default injectIntl(SequenceLink);\n"],"file":"SequenceLink.js"}