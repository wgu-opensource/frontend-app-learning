{"version":3,"sources":["../../../../src/course-home/outline-tab/widgets/WelcomeMessage.jsx"],"names":["WelcomeMessage","courseId","intl","welcomeMessageHtml","display","setDisplay","shortWelcomeMessageHtml","byWords","keepWhitespaces","messageCanBeShortened","length","showShortMessage","setShowShortMessage","dispatch","formatMessage","messages","welcomeMessageShowMoreButton","welcomeMessageShowLessButton","welcomeMessage","propTypes","PropTypes","string","isRequired","intlShape"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,SAASA,cAAT,OAA4C;AAAA,MAApB;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAoB;AAC1C,QAAM;AACJC,IAAAA;AADI,MAEF,0BAAS,SAAT,EAAoBF,QAApB,CAFJ;;AAIA,MAAI,CAACE,kBAAL,EAAyB;AACvB,WAAO,IAAP;AACD;;AAED,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB,qBAAS,IAAT,CAA9B;AAEA,QAAMC,uBAAuB,GAAG,2BAASH,kBAAT,EAA6B,GAA7B,EAAkC;AAAEI,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,eAAe,EAAE;AAAlC,GAAlC,CAAhC;AACA,QAAMC,qBAAqB,GAAGH,uBAAuB,CAACI,MAAxB,GAAiCP,kBAAkB,CAACO,MAAlF;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0C,qBAASH,qBAAT,CAAhD;AACA,QAAMI,QAAQ,GAAG,8BAAjB;AACA,sBACE,qBAAC,cAAD;AACE,mBAAY,yBADd;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,OAAO,MAHT;AAIE,IAAA,WAAW,MAJb;AAKE,IAAA,IAAI,EAAET,OALR;AAME,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,QAAQ,CAAC,mCAAsBZ,QAAtB,CAAD,CAAR;AACD,KATH;AAUE,IAAA,SAAS,EAAC,aAVZ;AAWE,IAAA,OAAO,EAAEQ,qBAAqB,GAAG,cAC/B,qBAAC,eAAD;AACE,MAAA,OAAO,EAAE,MAAMG,mBAAmB,CAAC,CAACD,gBAAF,CADpC;AAEE,MAAA,OAAO,EAAC,iBAFV;AAAA,gBAIGA,gBAAgB,GAAGT,IAAI,CAACY,aAAL,CAAmBC,kBAASC,4BAA5B,CAAH,GACbd,IAAI,CAACY,aAAL,CAAmBC,kBAASE,4BAA5B;AALN,MAD+B,CAAH,GAQ1B,EAnBN;AAAA,2BAqBE,qBAAC,0BAAD;AAAmB,MAAA,SAAS,EAAC,MAA7B;AAAoC,MAAA,aAAa,EAAE,GAAnD;AAAwD,MAAA,YAAY,EAAE,GAAtE;AAAA,gBACGN,gBAAgB,gBACf,qBAAC,wBAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,uBAAY,8BAFd;AAIE,QAAA,IAAI,EAAEL,uBAJR;AAKE,QAAA,KAAK,EAAEJ,IAAI,CAACY,aAAL,CAAmBC,kBAASG,cAA5B;AALT,SAGM,YAHN,CADe,gBASf,qBAAC,wBAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,uBAAY,6BAFd;AAIE,QAAA,IAAI,EAAEf,kBAJR;AAKE,QAAA,KAAK,EAAED,IAAI,CAACY,aAAL,CAAmBC,kBAASG,cAA5B;AALT,SAGM,WAHN;AAVJ;AArBF,IADF;AA2CD;;AAEDlB,cAAc,CAACmB,SAAf,GAA2B;AACzBlB,EAAAA,QAAQ,EAAEmB,mBAAUC,MAAV,CAAiBC,UADF;AAEzBpB,EAAAA,IAAI,EAAEqB,gBAAUD;AAFS,CAA3B;;eAKe,sBAAWtB,cAAX,C","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Alert, Button, TransitionReplace } from '@edx/paragon';\nimport truncate from 'truncate-html';\n\nimport { useDispatch } from 'react-redux';\nimport LmsHtmlFragment from '../LmsHtmlFragment';\nimport messages from '../messages';\nimport { useModel } from '../../../generic/model-store';\nimport { dismissWelcomeMessage } from '../../data/thunks';\n\nfunction WelcomeMessage({ courseId, intl }) {\n  const {\n    welcomeMessageHtml,\n  } = useModel('outline', courseId);\n\n  if (!welcomeMessageHtml) {\n    return null;\n  }\n\n  const [display, setDisplay] = useState(true);\n\n  const shortWelcomeMessageHtml = truncate(welcomeMessageHtml, 100, { byWords: true, keepWhitespaces: true });\n  const messageCanBeShortened = shortWelcomeMessageHtml.length < welcomeMessageHtml.length;\n  const [showShortMessage, setShowShortMessage] = useState(messageCanBeShortened);\n  const dispatch = useDispatch();\n  return (\n    <Alert\n      data-testid=\"alert-container-welcome\"\n      variant=\"light\"\n      stacked\n      dismissible\n      show={display}\n      onClose={() => {\n        setDisplay(false);\n        dispatch(dismissWelcomeMessage(courseId));\n      }}\n      className=\"raised-card\"\n      actions={messageCanBeShortened ? [\n        <Button\n          onClick={() => setShowShortMessage(!showShortMessage)}\n          variant=\"outline-primary\"\n        >\n          {showShortMessage ? intl.formatMessage(messages.welcomeMessageShowMoreButton)\n            : intl.formatMessage(messages.welcomeMessageShowLessButton)}\n        </Button>,\n      ] : []}\n    >\n      <TransitionReplace className=\"mb-3\" enterDuration={400} exitDuration={200}>\n        {showShortMessage ? (\n          <LmsHtmlFragment\n            className=\"inline-link\"\n            data-testid=\"short-welcome-message-iframe\"\n            key=\"short-html\"\n            html={shortWelcomeMessageHtml}\n            title={intl.formatMessage(messages.welcomeMessage)}\n          />\n        ) : (\n          <LmsHtmlFragment\n            className=\"inline-link\"\n            data-testid=\"long-welcome-message-iframe\"\n            key=\"full-html\"\n            html={welcomeMessageHtml}\n            title={intl.formatMessage(messages.welcomeMessage)}\n          />\n        )}\n      </TransitionReplace>\n    </Alert>\n  );\n}\n\nWelcomeMessage.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(WelcomeMessage);\n"],"file":"WelcomeMessage.js"}