{"version":3,"sources":["../../../../src/course-home/outline-tab/widgets/StartOrResumeCourseCard.jsx"],"names":["StartOrResumeCourseCard","intl","courseId","state","courseHome","org","eventProperties","org_key","courserun_key","resumeCourse","hasVisitedCourse","url","resumeCourseUrl","logResumeCourseClick","event_type","formatMessage","messages","resumeBlurb","startBlurb","resume","start","propTypes","intlShape","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,SAASA,uBAAT,OAA2C;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACzC,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAIA,QAAM;AACJC,IAAAA;AADI,MAEF,0BAAS,gBAAT,EAA2BH,QAA3B,CAFJ;AAIA,QAAMI,eAAe,GAAG;AACtBC,IAAAA,OAAO,EAAEF,GADa;AAEtBG,IAAAA,aAAa,EAAEN;AAFO,GAAxB;AAKA,QAAM;AACJO,IAAAA,YAAY,EAAE;AACZC,MAAAA,gBADY;AAEZC,MAAAA,GAAG,EAAEC;AAFO;AADV,MAKF,0BAAS,SAAT,EAAoBV,QAApB,CALJ;;AAOA,MAAI,CAACU,eAAL,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,QAAMC,oBAAoB,GAAG,MAAM;AACjC,yCAAqB,uCAArB,kCACKP,eADL;AAEEQ,MAAAA,UAAU,EAAEJ,gBAAgB,GAAG,QAAH,GAAc,OAF5C;AAGEC,MAAAA,GAAG,EAAEC;AAHP;AAKD,GAND;;AAQA,sBACE,sBAAC,aAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,mBAA/C;AAAA,4BACE,qBAAC,aAAD,CAAM,MAAN;AACE,MAAA,KAAK,EAAEF,gBAAgB,GAAGT,IAAI,CAACc,aAAL,CAAmBC,kBAASC,WAA5B,CAAH,GAA8ChB,IAAI,CAACc,aAAL,CAAmBC,kBAASE,UAA5B,CADvE;AAEE,MAAA,OAAO,eACL,qBAAC,eAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,IAAI,EAAEN,eAHR;AAIE,QAAA,OAAO,EAAE,MAAMC,oBAAoB,EAJrC;AAAA,kBAMGH,gBAAgB,GAAGT,IAAI,CAACc,aAAL,CAAmBC,kBAASG,MAA5B,CAAH,GAAyClB,IAAI,CAACc,aAAL,CAAmBC,kBAASI,KAA5B;AAN5D;AAHJ,MADF,eAeE,qBAAC,aAAD,CAAM,MAAN;AAAA,6BAAa;AAAb,MAfF;AAAA,IADF;AAmBD;;AAEDpB,uBAAuB,CAACqB,SAAxB,GAAoC;AAClCpB,EAAAA,IAAI,EAAEqB,gBAAUC;AADkB,CAApC;;eAIe,sBAAWvB,uBAAX,C","sourcesContent":["import React from 'react';\nimport { Button, Card } from '@edx/paragon';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport { useSelector } from 'react-redux';\nimport { sendTrackingLogEvent } from '@edx/frontend-platform/analytics';\nimport messages from '../messages';\nimport { useModel } from '../../../generic/model-store';\n\nfunction StartOrResumeCourseCard({ intl }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    org,\n  } = useModel('courseHomeMeta', courseId);\n\n  const eventProperties = {\n    org_key: org,\n    courserun_key: courseId,\n  };\n\n  const {\n    resumeCourse: {\n      hasVisitedCourse,\n      url: resumeCourseUrl,\n    },\n  } = useModel('outline', courseId);\n\n  if (!resumeCourseUrl) {\n    return null;\n  }\n\n  const logResumeCourseClick = () => {\n    sendTrackingLogEvent('edx.course.home.resume_course.clicked', {\n      ...eventProperties,\n      event_type: hasVisitedCourse ? 'resume' : 'start',\n      url: resumeCourseUrl,\n    });\n  };\n\n  return (\n    <Card className=\"mb-3 raised-card\" data-testid=\"start-resume-card\">\n      <Card.Header\n        title={hasVisitedCourse ? intl.formatMessage(messages.resumeBlurb) : intl.formatMessage(messages.startBlurb)}\n        actions={(\n          <Button\n            variant=\"brand\"\n            block\n            href={resumeCourseUrl}\n            onClick={() => logResumeCourseClick()}\n          >\n            {hasVisitedCourse ? intl.formatMessage(messages.resume) : intl.formatMessage(messages.start)}\n          </Button>\n        )}\n      />\n      {/* Footer is needed for internal vertical spacing to work out. If you can remove, be my guest */}\n      <Card.Footer><></></Card.Footer>\n    </Card>\n  );\n}\n\nStartOrResumeCourseCard.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(StartOrResumeCourseCard);\n"],"file":"StartOrResumeCourseCard.js"}