{"version":3,"sources":["../../../../src/course-home/outline-tab/widgets/CourseDates.jsx"],"names":["CourseDates","intl","mmp2p","courseId","state","courseHome","userTimezone","datesWidget","courseDateBlocks","datesTabLink","length","formatMessage","messages","dates","map","courseDateBlock","title","date","allDates","propTypes","intlShape","isRequired","PropTypes","shape","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;;;;;AAEA,SAASA,WAAT,OAIG;AAAA,MAJkB;AACnBC,IAAAA,IADmB;;AAEnB;AACAC,IAAAA;AAHmB,GAIlB;AACD,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAGA,QAAM;AACJC,IAAAA;AADI,MAEF,0BAAS,gBAAT,EAA2BH,QAA3B,CAFJ;AAGA,QAAM;AACJI,IAAAA,WAAW,EAAE;AACXC,MAAAA,gBADW;AAEXC,MAAAA;AAFW;AADT,MAKF,0BAAS,SAAT,EAAoBN,QAApB,CALJ;;AAOA,MAAIK,gBAAgB,CAACE,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,WAAO,IAAP;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA,kBAAoBT,IAAI,CAACU,aAAL,CAAmBC,kBAASC,KAA5B;AAApB,QADF,eAEE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBACGL,gBAAgB,CAACM,GAAjB,CAAsBC,eAAD,iBACpB,qBAAC,oBAAD;AAEE,UAAA,SAAS,EAAEA,eAFb;AAGE,UAAA,YAAY,EAAET;AACd;AAJF;AAKE,UAAA,KAAK,EAAEJ;AALT,WACOa,eAAe,CAACC,KAAhB,GAAwBD,eAAe,CAACE,IAD/C,CADD;AADH,QAFF,eAaE;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAgD,QAAA,IAAI,EAAER,YAAtD;AAAA,kBACGR,IAAI,CAACU,aAAL,CAAmBC,kBAASM,QAA5B;AADH,QAbF;AAAA;AADF,IADF;AAqBD;;AAEDlB,WAAW,CAACmB,SAAZ,GAAwB;AACtBlB,EAAAA,IAAI,EAAEmB,gBAAUC,UADM;;AAEtB;AACAnB,EAAAA,KAAK,EAAEoB,mBAAUC,KAAV,CAAgB,EAAhB;AAHe,CAAxB;AAMAvB,WAAW,CAACwB,YAAZ,GAA2B;AACzB;AACAtB,EAAAA,KAAK,EAAE;AAFkB,CAA3B;;eAKe,sBAAWF,WAAX,C","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport DateSummary from '../DateSummary';\nimport messages from '../messages';\nimport { useModel } from '../../../generic/model-store';\n\nfunction CourseDates({\n  intl,\n  /** [MM-P2P] Experiment */\n  mmp2p,\n}) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n  const {\n    userTimezone,\n  } = useModel('courseHomeMeta', courseId);\n  const {\n    datesWidget: {\n      courseDateBlocks,\n      datesTabLink,\n    },\n  } = useModel('outline', courseId);\n\n  if (courseDateBlocks.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"mb-4\">\n      <div id=\"courseHome-dates\">\n        <h2 className=\"h4\">{intl.formatMessage(messages.dates)}</h2>\n        <ol className=\"list-unstyled\">\n          {courseDateBlocks.map((courseDateBlock) => (\n            <DateSummary\n              key={courseDateBlock.title + courseDateBlock.date}\n              dateBlock={courseDateBlock}\n              userTimezone={userTimezone}\n              /** [MM-P2P] Experiment */\n              mmp2p={mmp2p}\n            />\n          ))}\n        </ol>\n        <a className=\"font-weight-bold ml-4 pl-1 small\" href={datesTabLink}>\n          {intl.formatMessage(messages.allDates)}\n        </a>\n      </div>\n    </section>\n  );\n}\n\nCourseDates.propTypes = {\n  intl: intlShape.isRequired,\n  /** [MM-P2P] Experiment */\n  mmp2p: PropTypes.shape({}),\n};\n\nCourseDates.defaultProps = {\n  /** [MM-P2P] Experiment */\n  mmp2p: {},\n};\n\nexport default injectIntl(CourseDates);\n"],"file":"CourseDates.js"}