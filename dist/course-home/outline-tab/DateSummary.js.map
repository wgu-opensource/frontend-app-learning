{"version":3,"sources":["../../../src/course-home/outline-tab/DateSummary.jsx"],"names":["DateSummary","dateBlock","userTimezone","mmp2p","courseId","state","courseHome","org","linkedTitle","link","timezoneFormatArgs","timeZone","showMMP2P","isEnabled","dateType","logVerifiedUpgradeClick","org_key","courserun_key","linkCategory","linkName","linkType","pageName","faCalendarAlt","upgradeDeadline","date","title","description","linkText","propTypes","PropTypes","shape","string","isRequired","learnerHasAccess","bool","defaultProps"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { FormattedDate } from '@edx/frontend-platform/i18n';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useModel } from '../../generic/model-store';\nimport { isLearnerAssignment } from '../dates-tab/utils';\nimport './DateSummary.scss';\n\nexport default function DateSummary({\n  dateBlock,\n  userTimezone,\n  /** [MM-P2P] Experiment */\n  mmp2p,\n}) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n  const {\n    org,\n  } = useModel('courseHomeMeta', courseId);\n\n  const linkedTitle = dateBlock.link && isLearnerAssignment(dateBlock);\n  const timezoneFormatArgs = userTimezone ? { timeZone: userTimezone } : {};\n\n  /** [MM-P2P] Experiment */\n  const showMMP2P = mmp2p.state.isEnabled && (dateBlock.dateType === 'verified-upgrade-deadline');\n\n  const logVerifiedUpgradeClick = () => {\n    sendTrackEvent('edx.bi.ecommerce.upsell_links_clicked', {\n      org_key: org,\n      courserun_key: courseId,\n      linkCategory: '(none)',\n      linkName: 'course_home_dates',\n      linkType: 'link',\n      pageName: 'course_home',\n    });\n  };\n\n  return (\n    <li className=\"p-0 mb-3 small text-dark-500\">\n      <div className=\"row\">\n        <FontAwesomeIcon icon={faCalendarAlt} className=\"ml-3 mt-1 mr-1\" fixedWidth />\n        <div className=\"ml-1 font-weight-bold\">\n          <FormattedDate\n            /** [MM-P2P] Experiment */\n            value={showMMP2P ? mmp2p.state.upgradeDeadline : dateBlock.date}\n            day=\"numeric\"\n            month=\"short\"\n            weekday=\"short\"\n            year=\"numeric\"\n            {...timezoneFormatArgs}\n          />\n        </div>\n      </div>\n      {/** [MM-P2P] Experiment (conditional) */}\n      { showMMP2P ? (\n        <div className=\"row ml-4 pr-2\">\n          <div className=\"date-summary-text\">\n            <div className=\"font-weight-bold mt-2\">\n              Last chance to upgrade\n            </div>\n          </div>\n          <div className=\"date-summary-text mt-1\">\n            You are still eligible to upgrade to a Verified Certificate!\n            &nbsp; Unlock full course access and highlight the knowledge you&apos;ll gain.\n          </div>\n        </div>\n      ) : (\n        <div className=\"row ml-4 pr-2\">\n          <div className=\"date-summary-text\">\n            {linkedTitle && (\n              <div className=\"font-weight-bold mt-2\">\n                <a href={dateBlock.link}>{dateBlock.title}</a>\n              </div>\n            )}\n            {!linkedTitle && (\n              <div className=\"font-weight-bold mt-2\">{dateBlock.title}</div>\n            )}\n          </div>\n          {dateBlock.description && (\n            <div className=\"date-summary-text mt-1\">{dateBlock.description}</div>\n          )}\n          {!linkedTitle && dateBlock.link && (\n            <a\n              href={dateBlock.link}\n              onClick={dateBlock.dateType === 'verified-upgrade-deadline' ? logVerifiedUpgradeClick : () => {}}\n              className=\"description-link\"\n            >\n              {dateBlock.linkText}\n            </a>\n          )}\n        </div>\n      )}\n    </li>\n  );\n}\n\nDateSummary.propTypes = {\n  dateBlock: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    dateType: PropTypes.string,\n    description: PropTypes.string,\n    link: PropTypes.string,\n    linkText: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    learnerHasAccess: PropTypes.bool,\n  }).isRequired,\n  userTimezone: PropTypes.string,\n  /** [MM-P2P] Experiment */\n  mmp2p: PropTypes.shape({\n    state: PropTypes.shape({\n      isEnabled: PropTypes.bool.isRequired,\n      upgradeDeadline: PropTypes.string,\n    }),\n  }),\n};\n\nDateSummary.defaultProps = {\n  userTimezone: null,\n  /** [MM-P2P] Experiment */\n  mmp2p: {\n    state: {\n      isEnabled: false,\n      upgradeDeadline: '',\n    },\n  },\n};\n"],"file":"DateSummary.js"}