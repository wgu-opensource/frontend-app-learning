{"version":3,"file":"CertificateStatusAlert.js","names":["_react","_interopRequireDefault","require","_propTypes","_i18n","_paragon","_reactRedux","_reactFontawesome","_faCheckCircle","_faExclamationTriangle","_frontendPlatform","_analytics","_auth","_messages","_messages2","_thunks","_jsxRuntime","obj","__esModule","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","CERT_STATUS_TYPE","EARNED_NOT_AVAILABLE","DOWNLOADABLE","REQUESTING","UNVERIFIED","exports","CertificateStatusAlert","_ref","intl","payload","dispatch","useDispatch","certificateAvailableDate","certStatus","courseEndDate","courseId","certURL","userTimezone","org","notPassingCourseEnded","tabs","AlertWrapper","props","children","sendAlertClickTracking","id","administrator","getAuthenticatedUser","sendTrackEvent","org_key","courserun_key","is_staff","renderCertAwardedStatus","alertProps","variant","icon","faCheckCircle","iconClassName","timezoneFormatArgs","timeZone","certificateAvailableDateFormatted","jsx","FormattedDate","day","month","year","courseEndDateFormatted","header","formatMessage","certMessages","certStatusEarnedNotAvailableHeader","body","FormattedMessage","defaultMessage","values","certStatusDownloadableHeader","buttonMessage","certStatusMessages","viewableButton","buttonVisible","buttonLink","buttonAction","requestableButton","requestCert","renderNotIDVerifiedStatus","faExclamationTriangle","unverifiedHomeHeader","unverifiedHomeButton","unverifiedHomeBody","getConfig","SUPPORT_URL_ID_VERIFICATION","renderNotPassingCourseEnded","progressTab","find","tab","slug","progressLink","url","certStatusNotPassingHeader","certStatusNotPassingButton","notPassingBody","_ref2","Alert","jsxs","className","FontAwesomeIcon","Heading","Button","href","onClick","propTypes","intlShape","isRequired","PropTypes","shape","string","bool","arrayOf","tab_id","title","_default","injectIntl"],"sources":["../../../../../src/course-home/outline-tab/alerts/certificate-status-alert/CertificateStatusAlert.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormattedDate,\n  FormattedMessage,\n  injectIntl,\n  intlShape,\n} from '@edx/frontend-platform/i18n';\nimport { Alert, Button } from '@edx/paragon';\nimport { useDispatch } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { getConfig } from '@edx/frontend-platform';\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport certMessages from './messages';\nimport certStatusMessages from '../../../progress-tab/certificate-status/messages';\nimport { requestCert } from '../../../data/thunks';\n\nexport const CERT_STATUS_TYPE = {\n  EARNED_NOT_AVAILABLE: 'earned_but_not_available',\n  DOWNLOADABLE: 'downloadable',\n  REQUESTING: 'requesting',\n  UNVERIFIED: 'unverified',\n};\n\nconst CertificateStatusAlert = ({ intl, payload }) => {\n  const dispatch = useDispatch();\n  const {\n    certificateAvailableDate,\n    certStatus,\n    courseEndDate,\n    courseId,\n    certURL,\n    userTimezone,\n    org,\n    notPassingCourseEnded,\n    tabs,\n  } = payload;\n\n  // eslint-disable-next-line react/prop-types\n  const AlertWrapper = (props) => props.children(props);\n\n  const sendAlertClickTracking = (id) => {\n    const { administrator } = getAuthenticatedUser();\n    sendTrackEvent(id, {\n      org_key: org,\n      courserun_key: courseId,\n      is_staff: administrator,\n    });\n  };\n\n  const renderCertAwardedStatus = () => {\n    const alertProps = {\n      variant: 'success',\n      icon: faCheckCircle,\n      iconClassName: 'alert-icon text-success-500',\n    };\n    if (certStatus === CERT_STATUS_TYPE.EARNED_NOT_AVAILABLE) {\n      const timezoneFormatArgs = userTimezone ? { timeZone: userTimezone } : {};\n      const certificateAvailableDateFormatted = <FormattedDate value={certificateAvailableDate} day=\"numeric\" month=\"long\" year=\"numeric\" />;\n      const courseEndDateFormatted = <FormattedDate value={courseEndDate} day=\"numeric\" month=\"long\" year=\"numeric\" />;\n      alertProps.header = intl.formatMessage(certMessages.certStatusEarnedNotAvailableHeader);\n      alertProps.body = (\n        <p>\n          <FormattedMessage\n            id=\"learning.outline.alert.cert.earnedNotAvailable\"\n            defaultMessage=\"This course ends on {courseEndDateFormatted}. Final grades and any earned certificates are\n            scheduled to be available after {certificateAvailableDate}.\"\n            values={{\n              courseEndDateFormatted,\n              certificateAvailableDate: certificateAvailableDateFormatted,\n            }}\n            {...timezoneFormatArgs}\n          />\n        </p>\n      );\n    } else if (certStatus === CERT_STATUS_TYPE.DOWNLOADABLE) {\n      alertProps.header = intl.formatMessage(certMessages.certStatusDownloadableHeader);\n      alertProps.buttonMessage = intl.formatMessage(certStatusMessages.viewableButton);\n      alertProps.buttonVisible = true;\n      alertProps.buttonLink = certURL;\n      alertProps.buttonAction = () => {\n        sendAlertClickTracking('edx.ui.lms.course_outline.certificate_alert_downloadable_button.clicked');\n      };\n    } else if (certStatus === CERT_STATUS_TYPE.REQUESTING) {\n      alertProps.header = intl.formatMessage(certMessages.certStatusDownloadableHeader);\n      alertProps.buttonMessage = intl.formatMessage(certStatusMessages.requestableButton);\n      alertProps.buttonVisible = true;\n      alertProps.buttonLink = '';\n      alertProps.buttonAction = () => {\n        sendAlertClickTracking('edx.ui.lms.course_outline.certificate_alert_request_cert_button.clicked');\n        dispatch(requestCert(courseId));\n      };\n    }\n    return alertProps;\n  };\n\n  const renderNotIDVerifiedStatus = () => {\n    const alertProps = {\n      variant: 'warning',\n      icon: faExclamationTriangle,\n      iconClassName: 'alert-icon text-warning-500',\n      header: intl.formatMessage(certStatusMessages.unverifiedHomeHeader),\n      buttonMessage: intl.formatMessage(certStatusMessages.unverifiedHomeButton),\n      body: intl.formatMessage(certStatusMessages.unverifiedHomeBody),\n      buttonVisible: true,\n      buttonLink: getConfig().SUPPORT_URL_ID_VERIFICATION,\n      buttonAction: () => {\n        sendAlertClickTracking('edx.ui.lms.course_outline.certificate_alert_unverified_button.clicked');\n      },\n    };\n\n    return alertProps;\n  };\n\n  const renderNotPassingCourseEnded = () => {\n    const progressTab = tabs.find(tab => tab.slug === 'progress');\n    const progressLink = progressTab && progressTab.url;\n\n    const alertProps = {\n      header: intl.formatMessage(certMessages.certStatusNotPassingHeader),\n      buttonMessage: intl.formatMessage(certMessages.certStatusNotPassingButton),\n      body: intl.formatMessage(certStatusMessages.notPassingBody),\n      buttonVisible: true,\n      buttonLink: progressLink,\n      buttonAction: () => {\n        sendAlertClickTracking('edx.ui.lms.course_outline.certificate_alert_view_grades_button.clicked');\n      },\n    };\n\n    return alertProps;\n  };\n\n  let alertProps = {};\n  switch (certStatus) {\n    case CERT_STATUS_TYPE.EARNED_NOT_AVAILABLE:\n    case CERT_STATUS_TYPE.DOWNLOADABLE:\n    case CERT_STATUS_TYPE.REQUESTING:\n      alertProps = renderCertAwardedStatus();\n      break;\n    case CERT_STATUS_TYPE.UNVERIFIED:\n      alertProps = renderNotIDVerifiedStatus();\n      break;\n    default:\n      if (notPassingCourseEnded) {\n        alertProps = renderNotPassingCourseEnded();\n      }\n      break;\n  }\n\n  return (\n    <AlertWrapper {...alertProps}>\n      {({\n        variant,\n        buttonVisible,\n        iconClassName,\n        icon,\n        header,\n        body,\n        buttonAction,\n        buttonLink,\n        buttonMessage,\n      }) => (\n        <Alert variant={variant}>\n          <div className=\"d-flex flex-column flex-lg-row justify-content-between align-items-center\">\n            <div className={buttonVisible ? 'col-lg-8' : 'col-auto'}>\n              <FontAwesomeIcon icon={icon} className={iconClassName} />\n              <Alert.Heading>{header}</Alert.Heading>\n              {body}\n            </div>\n            {buttonVisible && (\n              <div className=\"flex-grow-0 pt-3 pt-lg-0\">\n                <Button\n                  variant=\"primary\"\n                  href={buttonLink}\n                  onClick={() => {\n                    if (buttonAction) { buttonAction(); }\n                  }}\n                >\n                  {buttonMessage}\n                </Button>\n              </div>\n            )}\n          </div>\n        </Alert>\n\n      )}\n    </AlertWrapper>\n  );\n};\n\nCertificateStatusAlert.propTypes = {\n  intl: intlShape.isRequired,\n  payload: PropTypes.shape({\n    certificateAvailableDate: PropTypes.string,\n    certStatus: PropTypes.string,\n    courseEndDate: PropTypes.string,\n    courseId: PropTypes.string,\n    certURL: PropTypes.string,\n    userTimezone: PropTypes.string,\n    org: PropTypes.string,\n    notPassingCourseEnded: PropTypes.bool,\n    tabs: PropTypes.arrayOf(PropTypes.shape({\n      tab_id: PropTypes.string,\n      title: PropTypes.string,\n      url: PropTypes.string,\n    })),\n  }).isRequired,\n};\n\nexport default injectIntl(CertificateStatusAlert);\n"],"mappings":"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"}