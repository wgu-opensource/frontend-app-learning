{"version":3,"file":"hooks.js","names":["_react","_interopRequireWildcard","require","_frontendPlatform","_userMessages","_modelStore","_CertificateStatusAlert","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","CertificateStatusAlert","React","lazy","Promise","resolve","then","verifyCertStatusType","status","CERT_STATUS_TYPE","DOWNLOADABLE","EARNED_NOT_AVAILABLE","REQUESTING","UNVERIFIED","useCertificateStatusAlert","courseId","VERIFIED_MODES","PROFESSIONAL","VERIFIED","NO_ID_PROFESSIONAL_MODE","CREDIT_MODE","MASTERS","EXECUTIVE_EDUCATION","isEnrolled","org","tabs","useModel","datesWidget","courseDateBlocks","certData","hasEnded","userHasPassingGrade","userTimezone","enrollmentMode","certStatus","certWebViewUrl","certificateAvailableDate","endBlock","find","b","dateType","isVerifiedEnrollmentMode","undefined","values","mode","certURL","getConfig","LMS_BASE_URL","hasAlertingCertStatus","isVisible","notPassingCourseEnded","payload","useMemo","courseEndDate","date","useAlert","code","topic","clientCertificateStatusAlert","_default","exports"],"sources":["../../../../../src/course-home/outline-tab/alerts/certificate-status-alert/hooks.js"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { useAlert } from '../../../../generic/user-messages';\nimport { useModel } from '../../../../generic/model-store';\n\nimport { CERT_STATUS_TYPE } from './CertificateStatusAlert';\n\nconst CertificateStatusAlert = React.lazy(() => import('./CertificateStatusAlert'));\n\nfunction verifyCertStatusType(status) {\n  switch (status) {\n    case CERT_STATUS_TYPE.DOWNLOADABLE:\n    case CERT_STATUS_TYPE.EARNED_NOT_AVAILABLE:\n    case CERT_STATUS_TYPE.REQUESTING:\n    case CERT_STATUS_TYPE.UNVERIFIED:\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction useCertificateStatusAlert(courseId) {\n  const VERIFIED_MODES = {\n    PROFESSIONAL: 'professional',\n    VERIFIED: 'verified',\n    NO_ID_PROFESSIONAL_MODE: 'no-id-professional',\n    CREDIT_MODE: 'credit',\n    MASTERS: 'masters',\n    EXECUTIVE_EDUCATION: 'executive-education',\n  };\n\n  const {\n    isEnrolled,\n    org,\n    tabs,\n  } = useModel('courseHomeMeta', courseId);\n\n  const {\n    datesWidget: {\n      courseDateBlocks,\n    },\n    certData,\n    hasEnded,\n    userHasPassingGrade,\n    userTimezone,\n    enrollmentMode,\n  } = useModel('outline', courseId);\n\n  const {\n    certStatus,\n    certWebViewUrl,\n    certificateAvailableDate,\n  } = certData || {};\n  const endBlock = courseDateBlocks.find(b => b.dateType === 'course-end-date');\n  const isVerifiedEnrollmentMode = (\n    enrollmentMode !== null\n    && enrollmentMode !== undefined\n    && !!Object.values(VERIFIED_MODES).find(mode => mode === enrollmentMode)\n  );\n  let certURL = '';\n  if (certWebViewUrl) {\n    certURL = `${getConfig().LMS_BASE_URL}${certWebViewUrl}`;\n  }\n  const hasAlertingCertStatus = verifyCertStatusType(certStatus);\n\n  // Only show if:\n  // - there is a known cert status that we want provide status on.\n  // - Or the course has ended and the learner does not have a passing grade.\n  const isVisible = isEnrolled && hasAlertingCertStatus;\n  const notPassingCourseEnded = (\n    isEnrolled\n    && isVerifiedEnrollmentMode\n    && !hasAlertingCertStatus\n    && hasEnded\n    && !userHasPassingGrade\n  );\n  const payload = useMemo(() => ({\n    certificateAvailableDate,\n    certURL,\n    certStatus,\n    courseId,\n    courseEndDate: endBlock && endBlock.date,\n    userTimezone,\n    org,\n    notPassingCourseEnded,\n    tabs,\n  }), [certStatus, certURL, certificateAvailableDate, courseId,\n    endBlock, notPassingCourseEnded, org, tabs, userTimezone]);\n\n  useAlert(isVisible || notPassingCourseEnded, {\n    code: 'clientCertificateStatusAlert',\n    payload,\n    topic: 'outline-course-alerts',\n  });\n\n  return {\n    clientCertificateStatusAlert: CertificateStatusAlert,\n  };\n}\n\nexport default useCertificateStatusAlert;\n"],"mappings":"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"}