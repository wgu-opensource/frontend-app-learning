{"version":3,"sources":["../../../../../src/course-home/outline-tab/alerts/private-course-alert/hooks.js"],"names":["PrivateCourseAlert","React","lazy","usePrivateCourseAlert","courseId","authenticatedUser","AppContext","course","outline","enrolledUser","isEnrolled","undefined","privateOutline","courseBlocks","courses","isVisible","payload","anonymousUser","canEnroll","enrollAlert","code","dismissible","Object","values","sort","topic","type","ALERT_TYPES","WELCOME","clientPrivateCourseAlert"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,kBAAkB,gBAAGC,eAAMC,IAAN,CAAW,mEAAa,sBAAb,GAAX,CAA3B;;AAEO,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAwB,uBAAWC,kBAAX,CAA9B;AACA,QAAMC,MAAM,GAAG,0BAAS,gBAAT,EAA2BH,QAA3B,CAAf;AACA,QAAMI,OAAO,GAAG,0BAAS,SAAT,EAAoBJ,QAApB,CAAhB;AACA,QAAMK,YAAY,GAAGF,MAAM,IAAIA,MAAM,CAACG,UAAP,KAAsBC,SAAhC,IAA6CJ,MAAM,CAACG,UAAzE;AACA,QAAME,cAAc,GAAGJ,OAAO,IAAIA,OAAO,CAACK,YAAnB,IAAmC,CAACL,OAAO,CAACK,YAAR,CAAqBC,OAAhF;AACA;AACF;AACA;AACA;AACA;;AACE,QAAMC,SAAS,GAAG,CAACN,YAAD,KAAkBG,cAAc,IAAIP,iBAAiB,KAAK,IAA1D,CAAlB;AACA,QAAMW,OAAO,GAAG;AACdC,IAAAA,aAAa,EAAEZ,iBAAiB,KAAK,IADvB;AAEda,IAAAA,SAAS,EAAEV,OAAO,IAAIA,OAAO,CAACW,WAAnB,GAAiCX,OAAO,CAACW,WAAR,CAAoBD,SAArD,GAAiE,KAF9D;AAGdd,IAAAA;AAHc,GAAhB;AAMA,8BAASW,SAAT,EAAoB;AAClBK,IAAAA,IAAI,EAAE,0BADY;AAElBC,IAAAA,WAAW,EAAE,KAFK;AAGlBL,IAAAA,OAAO,EAAE,oBAAQ,MAAMA,OAAd,EAAuBM,MAAM,CAACC,MAAP,CAAcP,OAAd,EAAuBQ,IAAvB,EAAvB,CAHS;AAIlBC,IAAAA,KAAK,EAAE,wBAJW;AAKlBC,IAAAA,IAAI,EAAEC,0BAAYC;AALA,GAApB;AAQA,SAAO;AAAEC,IAAAA,wBAAwB,EAAE7B;AAA5B,GAAP;AACD","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport React, { useContext, useMemo } from 'react';\nimport { AppContext } from '@edx/frontend-platform/react';\nimport { ALERT_TYPES, useAlert } from '../../../../generic/user-messages';\nimport { useModel } from '../../../../generic/model-store';\n\nconst PrivateCourseAlert = React.lazy(() => import('./PrivateCourseAlert'));\n\nexport function usePrivateCourseAlert(courseId) {\n  const { authenticatedUser } = useContext(AppContext);\n  const course = useModel('courseHomeMeta', courseId);\n  const outline = useModel('outline', courseId);\n  const enrolledUser = course && course.isEnrolled !== undefined && course.isEnrolled;\n  const privateOutline = outline && outline.courseBlocks && !outline.courseBlocks.courses;\n  /**\n   * This alert should render if the user is not enrolled AND\n   *    1. the user is anonymous AND the outline is private, OR\n   *    2. the user is authenticated.\n   * */\n  const isVisible = !enrolledUser && (privateOutline || authenticatedUser !== null);\n  const payload = {\n    anonymousUser: authenticatedUser === null,\n    canEnroll: outline && outline.enrollAlert ? outline.enrollAlert.canEnroll : false,\n    courseId,\n  };\n\n  useAlert(isVisible, {\n    code: 'clientPrivateCourseAlert',\n    dismissible: false,\n    payload: useMemo(() => payload, Object.values(payload).sort()),\n    topic: 'outline-private-alerts',\n    type: ALERT_TYPES.WELCOME,\n  });\n\n  return { clientPrivateCourseAlert: PrivateCourseAlert };\n}\n"],"file":"hooks.js"}