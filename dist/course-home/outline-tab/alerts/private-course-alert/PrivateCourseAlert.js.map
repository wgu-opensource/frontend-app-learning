{"version":3,"sources":["../../../../../src/course-home/outline-tab/alerts/private-course-alert/PrivateCourseAlert.jsx"],"names":["PrivateCourseAlert","intl","payload","anonymousUser","canEnroll","courseId","org","title","enrollClickHandler","loading","formatMessage","enrollmentMessages","success","enrollNowButton","textDecoration","enrollNowInline","register","LMS_BASE_URL","encodeURIComponent","global","location","href","genericMessages","registerLowercase","signIn","signInSentenceCase","alert","outlineMessages","welcomeTo","messages","toAccess","faSpinner","propTypes","intlShape","isRequired","PropTypes","shape","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getConfig } from '@edx/frontend-platform';\nimport { injectIntl, intlShape, FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { getLoginRedirectUrl } from '@edx/frontend-platform/auth';\nimport { Alert, Button, Hyperlink } from '@edx/paragon';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport enrollmentMessages from '../../../../alerts/enrollment-alert/messages';\nimport genericMessages from '../../../../generic/messages';\nimport messages from './messages';\nimport outlineMessages from '../../messages';\nimport useEnrollClickHandler from '../../../../alerts/enrollment-alert/clickHook';\nimport { useModel } from '../../../../generic/model-store';\n\nfunction PrivateCourseAlert({ intl, payload }) {\n  const {\n    anonymousUser,\n    canEnroll,\n    courseId,\n  } = payload;\n\n  const {\n    org,\n    title,\n  } = useModel('courseHomeMeta', courseId);\n\n  const { enrollClickHandler, loading } = useEnrollClickHandler(\n    courseId,\n    org,\n    intl.formatMessage(enrollmentMessages.success),\n  );\n\n  const enrollNowButton = (\n    <Button\n      disabled={loading}\n      variant=\"link\"\n      className=\"p-0 border-0 align-top mr-1\"\n      style={{ textDecoration: 'underline' }}\n      size=\"sm\"\n      onClick={enrollClickHandler}\n    >\n      {intl.formatMessage(enrollmentMessages.enrollNowInline)}\n    </Button>\n  );\n\n  const register = (\n    <Hyperlink\n      style={{ textDecoration: 'underline' }}\n      destination={`${getConfig().LMS_BASE_URL}/register?next=${encodeURIComponent(global.location.href)}`}\n    >\n      {intl.formatMessage(genericMessages.registerLowercase)}\n    </Hyperlink>\n  );\n\n  const signIn = (\n    <Hyperlink\n      style={{ textDecoration: 'underline' }}\n      destination={`${getLoginRedirectUrl(global.location.href)}`}\n    >\n      {intl.formatMessage(genericMessages.signInSentenceCase)}\n    </Hyperlink>\n  );\n\n  return (\n    <Alert variant=\"light\" data-testid=\"private-course-alert\">\n      {anonymousUser && (\n        <>\n          <p className=\"font-weight-bold\">\n            {intl.formatMessage(enrollmentMessages.alert)}\n          </p>\n          <FormattedMessage\n            id=\"learning.privateCourse.signInOrRegister\"\n            description=\"Prompts the user to sign in or register to see course content.\"\n            defaultMessage=\"{signIn} or {register} and then enroll in this course.\"\n            values={{\n              signIn,\n              register,\n            }}\n          />\n        </>\n      )}\n      {!anonymousUser && (\n        <>\n          <p className=\"font-weight-bold\">{intl.formatMessage(outlineMessages.welcomeTo)} {title}</p>\n          {canEnroll && (\n            <div className=\"d-flex\">\n              {enrollNowButton}\n              {intl.formatMessage(messages.toAccess)}\n              {loading && <FontAwesomeIcon icon={faSpinner} spin />}\n            </div>\n          )}\n          {!canEnroll && (\n            <>\n              {intl.formatMessage(enrollmentMessages.alert)}\n            </>\n          )}\n        </>\n      )}\n    </Alert>\n  );\n}\n\nPrivateCourseAlert.propTypes = {\n  intl: intlShape.isRequired,\n  payload: PropTypes.shape({\n    anonymousUser: PropTypes.bool,\n    canEnroll: PropTypes.bool,\n    courseId: PropTypes.string,\n  }).isRequired,\n};\n\nexport default injectIntl(PrivateCourseAlert);\n"],"file":"PrivateCourseAlert.js"}