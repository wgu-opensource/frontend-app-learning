{"version":3,"sources":["../../../src/course-home/suggested-schedule-messaging/UpgradeToCompleteAlert.jsx"],"names":["UpgradeToCompleteAlert","intl","logUpgradeLinkClick","courseId","state","courseHome","datesBannerInfo","hasEnded","contentTypeGatingEnabled","missedDeadlines","verifiedUpgradeLink","formatMessage","messages","upgradeToCompleteHeader","upgradeToCompleteBody","global","location","replace","upgradeToCompleteButton","propTypes","intlShape","isRequired","PropTypes","func","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAOA;;AACA;;;;;;AAEA,SAASA,sBAAT,OAA+D;AAAA,MAA/B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA+B;AAC7D,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAIA,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA;AAFI,MAGF,0BAAS,OAAT,EAAkBJ,QAAlB,CAHJ;AAKA,QAAM;AACJK,IAAAA,wBADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA;AAHI,MAIFJ,eAJJ;;AAMA,MAAI,CAACE,wBAAD,IAA6BC,eAA7B,IAAgDF,QAAhD,IAA4D,CAACG,mBAAjE,EAAsF;AACpF,WAAO,IAAP;AACD;;AAED,sBACE,qBAAC,cAAD;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA,2BACE,sBAAC,YAAD;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,sBAAC,YAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAoB,QAAA,SAAS,EAAC,mBAA9B;AAAA,gCACE,qBAAC,cAAD,CAAO,OAAP;AAAA,oBAAgBT,IAAI,CAACU,aAAL,CAAmBC,kBAASC,uBAA5B;AAAhB,UADF,EAEGZ,IAAI,CAACU,aAAL,CAAmBC,kBAASE,qBAA5B,CAFH;AAAA,QADF,eAKE,qBAAC,YAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAoB,QAAA,SAAS,EAAC,+CAA9B;AAAA,+BACE,qBAAC,eAAD;AACE,UAAA,OAAO,EAAC,OADV;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,UAAA,SAAS,EAAC,oBAHZ;AAIE,UAAA,OAAO,EAAE,MAAM;AACbZ,YAAAA,mBAAmB;AACnBa,YAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBP,mBAAxB;AACD,WAPH;AAAA,oBASGT,IAAI,CAACU,aAAL,CAAmBC,kBAASM,uBAA5B;AATH;AADF,QALF;AAAA;AADF,IADF;AAuBD;;AAEDlB,sBAAsB,CAACmB,SAAvB,GAAmC;AACjClB,EAAAA,IAAI,EAAEmB,gBAAUC,UADiB;AAEjCnB,EAAAA,mBAAmB,EAAEoB,mBAAUC;AAFE,CAAnC;AAKAvB,sBAAsB,CAACwB,YAAvB,GAAsC;AACpCtB,EAAAA,mBAAmB,EAAE,MAAM,CAAE;AADO,CAAtC;;eAIe,sBAAWF,sBAAX,C","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport {\n  Alert,\n  Button,\n  Col,\n  Row,\n} from '@edx/paragon';\n\nimport { useModel } from '../../generic/model-store';\nimport messages from './messages';\n\nfunction UpgradeToCompleteAlert({ intl, logUpgradeLinkClick }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    datesBannerInfo,\n    hasEnded,\n  } = useModel('dates', courseId);\n\n  const {\n    contentTypeGatingEnabled,\n    missedDeadlines,\n    verifiedUpgradeLink,\n  } = datesBannerInfo;\n\n  if (!contentTypeGatingEnabled || missedDeadlines || hasEnded || !verifiedUpgradeLink) {\n    return null;\n  }\n\n  return (\n    <Alert className=\"bg-light-200\">\n      <Row className=\"w-100 m-0\">\n        <Col xs={12} md={9} className=\"small p-0 pr-md-2\">\n          <Alert.Heading>{intl.formatMessage(messages.upgradeToCompleteHeader)}</Alert.Heading>\n          {intl.formatMessage(messages.upgradeToCompleteBody)}\n        </Col>\n        <Col xs={12} md={3} className=\"align-self-center text-right mt-3 mt-md-0 p-0\">\n          <Button\n            variant=\"brand\"\n            size=\"sm\"\n            className=\"w-xs-100 w-md-auto\"\n            onClick={() => {\n              logUpgradeLinkClick();\n              global.location.replace(verifiedUpgradeLink);\n            }}\n          >\n            {intl.formatMessage(messages.upgradeToCompleteButton)}\n          </Button>\n        </Col>\n      </Row>\n    </Alert>\n  );\n}\n\nUpgradeToCompleteAlert.propTypes = {\n  intl: intlShape.isRequired,\n  logUpgradeLinkClick: PropTypes.func,\n};\n\nUpgradeToCompleteAlert.defaultProps = {\n  logUpgradeLinkClick: () => {},\n};\n\nexport default injectIntl(UpgradeToCompleteAlert);\n"],"file":"UpgradeToCompleteAlert.js"}