{"version":3,"sources":["../../../src/course-home/suggested-schedule-messaging/UpgradeToShiftDatesAlert.jsx"],"names":["UpgradeToShiftDatesAlert","intl","logUpgradeLinkClick","model","courseId","state","courseHome","datesBannerInfo","hasEnded","contentTypeGatingEnabled","missedDeadlines","missedGatedContent","verifiedUpgradeLink","formatMessage","messages","upgradeToShiftBody","global","location","replace","upgradeToShiftButton","propTypes","intlShape","isRequired","PropTypes","func","string","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAOA;;AACA;;;;;;AAEA,SAASA,wBAAT,OAAwE;AAAA,MAAtC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,mBAAR;AAA6BC,IAAAA;AAA7B,GAAsC;AACtE,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAIA,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA;AAFI,MAGF,0BAASL,KAAT,EAAgBC,QAAhB,CAHJ;AAKA,QAAM;AACJK,IAAAA,wBADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA;AAJI,MAKFL,eALJ;;AAOA,MAAI,EAAEE,wBAAwB,IAAIC,eAA5B,IAA+CC,kBAA/C,IAAqEC,mBAAvE,KAA+FJ,QAAnG,EAA6G;AAC3G,WAAO,IAAP;AACD;;AAED,sBACE,qBAAC,cAAD;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA,2BACE,sBAAC,YAAD;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,sBAAC,YAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAoB,QAAA,SAAS,EAAC,mBAA9B;AAAA,gCACE;AAAA,oBAASP,IAAI,CAACY,aAAL,CAAmBC,kBAASJ,eAA5B;AAAT,UADF,EAEG,GAFH,EAEQT,IAAI,CAACY,aAAL,CAAmBC,kBAASC,kBAA5B,CAFR;AAAA,QADF,eAKE,qBAAC,YAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAoB,QAAA,SAAS,EAAC,+CAA9B;AAAA,+BACE,qBAAC,eAAD;AACE,UAAA,OAAO,EAAC,OADV;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,UAAA,SAAS,EAAC,oBAHZ;AAIE,UAAA,OAAO,EAAE,MAAM;AACbb,YAAAA,mBAAmB;AACnBc,YAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwBN,mBAAxB;AACD,WAPH;AAAA,oBASGX,IAAI,CAACY,aAAL,CAAmBC,kBAASK,oBAA5B;AATH;AADF,QALF;AAAA;AADF,IADF;AAuBD;;AAEDnB,wBAAwB,CAACoB,SAAzB,GAAqC;AACnCnB,EAAAA,IAAI,EAAEoB,gBAAUC,UADmB;AAEnCpB,EAAAA,mBAAmB,EAAEqB,mBAAUC,IAFI;AAGnCrB,EAAAA,KAAK,EAAEoB,mBAAUE,MAAV,CAAiBH;AAHW,CAArC;AAMAtB,wBAAwB,CAAC0B,YAAzB,GAAwC;AACtCxB,EAAAA,mBAAmB,EAAE,MAAM,CAAE;AADS,CAAxC;;eAIe,sBAAWF,wBAAX,C","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport {\n  Alert,\n  Button,\n  Row,\n  Col,\n} from '@edx/paragon';\n\nimport { useModel } from '../../generic/model-store';\nimport messages from './messages';\n\nfunction UpgradeToShiftDatesAlert({ intl, logUpgradeLinkClick, model }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    datesBannerInfo,\n    hasEnded,\n  } = useModel(model, courseId);\n\n  const {\n    contentTypeGatingEnabled,\n    missedDeadlines,\n    missedGatedContent,\n    verifiedUpgradeLink,\n  } = datesBannerInfo;\n\n  if (!(contentTypeGatingEnabled && missedDeadlines && missedGatedContent && verifiedUpgradeLink) || hasEnded) {\n    return null;\n  }\n\n  return (\n    <Alert className=\"bg-light-200\">\n      <Row className=\"w-100 m-0\">\n        <Col xs={12} md={9} className=\"small p-0 pr-md-2\">\n          <strong>{intl.formatMessage(messages.missedDeadlines)}</strong>\n          {' '}{intl.formatMessage(messages.upgradeToShiftBody)}\n        </Col>\n        <Col xs={12} md={3} className=\"align-self-center text-right mt-3 mt-md-0 p-0\">\n          <Button\n            variant=\"brand\"\n            size=\"sm\"\n            className=\"w-xs-100 w-md-auto\"\n            onClick={() => {\n              logUpgradeLinkClick();\n              global.location.replace(verifiedUpgradeLink);\n            }}\n          >\n            {intl.formatMessage(messages.upgradeToShiftButton)}\n          </Button>\n        </Col>\n      </Row>\n    </Alert>\n  );\n}\n\nUpgradeToShiftDatesAlert.propTypes = {\n  intl: intlShape.isRequired,\n  logUpgradeLinkClick: PropTypes.func,\n  model: PropTypes.string.isRequired,\n};\n\nUpgradeToShiftDatesAlert.defaultProps = {\n  logUpgradeLinkClick: () => {},\n};\n\nexport default injectIntl(UpgradeToShiftDatesAlert);\n"],"file":"UpgradeToShiftDatesAlert.js"}