{"version":3,"sources":["../../../src/course-home/data/redux.test.js"],"names":["loggingService","axiosMock","MockAdapter","describe","courseHomeMetadata","Factory","build","id","courseId","courseMetadataUrl","LMS_BASE_URL","store","beforeEach","reset","logError","mockReset","datesBaseUrl","it","onGet","networkError","thunks","fetchDatesTab","dispatch","expect","toHaveBeenCalled","getState","courseHome","courseStatus","toEqual","datesTabData","datesUrl","reply","state","toMatchSnapshot","outlineBaseUrl","fetchOutlineTab","outlineTabData","outlineUrl","progressBaseUrl","fetchProgressTab","progressTabData","progressUrl","targetUserId","goalUrl","onPost","deprecatedSaveCourseGoal","history","post","url","data","resetUrl","model","getTabDataMock","jest","fn","type","resetDeadlines","toHaveBeenCalledWith","dismissUrl","dismissWelcomeMessage"],"mappings":";;AAAA;;AACA;;AAEA;;AACA;;AAEA;;AAEA;;AAEA;;AACA;;;;;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAqB,mCAA3B;AAEA,MAAMC,SAAS,GAAG,IAAIC,yBAAJ,CAAgB,uCAAhB,CAAlB;AAEAC,QAAQ,CAAC,8BAAD,EAAiC,MAAM;AAC7C,QAAMC,kBAAkB,GAAGC,eAAQC,KAAR,CAAc,oBAAd,CAA3B;;AACA,QAAM;AAAEC,IAAAA,EAAE,EAAEC;AAAN,MAAmBJ,kBAAzB;AACA,MAAIK,iBAAiB,GAAI,GAAE,mCAAYC,YAAa,oCAAmCF,QAAS,EAAhG;AACAC,EAAAA,iBAAiB,GAAG,uCAA2BA,iBAA3B,CAApB;AAEA,MAAIE,KAAJ;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACfX,IAAAA,SAAS,CAACY,KAAV;AACAb,IAAAA,cAAc,CAACc,QAAf,CAAwBC,SAAxB;AAEAJ,IAAAA,KAAK,GAAG,qBAAR;AACD,GALS,CAAV;AAOAR,EAAAA,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACnC,UAAMa,YAAY,GAAI,GAAE,mCAAYN,YAAa,wBAAjD;AAEAO,IAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAY;AACrDhB,MAAAA,SAAS,CAACiB,KAAV,CAAgBT,iBAAhB,EAAmCU,YAAnC;AACAlB,MAAAA,SAAS,CAACiB,KAAV,CAAiB,GAAEF,YAAa,IAAGR,QAAS,EAA5C,EAA+CW,YAA/C;AAEA,YAAM,yBAAaC,MAAM,CAACC,aAAP,CAAqBb,QAArB,CAAb,EAA6CG,KAAK,CAACW,QAAnD,CAAN;AAEAC,MAAAA,MAAM,CAACvB,cAAc,CAACc,QAAhB,CAAN,CAAgCU,gBAAhC;AACAD,MAAAA,MAAM,CAACZ,KAAK,CAACc,QAAN,GAAiBC,UAAjB,CAA4BC,YAA7B,CAAN,CAAiDC,OAAjD,CAAyD,QAAzD;AACD,KARC,CAAF;AAUAX,IAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAY;AAC3D,YAAMY,YAAY,GAAGxB,eAAQC,KAAR,CAAc,cAAd,CAArB;;AAEA,YAAMwB,QAAQ,GAAI,GAAEd,YAAa,IAAGR,QAAS,EAA7C;AAEAP,MAAAA,SAAS,CAACiB,KAAV,CAAgBT,iBAAhB,EAAmCsB,KAAnC,CAAyC,GAAzC,EAA8C3B,kBAA9C;AACAH,MAAAA,SAAS,CAACiB,KAAV,CAAgBY,QAAhB,EAA0BC,KAA1B,CAAgC,GAAhC,EAAqCF,YAArC;AAEA,YAAM,yBAAaT,MAAM,CAACC,aAAP,CAAqBb,QAArB,CAAb,EAA6CG,KAAK,CAACW,QAAnD,CAAN;AAEA,YAAMU,KAAK,GAAGrB,KAAK,CAACc,QAAN,EAAd;AACAF,MAAAA,MAAM,CAACS,KAAK,CAACN,UAAN,CAAiBC,YAAlB,CAAN,CAAsCC,OAAtC,CAA8C,QAA9C;AACAL,MAAAA,MAAM,CAACS,KAAD,CAAN,CAAcC,eAAd;AACD,KAbC,CAAF;AAcD,GA3BO,CAAR;AA6BA9B,EAAAA,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACrC,UAAM+B,cAAc,GAAI,GAAE,mCAAYxB,YAAa,0BAAnD;AAEAO,IAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAY;AAC/DhB,MAAAA,SAAS,CAACiB,KAAV,CAAgBT,iBAAhB,EAAmCU,YAAnC;AACAlB,MAAAA,SAAS,CAACiB,KAAV,CAAiB,GAAEgB,cAAe,IAAG1B,QAAS,EAA9C,EAAiDW,YAAjD;AAEA,YAAM,yBAAaC,MAAM,CAACe,eAAP,CAAuB3B,QAAvB,CAAb,EAA+CG,KAAK,CAACW,QAArD,CAAN;AAEAC,MAAAA,MAAM,CAACvB,cAAc,CAACc,QAAhB,CAAN,CAAgCU,gBAAhC;AACAD,MAAAA,MAAM,CAACZ,KAAK,CAACc,QAAN,GAAiBC,UAAjB,CAA4BC,YAA7B,CAAN,CAAiDC,OAAjD,CAAyD,QAAzD;AACD,KARC,CAAF;AAUAX,IAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAY;AAC3D,YAAMmB,cAAc,GAAG/B,eAAQC,KAAR,CAAc,gBAAd,EAAgC;AAAEE,QAAAA;AAAF,OAAhC,CAAvB;;AAEA,YAAM6B,UAAU,GAAI,GAAEH,cAAe,IAAG1B,QAAS,EAAjD;AAEAP,MAAAA,SAAS,CAACiB,KAAV,CAAgBT,iBAAhB,EAAmCsB,KAAnC,CAAyC,GAAzC,EAA8C3B,kBAA9C;AACAH,MAAAA,SAAS,CAACiB,KAAV,CAAgBmB,UAAhB,EAA4BN,KAA5B,CAAkC,GAAlC,EAAuCK,cAAvC;AAEA,YAAM,yBAAahB,MAAM,CAACe,eAAP,CAAuB3B,QAAvB,CAAb,EAA+CG,KAAK,CAACW,QAArD,CAAN;AAEA,YAAMU,KAAK,GAAGrB,KAAK,CAACc,QAAN,EAAd;AACAF,MAAAA,MAAM,CAACS,KAAK,CAACN,UAAN,CAAiBC,YAAlB,CAAN,CAAsCC,OAAtC,CAA8C,QAA9C;AACAL,MAAAA,MAAM,CAACS,KAAD,CAAN,CAAcC,eAAd;AACD,KAbC,CAAF;AAcD,GA3BO,CAAR;AA6BA9B,EAAAA,QAAQ,CAAC,uBAAD,EAA0B,MAAM;AACtC,UAAMmC,eAAe,GAAI,GAAE,mCAAY5B,YAAa,2BAApD;AAEAO,IAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAY;AAC/DhB,MAAAA,SAAS,CAACiB,KAAV,CAAgBT,iBAAhB,EAAmCU,YAAnC;AACAlB,MAAAA,SAAS,CAACiB,KAAV,CAAiB,GAAEoB,eAAgB,IAAG9B,QAAS,EAA/C,EAAkDW,YAAlD;AAEA,YAAM,yBAAaC,MAAM,CAACmB,gBAAP,CAAwB/B,QAAxB,CAAb,EAAgDG,KAAK,CAACW,QAAtD,CAAN;AAEAC,MAAAA,MAAM,CAACvB,cAAc,CAACc,QAAhB,CAAN,CAAgCU,gBAAhC;AACAD,MAAAA,MAAM,CAACZ,KAAK,CAACc,QAAN,GAAiBC,UAAjB,CAA4BC,YAA7B,CAAN,CAAiDC,OAAjD,CAAyD,QAAzD;AACD,KARC,CAAF;AAUAX,IAAAA,EAAE,CAAC,4CAAD,EAA+C,YAAY;AAC3D,YAAMuB,eAAe,GAAGnC,eAAQC,KAAR,CAAc,iBAAd,EAAiC;AAAEE,QAAAA;AAAF,OAAjC,CAAxB;;AAEA,YAAMiC,WAAW,GAAI,GAAEH,eAAgB,IAAG9B,QAAS,EAAnD;AAEAP,MAAAA,SAAS,CAACiB,KAAV,CAAgBT,iBAAhB,EAAmCsB,KAAnC,CAAyC,GAAzC,EAA8C3B,kBAA9C;AACAH,MAAAA,SAAS,CAACiB,KAAV,CAAgBuB,WAAhB,EAA6BV,KAA7B,CAAmC,GAAnC,EAAwCS,eAAxC;AAEA,YAAM,yBAAapB,MAAM,CAACmB,gBAAP,CAAwB/B,QAAxB,CAAb,EAAgDG,KAAK,CAACW,QAAtD,CAAN;AAEA,YAAMU,KAAK,GAAGrB,KAAK,CAACc,QAAN,EAAd;AACAF,MAAAA,MAAM,CAACS,KAAK,CAACN,UAAN,CAAiBC,YAAlB,CAAN,CAAsCC,OAAtC,CAA8C,QAA9C;AACAL,MAAAA,MAAM,CAACS,KAAD,CAAN,CAAcC,eAAd;AACD,KAbC,CAAF;AAeAhB,IAAAA,EAAE,CAAC,gDAAD,EAAmD,YAAY;AAC/D,YAAMuB,eAAe,GAAGnC,eAAQC,KAAR,CAAc,iBAAd,EAAiC;AAAEE,QAAAA;AAAF,OAAjC,CAAxB;;AACA,YAAMkC,YAAY,GAAG,CAArB;AACA,YAAMD,WAAW,GAAI,GAAEH,eAAgB,IAAG9B,QAAS,IAAGkC,YAAa,GAAnE;AAEAzC,MAAAA,SAAS,CAACiB,KAAV,CAAgBT,iBAAhB,EAAmCsB,KAAnC,CAAyC,GAAzC,EAA8C3B,kBAA9C;AACAH,MAAAA,SAAS,CAACiB,KAAV,CAAgBuB,WAAhB,EAA6BV,KAA7B,CAAmC,GAAnC,EAAwCS,eAAxC;AAEA,YAAM,yBAAapB,MAAM,CAACmB,gBAAP,CAAwB/B,QAAxB,EAAkC,CAAlC,CAAb,EAAmDG,KAAK,CAACW,QAAzD,CAAN;AAEA,YAAMU,KAAK,GAAGrB,KAAK,CAACc,QAAN,EAAd;AACAF,MAAAA,MAAM,CAACS,KAAK,CAACN,UAAN,CAAiBgB,YAAlB,CAAN,CAAsCd,OAAtC,CAA8C,CAA9C;AACD,KAZC,CAAF;AAaD,GAzCO,CAAR;AA2CAzB,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,MAAM;AACpCc,IAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAY;AACxC,YAAM0B,OAAO,GAAI,GAAE,mCAAYjC,YAAa,mCAA5C;AACAT,MAAAA,SAAS,CAAC2C,MAAV,CAAiBD,OAAjB,EAA0BZ,KAA1B,CAAgC,GAAhC,EAAqC,EAArC;AAEA,YAAMX,MAAM,CAACyB,wBAAP,CAAgCrC,QAAhC,EAA0C,QAA1C,CAAN;AAEAe,MAAAA,MAAM,CAACtB,SAAS,CAAC6C,OAAV,CAAkBC,IAAlB,CAAuB,CAAvB,EAA0BC,GAA3B,CAAN,CAAsCpB,OAAtC,CAA8Ce,OAA9C;AACApB,MAAAA,MAAM,CAACtB,SAAS,CAAC6C,OAAV,CAAkBC,IAAlB,CAAuB,CAAvB,EAA0BE,IAA3B,CAAN,CAAuCrB,OAAvC,CAAgD,iBAAgBpB,QAAS,wBAAzE;AACD,KARC,CAAF;AASD,GAVO,CAAR;AAYAL,EAAAA,QAAQ,CAAC,qBAAD,EAAwB,MAAM;AACpCc,IAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAC9C,YAAMiC,QAAQ,GAAI,GAAE,mCAAYxC,YAAa,kDAA7C;AACA,YAAMyC,KAAK,GAAG,OAAd;AACAlD,MAAAA,SAAS,CAAC2C,MAAV,CAAiBM,QAAjB,EAA2BnB,KAA3B,CAAiC,GAAjC,EAAsC,EAAtC;AAEA,YAAMqB,cAAc,GAAGC,IAAI,CAACC,EAAL,CAAQ,OAAO;AACpCC,QAAAA,IAAI,EAAE;AAD8B,OAAP,CAAR,CAAvB;AAIA,YAAM,yBAAanC,MAAM,CAACoC,cAAP,CAAsBhD,QAAtB,EAAgC2C,KAAhC,EAAuCC,cAAvC,CAAb,EAAqEzC,KAAK,CAACW,QAA3E,CAAN;AAEAC,MAAAA,MAAM,CAACtB,SAAS,CAAC6C,OAAV,CAAkBC,IAAlB,CAAuB,CAAvB,EAA0BC,GAA3B,CAAN,CAAsCpB,OAAtC,CAA8CsB,QAA9C;AACA3B,MAAAA,MAAM,CAACtB,SAAS,CAAC6C,OAAV,CAAkBC,IAAlB,CAAuB,CAAvB,EAA0BE,IAA3B,CAAN,CAAuCrB,OAAvC,CAAgD,kBAAiBpB,QAAS,mDAA1E;AAEAe,MAAAA,MAAM,CAAC6B,cAAD,CAAN,CAAuBK,oBAAvB,CAA4CjD,QAA5C;AACD,KAfC,CAAF;AAgBD,GAjBO,CAAR;AAmBAL,EAAAA,QAAQ,CAAC,4BAAD,EAA+B,MAAM;AAC3Cc,IAAAA,EAAE,CAAC,gCAAD,EAAmC,YAAY;AAC/C,YAAMyC,UAAU,GAAI,GAAE,mCAAYhD,YAAa,0CAA/C;AACAT,MAAAA,SAAS,CAAC2C,MAAV,CAAiBc,UAAjB,EAA6B3B,KAA7B,CAAmC,GAAnC;AAEA,YAAM,yBAAaX,MAAM,CAACuC,qBAAP,CAA6BnD,QAA7B,CAAb,EAAqDG,KAAK,CAACW,QAA3D,CAAN;AAEAC,MAAAA,MAAM,CAACtB,SAAS,CAAC6C,OAAV,CAAkBC,IAAlB,CAAuB,CAAvB,EAA0BC,GAA3B,CAAN,CAAsCpB,OAAtC,CAA8C8B,UAA9C;AACAnC,MAAAA,MAAM,CAACtB,SAAS,CAAC6C,OAAV,CAAkBC,IAAlB,CAAuB,CAAvB,EAA0BE,IAA3B,CAAN,CAAuCrB,OAAvC,CAAgD,iBAAgBpB,QAAS,IAAzE;AACD,KARC,CAAF;AASD,GAVO,CAAR;AAWD,CA9JO,CAAR","sourcesContent":["import { Factory } from 'rosie';\nimport MockAdapter from 'axios-mock-adapter';\n\nimport { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\nimport { getConfig } from '@edx/frontend-platform';\n\nimport * as thunks from './thunks';\n\nimport { appendBrowserTimezoneToUrl, executeThunk } from '../../utils';\n\nimport { initializeMockApp } from '../../setupTest';\nimport initializeStore from '../../store';\n\nconst { loggingService } = initializeMockApp();\n\nconst axiosMock = new MockAdapter(getAuthenticatedHttpClient());\n\ndescribe('Data layer integration tests', () => {\n  const courseHomeMetadata = Factory.build('courseHomeMetadata');\n  const { id: courseId } = courseHomeMetadata;\n  let courseMetadataUrl = `${getConfig().LMS_BASE_URL}/api/course_home/course_metadata/${courseId}`;\n  courseMetadataUrl = appendBrowserTimezoneToUrl(courseMetadataUrl);\n\n  let store;\n\n  beforeEach(() => {\n    axiosMock.reset();\n    loggingService.logError.mockReset();\n\n    store = initializeStore();\n  });\n\n  describe('Test fetchDatesTab', () => {\n    const datesBaseUrl = `${getConfig().LMS_BASE_URL}/api/course_home/dates`;\n\n    it('Should fail to fetch if error occurs', async () => {\n      axiosMock.onGet(courseMetadataUrl).networkError();\n      axiosMock.onGet(`${datesBaseUrl}/${courseId}`).networkError();\n\n      await executeThunk(thunks.fetchDatesTab(courseId), store.dispatch);\n\n      expect(loggingService.logError).toHaveBeenCalled();\n      expect(store.getState().courseHome.courseStatus).toEqual('failed');\n    });\n\n    it('Should fetch, normalize, and save metadata', async () => {\n      const datesTabData = Factory.build('datesTabData');\n\n      const datesUrl = `${datesBaseUrl}/${courseId}`;\n\n      axiosMock.onGet(courseMetadataUrl).reply(200, courseHomeMetadata);\n      axiosMock.onGet(datesUrl).reply(200, datesTabData);\n\n      await executeThunk(thunks.fetchDatesTab(courseId), store.dispatch);\n\n      const state = store.getState();\n      expect(state.courseHome.courseStatus).toEqual('loaded');\n      expect(state).toMatchSnapshot();\n    });\n  });\n\n  describe('Test fetchOutlineTab', () => {\n    const outlineBaseUrl = `${getConfig().LMS_BASE_URL}/api/course_home/outline`;\n\n    it('Should result in fetch failure if error occurs', async () => {\n      axiosMock.onGet(courseMetadataUrl).networkError();\n      axiosMock.onGet(`${outlineBaseUrl}/${courseId}`).networkError();\n\n      await executeThunk(thunks.fetchOutlineTab(courseId), store.dispatch);\n\n      expect(loggingService.logError).toHaveBeenCalled();\n      expect(store.getState().courseHome.courseStatus).toEqual('failed');\n    });\n\n    it('Should fetch, normalize, and save metadata', async () => {\n      const outlineTabData = Factory.build('outlineTabData', { courseId });\n\n      const outlineUrl = `${outlineBaseUrl}/${courseId}`;\n\n      axiosMock.onGet(courseMetadataUrl).reply(200, courseHomeMetadata);\n      axiosMock.onGet(outlineUrl).reply(200, outlineTabData);\n\n      await executeThunk(thunks.fetchOutlineTab(courseId), store.dispatch);\n\n      const state = store.getState();\n      expect(state.courseHome.courseStatus).toEqual('loaded');\n      expect(state).toMatchSnapshot();\n    });\n  });\n\n  describe('Test fetchProgressTab', () => {\n    const progressBaseUrl = `${getConfig().LMS_BASE_URL}/api/course_home/progress`;\n\n    it('Should result in fetch failure if error occurs', async () => {\n      axiosMock.onGet(courseMetadataUrl).networkError();\n      axiosMock.onGet(`${progressBaseUrl}/${courseId}`).networkError();\n\n      await executeThunk(thunks.fetchProgressTab(courseId), store.dispatch);\n\n      expect(loggingService.logError).toHaveBeenCalled();\n      expect(store.getState().courseHome.courseStatus).toEqual('failed');\n    });\n\n    it('Should fetch, normalize, and save metadata', async () => {\n      const progressTabData = Factory.build('progressTabData', { courseId });\n\n      const progressUrl = `${progressBaseUrl}/${courseId}`;\n\n      axiosMock.onGet(courseMetadataUrl).reply(200, courseHomeMetadata);\n      axiosMock.onGet(progressUrl).reply(200, progressTabData);\n\n      await executeThunk(thunks.fetchProgressTab(courseId), store.dispatch);\n\n      const state = store.getState();\n      expect(state.courseHome.courseStatus).toEqual('loaded');\n      expect(state).toMatchSnapshot();\n    });\n\n    it('Should handle the url including a targetUserId', async () => {\n      const progressTabData = Factory.build('progressTabData', { courseId });\n      const targetUserId = 2;\n      const progressUrl = `${progressBaseUrl}/${courseId}/${targetUserId}/`;\n\n      axiosMock.onGet(courseMetadataUrl).reply(200, courseHomeMetadata);\n      axiosMock.onGet(progressUrl).reply(200, progressTabData);\n\n      await executeThunk(thunks.fetchProgressTab(courseId, 2), store.dispatch);\n\n      const state = store.getState();\n      expect(state.courseHome.targetUserId).toEqual(2);\n    });\n  });\n\n  describe('Test saveCourseGoal', () => {\n    it('Should save course goal', async () => {\n      const goalUrl = `${getConfig().LMS_BASE_URL}/api/course_home/save_course_goal`;\n      axiosMock.onPost(goalUrl).reply(200, {});\n\n      await thunks.deprecatedSaveCourseGoal(courseId, 'unsure');\n\n      expect(axiosMock.history.post[0].url).toEqual(goalUrl);\n      expect(axiosMock.history.post[0].data).toEqual(`{\"course_id\":\"${courseId}\",\"goal_key\":\"unsure\"}`);\n    });\n  });\n\n  describe('Test resetDeadlines', () => {\n    it('Should reset course deadlines', async () => {\n      const resetUrl = `${getConfig().LMS_BASE_URL}/api/course_experience/v1/reset_course_deadlines`;\n      const model = 'dates';\n      axiosMock.onPost(resetUrl).reply(201, {});\n\n      const getTabDataMock = jest.fn(() => ({\n        type: 'MOCK_ACTION',\n      }));\n\n      await executeThunk(thunks.resetDeadlines(courseId, model, getTabDataMock), store.dispatch);\n\n      expect(axiosMock.history.post[0].url).toEqual(resetUrl);\n      expect(axiosMock.history.post[0].data).toEqual(`{\"course_key\":\"${courseId}\",\"research_event_data\":{\"location\":\"dates-tab\"}}`);\n\n      expect(getTabDataMock).toHaveBeenCalledWith(courseId);\n    });\n  });\n\n  describe('Test dismissWelcomeMessage', () => {\n    it('Should dismiss welcome message', async () => {\n      const dismissUrl = `${getConfig().LMS_BASE_URL}/api/course_home/dismiss_welcome_message`;\n      axiosMock.onPost(dismissUrl).reply(201);\n\n      await executeThunk(thunks.dismissWelcomeMessage(courseId), store.dispatch);\n\n      expect(axiosMock.history.post[0].url).toEqual(dismissUrl);\n      expect(axiosMock.history.post[0].data).toEqual(`{\"course_id\":\"${courseId}\"}`);\n    });\n  });\n});\n"],"file":"redux.test.js"}