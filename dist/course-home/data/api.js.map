{"version":3,"file":"api.js","names":["_frontendPlatform","require","_auth","_logging","_utils","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","calculateAssignmentTypeGrades","points","assignmentWeight","numDroppable","dropCount","lowestScore","Math","min","lowestScoreIndex","indexOf","splice","averageGrade","weightedGrade","reduce","a","b","toFixed","normalizeAssignmentPolicies","assignmentPolicies","sectionScores","gradeByAssignmentType","assignment","type","grades","Array","numTotal","fill","numAssignmentsCreated","numTotalExpectedAssignments","chapter","subsections","subsection","hasGradedAssignment","showGrades","numPointsPossible","assignmentType","numPointsEarned","shift","map","weight","shortLabel","normalizeCourseHomeCourseMetadata","metadata","rootSlug","data","camelCaseObject","tabs","tab","slug","tabId","title","url","isMasquerading","originalUserIsStaff","isStaff","normalizeOutlineBlocks","courseId","blocks","models","courses","sections","sequences","values","block","id","display_name","sectionIds","children","hasScheduledContent","has_scheduled_content","complete","resumeBlock","resume_block","sequenceIds","description","due","effortActivities","effort_activities","effortTime","effort_time","icon","showLink","lms_web_url","logInfo","course","isArray","sectionId","section","sequenceId","getCourseHomeCourseMetadata","getConfig","LMS_BASE_URL","appendBrowserTimezoneToUrl","getAuthenticatedHttpClient","get","getDatesTabData","error","httpErrorStatus","response","status","getProgressTabData","targetUserId","camelCasedData","gradingPolicy","gradeRange","grading_policy","grade_range","gradesFeatureIsFullyLocked","completionSummary","lockedCount","gradesFeatureIsPartiallyLocked","learnerHasAccess","global","location","replace","getProctoringInfoData","username","encodeURIComponent","customAttributes","getLiveTabIframe","getTimeOffsetMillis","headerDate","requestTime","responseTime","timeOffsetMillis","headerTime","Date","parse","roundTripMillis","localTime","getOutlineTabData","now","tabData","headers","accessExpiration","access_expiration","canShowUpgradeSock","can_show_upgrade_sock","certData","cert_data","courseBlocks","course_blocks","courseGoals","course_goals","courseTools","course_tools","datesBannerInfo","dates_banner_info","datesWidget","dates_widget","enableProctoredExams","enable_proctored_exams","enrollAlert","enroll_alert","enrollmentMode","enrollment_mode","handoutsHtml","handouts_html","hasEnded","has_ended","offer","resumeCourse","resume_course","date","userHasPassingGrade","user_has_passing_grade","verifiedMode","verified_mode","welcomeMessageHtml","welcome_message_html","postCourseDeadlines","model","URL","post","href","course_key","research_event_data","deprecatedPostCourseGoals","goalKey","course_id","goal_key","postWeeklyLearningGoal","daysPerWeek","subscribedToReminders","days_per_week","subscribed_to_reminders","postDismissWelcomeMessage","postRequestCert","executePostFromPostEvent","postData","researchEventData","bodyParams","unsubscribeFromCourseGoal","token","then"],"sources":["../../../src/course-home/data/api.js"],"sourcesContent":["import { camelCaseObject, getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\nimport { logInfo } from '@edx/frontend-platform/logging';\nimport { appendBrowserTimezoneToUrl } from '../../utils';\n\nconst calculateAssignmentTypeGrades = (points, assignmentWeight, numDroppable) => {\n  let dropCount = numDroppable;\n  // Drop the lowest grades\n  while (dropCount && points.length >= dropCount) {\n    const lowestScore = Math.min(...points);\n    const lowestScoreIndex = points.indexOf(lowestScore);\n    points.splice(lowestScoreIndex, 1);\n    dropCount--;\n  }\n  let averageGrade = 0;\n  let weightedGrade = 0;\n  if (points.length) {\n    // Calculate the average grade for the assignment and round it. This rounding is not ideal and does not accurately\n    // reflect what a learner's grade would be, however, we must have parity with the current grading behavior that\n    // exists in edx-platform.\n    averageGrade = (points.reduce((a, b) => a + b, 0) / points.length).toFixed(2);\n    weightedGrade = averageGrade * assignmentWeight;\n  }\n  return { averageGrade, weightedGrade };\n};\n\nfunction normalizeAssignmentPolicies(assignmentPolicies, sectionScores) {\n  const gradeByAssignmentType = {};\n  assignmentPolicies.forEach(assignment => {\n    // Create an array with the number of total assignments and set the scores to 0\n    // as placeholders for assignments that have not yet been released\n    gradeByAssignmentType[assignment.type] = {\n      grades: Array(assignment.numTotal).fill(0),\n      numAssignmentsCreated: 0,\n      numTotalExpectedAssignments: assignment.numTotal,\n    };\n  });\n\n  sectionScores.forEach((chapter) => {\n    chapter.subsections.forEach((subsection) => {\n      if (!(subsection.hasGradedAssignment && subsection.showGrades && subsection.numPointsPossible)) {\n        return;\n      }\n      const {\n        assignmentType,\n        numPointsEarned,\n        numPointsPossible,\n      } = subsection;\n\n      // If a subsection's assignment type does not match an assignment policy in Studio,\n      // we won't be able to include it in this accumulation of grades by assignment type.\n      // This may happen if a course author has removed/renamed an assignment policy in Studio and\n      // neglected to update the subsection's of that assignment type\n      if (!gradeByAssignmentType[assignmentType]) {\n        return;\n      }\n\n      let {\n        numAssignmentsCreated,\n      } = gradeByAssignmentType[assignmentType];\n\n      numAssignmentsCreated++;\n      if (numAssignmentsCreated <= gradeByAssignmentType[assignmentType].numTotalExpectedAssignments) {\n        // Remove a placeholder grade so long as the number of recorded created assignments is less than the number\n        // of expected assignments\n        gradeByAssignmentType[assignmentType].grades.shift();\n      }\n      // Add the graded assignment to the list\n      gradeByAssignmentType[assignmentType].grades.push(numPointsEarned ? numPointsEarned / numPointsPossible : 0);\n      // Record the created assignment\n      gradeByAssignmentType[assignmentType].numAssignmentsCreated = numAssignmentsCreated;\n    });\n  });\n\n  return assignmentPolicies.map((assignment) => {\n    const { averageGrade, weightedGrade } = calculateAssignmentTypeGrades(\n      gradeByAssignmentType[assignment.type].grades,\n      assignment.weight,\n      assignment.numDroppable,\n    );\n\n    return {\n      averageGrade,\n      numDroppable: assignment.numDroppable,\n      shortLabel: assignment.shortLabel,\n      type: assignment.type,\n      weight: assignment.weight,\n      weightedGrade,\n    };\n  });\n}\n\n/**\n * Tweak the metadata for consistency\n * @param metadata the data to normalize\n * @param rootSlug either 'courseware' or 'outline' depending on the context\n * @returns {Object} The normalized metadata\n */\nfunction normalizeCourseHomeCourseMetadata(metadata, rootSlug) {\n  const data = camelCaseObject(metadata);\n  return {\n    ...data,\n    tabs: data.tabs.map(tab => ({\n      // The API uses \"courseware\" as a slug for both courseware and the outline tab.\n      // If needed, we switch it to \"outline\" here for\n      // use within the MFE to differentiate between course home and courseware.\n      slug: tab.tabId === 'courseware' ? rootSlug : tab.tabId,\n      title: tab.title,\n      url: tab.url,\n    })),\n    isMasquerading: data.originalUserIsStaff && !data.isStaff,\n  };\n}\n\nexport function normalizeOutlineBlocks(courseId, blocks) {\n  const models = {\n    courses: {},\n    sections: {},\n    sequences: {},\n  };\n  Object.values(blocks).forEach(block => {\n    switch (block.type) {\n      case 'course':\n        models.courses[block.id] = {\n          id: courseId,\n          title: block.display_name,\n          sectionIds: block.children || [],\n          hasScheduledContent: block.has_scheduled_content,\n        };\n        break;\n\n      case 'chapter':\n        models.sections[block.id] = {\n          complete: block.complete,\n          id: block.id,\n          title: block.display_name,\n          resumeBlock: block.resume_block,\n          sequenceIds: block.children || [],\n        };\n        break;\n\n      case 'sequential':\n        models.sequences[block.id] = {\n          complete: block.complete,\n          description: block.description,\n          due: block.due,\n          effortActivities: block.effort_activities,\n          effortTime: block.effort_time,\n          icon: block.icon,\n          id: block.id,\n          // The presence of a URL for the sequence indicates that we want this sequence to be a clickable\n          // link in the outline (even though we ignore the given url and use an internal <Link> to ourselves).\n          showLink: !!block.lms_web_url,\n          title: block.display_name,\n        };\n        break;\n\n      default:\n        logInfo(`Unexpected course block type: ${block.type} with ID ${block.id}.  Expected block types are course, chapter, and sequential.`);\n    }\n  });\n\n  // Next go through each list and use their child lists to decorate those children with a\n  // reference back to their parent.\n  Object.values(models.courses).forEach(course => {\n    if (Array.isArray(course.sectionIds)) {\n      course.sectionIds.forEach(sectionId => {\n        const section = models.sections[sectionId];\n        section.courseId = course.id;\n      });\n    }\n  });\n\n  Object.values(models.sections).forEach(section => {\n    if (Array.isArray(section.sequenceIds)) {\n      section.sequenceIds.forEach(sequenceId => {\n        if (sequenceId in models.sequences) {\n          models.sequences[sequenceId].sectionId = section.id;\n        } else {\n          logInfo(`Section ${section.id} has child block ${sequenceId}, but that block is not in the list of sequences.`);\n        }\n      });\n    }\n  });\n\n  return models;\n}\n\nexport async function getCourseHomeCourseMetadata(courseId, rootSlug) {\n  let url = `${getConfig().LMS_BASE_URL}/api/course_home/course_metadata/${courseId}`;\n  url = appendBrowserTimezoneToUrl(url);\n  const { data } = await getAuthenticatedHttpClient().get(url);\n  return normalizeCourseHomeCourseMetadata(data, rootSlug);\n}\n\n// For debugging purposes, you might like to see a fully loaded dates tab.\n// Just uncomment the next few lines and the immediate 'return' in the function below\n// import { Factory } from 'rosie';\n// import './__factories__';\nexport async function getDatesTabData(courseId) {\n  // return camelCaseObject(Factory.build('datesTabData'));\n  const url = `${getConfig().LMS_BASE_URL}/api/course_home/dates/${courseId}`;\n  try {\n    const { data } = await getAuthenticatedHttpClient().get(url);\n    return camelCaseObject(data);\n  } catch (error) {\n    const httpErrorStatus = error?.response?.status;\n    if (httpErrorStatus === 401) {\n      // The backend sends this for unenrolled and unauthenticated learners, but we handle those cases by examining\n      // courseAccess in the metadata call, so just ignore this status for now.\n      return {};\n    }\n    if (httpErrorStatus === 403) {\n      // The backend sends this if there is a course access error and the user should be redirected. The redirect\n      // info is included in the course metadata request and will be handled there as long as this call returns\n      // without an error\n      return {};\n    }\n    throw error;\n  }\n}\n\nexport async function getProgressTabData(courseId, targetUserId) {\n  let url = `${getConfig().LMS_BASE_URL}/api/course_home/progress/${courseId}`;\n\n  // If targetUserId is passed in, we will get the progress page data\n  // for the user with the provided id, rather than the requesting user.\n  if (targetUserId) {\n    url += `/${targetUserId}/`;\n  }\n\n  try {\n    const { data } = await getAuthenticatedHttpClient().get(url);\n    const camelCasedData = camelCaseObject(data);\n\n    camelCasedData.gradingPolicy.assignmentPolicies = normalizeAssignmentPolicies(\n      camelCasedData.gradingPolicy.assignmentPolicies,\n      camelCasedData.sectionScores,\n    );\n\n    // We replace gradingPolicy.gradeRange with the original data to preserve the intended casing for the grade.\n    // For example, if a grade range key is \"A\", we do not want it to be camel cased (i.e. \"A\" would become \"a\")\n    // in order to preserve a course team's desired grade formatting.\n    camelCasedData.gradingPolicy.gradeRange = data.grading_policy.grade_range;\n\n    camelCasedData.gradesFeatureIsFullyLocked = camelCasedData.completionSummary.lockedCount > 0;\n\n    camelCasedData.gradesFeatureIsPartiallyLocked = false;\n    if (camelCasedData.gradesFeatureIsFullyLocked) {\n      camelCasedData.sectionScores.forEach((chapter) => {\n        chapter.subsections.forEach((subsection) => {\n          // If something is eligible to be gated by content type gating and would show up on the progress page\n          if (subsection.assignmentType !== null && subsection.hasGradedAssignment && subsection.showGrades\n            && (subsection.numPointsPossible > 0 || subsection.numPointsEarned > 0)) {\n            // but the learner still has access to it, then we are in a partially locked, rather than fully locked state\n            // since the learner has access to some (but not all) content that would normally be locked\n            if (subsection.learnerHasAccess) {\n              camelCasedData.gradesFeatureIsPartiallyLocked = true;\n              camelCasedData.gradesFeatureIsFullyLocked = false;\n            }\n          }\n        });\n      });\n    }\n\n    return camelCasedData;\n  } catch (error) {\n    const httpErrorStatus = error?.response?.status;\n    if (httpErrorStatus === 404) {\n      global.location.replace(`${getConfig().LMS_BASE_URL}/courses/${courseId}/progress`);\n      return {};\n    }\n    if (httpErrorStatus === 401) {\n      // The backend sends this for unenrolled and unauthenticated learners, but we handle those cases by examining\n      // courseAccess in the metadata call, so just ignore this status for now.\n      return {};\n    }\n    if (httpErrorStatus === 403) {\n      // The backend sends this if there is a course access error and the user should be redirected. The redirect\n      // info is included in the course metadata request and will be handled there as long as this call returns\n      // without an error\n      return {};\n    }\n    throw error;\n  }\n}\n\nexport async function getProctoringInfoData(courseId, username) {\n  let url = `${getConfig().LMS_BASE_URL}/api/edx_proctoring/v1/user_onboarding/status?is_learning_mfe=true&course_id=${encodeURIComponent(courseId)}`;\n  if (username) {\n    url += `&username=${encodeURIComponent(username)}`;\n  }\n  try {\n    const { data } = await getAuthenticatedHttpClient().get(url);\n    return data;\n  } catch (error) {\n    const { httpErrorStatus } = error && error.customAttributes;\n    if (httpErrorStatus === 404) {\n      return {};\n    }\n    throw error;\n  }\n}\n\nexport async function getLiveTabIframe(courseId) {\n  const url = `${getConfig().LMS_BASE_URL}/api/course_live/iframe/${courseId}/`;\n  try {\n    const { data } = await getAuthenticatedHttpClient().get(url);\n    return data;\n  } catch (error) {\n    const { httpErrorStatus } = error && error.customAttributes;\n    if (httpErrorStatus === 404) {\n      return {};\n    }\n    throw error;\n  }\n}\n\nexport function getTimeOffsetMillis(headerDate, requestTime, responseTime) {\n  // Time offset computation should move down into the HttpClient wrapper to maintain a global time correction reference\n  // Requires 'Access-Control-Expose-Headers: Date' on the server response per https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#access-control-expose-headers\n\n  let timeOffsetMillis = 0;\n  if (headerDate !== undefined) {\n    const headerTime = Date.parse(headerDate);\n    const roundTripMillis = requestTime - responseTime;\n    const localTime = responseTime - (roundTripMillis / 2); // Roughly compensate for transit time\n    timeOffsetMillis = headerTime - localTime;\n  }\n\n  return timeOffsetMillis;\n}\n\nexport async function getOutlineTabData(courseId) {\n  const url = `${getConfig().LMS_BASE_URL}/api/course_home/outline/${courseId}`;\n  const requestTime = Date.now();\n  let tabData;\n  try {\n    tabData = await getAuthenticatedHttpClient().get(url);\n  } catch (error) {\n    const httpErrorStatus = error?.response?.status;\n    if (httpErrorStatus === 403) {\n      // The backend sends this if there is a course access error and the user should be redirected. The redirect\n      // info is included in the course metadata request and will be handled there as long as this call returns\n      // without an error\n      return {};\n    }\n    throw error;\n  }\n\n  const responseTime = Date.now();\n\n  const {\n    data,\n    headers,\n  } = tabData;\n\n  const accessExpiration = camelCaseObject(data.access_expiration);\n  const canShowUpgradeSock = data.can_show_upgrade_sock;\n  const certData = camelCaseObject(data.cert_data);\n  const courseBlocks = data.course_blocks ? normalizeOutlineBlocks(courseId, data.course_blocks.blocks) : {};\n  const courseGoals = camelCaseObject(data.course_goals);\n  const courseTools = camelCaseObject(data.course_tools);\n  const datesBannerInfo = camelCaseObject(data.dates_banner_info);\n  const datesWidget = camelCaseObject(data.dates_widget);\n  const enableProctoredExams = data.enable_proctored_exams;\n  const enrollAlert = camelCaseObject(data.enroll_alert);\n  const enrollmentMode = data.enrollment_mode;\n  const handoutsHtml = data.handouts_html;\n  const hasScheduledContent = data.has_scheduled_content;\n  const hasEnded = data.has_ended;\n  const offer = camelCaseObject(data.offer);\n  const resumeCourse = camelCaseObject(data.resume_course);\n  const timeOffsetMillis = getTimeOffsetMillis(headers && headers.date, requestTime, responseTime);\n  const userHasPassingGrade = data.user_has_passing_grade;\n  const verifiedMode = camelCaseObject(data.verified_mode);\n  const welcomeMessageHtml = data.welcome_message_html || '';\n\n  return {\n    accessExpiration,\n    canShowUpgradeSock,\n    certData,\n    courseBlocks,\n    courseGoals,\n    courseTools,\n    datesBannerInfo,\n    datesWidget,\n    enrollAlert,\n    enrollmentMode,\n    enableProctoredExams,\n    handoutsHtml,\n    hasScheduledContent,\n    hasEnded,\n    offer,\n    resumeCourse,\n    timeOffsetMillis, // This should move to a global time correction reference\n    userHasPassingGrade,\n    verifiedMode,\n    welcomeMessageHtml,\n  };\n}\n\nexport async function postCourseDeadlines(courseId, model) {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/course_experience/v1/reset_course_deadlines`);\n  return getAuthenticatedHttpClient().post(url.href, {\n    course_key: courseId,\n    research_event_data: { location: `${model}-tab` },\n  });\n}\n\nexport async function deprecatedPostCourseGoals(courseId, goalKey) {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/course_home/save_course_goal`);\n  return getAuthenticatedHttpClient().post(url.href, { course_id: courseId, goal_key: goalKey });\n}\n\nexport async function postWeeklyLearningGoal(courseId, daysPerWeek, subscribedToReminders) {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/course_home/save_course_goal`);\n  return getAuthenticatedHttpClient().post(url.href, {\n    course_id: courseId,\n    days_per_week: daysPerWeek,\n    subscribed_to_reminders: subscribedToReminders,\n  });\n}\n\nexport async function postDismissWelcomeMessage(courseId) {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/course_home/dismiss_welcome_message`);\n  await getAuthenticatedHttpClient().post(url.href, { course_id: courseId });\n}\n\nexport async function postRequestCert(courseId) {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/courses/${courseId}/generate_user_cert`);\n  await getAuthenticatedHttpClient().post(url.href);\n}\n\nexport async function executePostFromPostEvent(postData, researchEventData) {\n  const url = new URL(postData.url);\n  return getAuthenticatedHttpClient().post(url.href, {\n    course_key: postData.bodyParams.courseId,\n    research_event_data: researchEventData,\n  });\n}\n\nexport async function unsubscribeFromCourseGoal(token) {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/course_home/unsubscribe_from_course_goal/${token}`);\n  return getAuthenticatedHttpClient().post(url.href)\n    .then(res => camelCaseObject(res));\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,QAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AAAyD,SAAAI,QAAAC,MAAA,EAAAC,cAAA,QAAAC,IAAA,GAAAC,MAAA,CAAAD,IAAA,CAAAF,MAAA,OAAAG,MAAA,CAAAC,qBAAA,QAAAC,OAAA,GAAAF,MAAA,CAAAC,qBAAA,CAAAJ,MAAA,GAAAC,cAAA,KAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA,WAAAJ,MAAA,CAAAK,wBAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA,OAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA,YAAAH,IAAA;AAAA,SAAAU,cAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,WAAAF,SAAA,CAAAD,CAAA,IAAAC,SAAA,CAAAD,CAAA,QAAAA,CAAA,OAAAf,OAAA,CAAAI,MAAA,CAAAc,MAAA,OAAAC,OAAA,WAAAC,GAAA,IAAAC,eAAA,CAAAP,MAAA,EAAAM,GAAA,EAAAF,MAAA,CAAAE,GAAA,SAAAhB,MAAA,CAAAkB,yBAAA,GAAAlB,MAAA,CAAAmB,gBAAA,CAAAT,MAAA,EAAAV,MAAA,CAAAkB,yBAAA,CAAAJ,MAAA,KAAAlB,OAAA,CAAAI,MAAA,CAAAc,MAAA,GAAAC,OAAA,WAAAC,GAAA,IAAAhB,MAAA,CAAAoB,cAAA,CAAAV,MAAA,EAAAM,GAAA,EAAAhB,MAAA,CAAAK,wBAAA,CAAAS,MAAA,EAAAE,GAAA,iBAAAN,MAAA;AAAA,SAAAO,gBAAAI,GAAA,EAAAL,GAAA,EAAAM,KAAA,IAAAN,GAAA,GAAAO,cAAA,CAAAP,GAAA,OAAAA,GAAA,IAAAK,GAAA,IAAArB,MAAA,CAAAoB,cAAA,CAAAC,GAAA,EAAAL,GAAA,IAAAM,KAAA,EAAAA,KAAA,EAAAhB,UAAA,QAAAkB,YAAA,QAAAC,QAAA,oBAAAJ,GAAA,CAAAL,GAAA,IAAAM,KAAA,WAAAD,GAAA;AAAA,SAAAE,eAAAG,GAAA,QAAAV,GAAA,GAAAW,YAAA,CAAAD,GAAA,2BAAAV,GAAA,gBAAAA,GAAA,GAAAY,MAAA,CAAAZ,GAAA;AAAA,SAAAW,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAEzD,MAAMU,6BAA6B,GAAGA,CAACC,MAAM,EAAEC,gBAAgB,EAAEC,YAAY,KAAK;EAChF,IAAIC,SAAS,GAAGD,YAAY;EAC5B;EACA,OAAOC,SAAS,IAAIH,MAAM,CAAC3B,MAAM,IAAI8B,SAAS,EAAE;IAC9C,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,MAAM,CAAC;IACvC,MAAMO,gBAAgB,GAAGP,MAAM,CAACQ,OAAO,CAACJ,WAAW,CAAC;IACpDJ,MAAM,CAACS,MAAM,CAACF,gBAAgB,EAAE,CAAC,CAAC;IAClCJ,SAAS,EAAE;EACb;EACA,IAAIO,YAAY,GAAG,CAAC;EACpB,IAAIC,aAAa,GAAG,CAAC;EACrB,IAAIX,MAAM,CAAC3B,MAAM,EAAE;IACjB;IACA;IACA;IACAqC,YAAY,GAAG,CAACV,MAAM,CAACY,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC,GAAGd,MAAM,CAAC3B,MAAM,EAAE0C,OAAO,CAAC,CAAC,CAAC;IAC7EJ,aAAa,GAAGD,YAAY,GAAGT,gBAAgB;EACjD;EACA,OAAO;IAAES,YAAY;IAAEC;EAAc,CAAC;AACxC,CAAC;AAED,SAASK,2BAA2BA,CAACC,kBAAkB,EAAEC,aAAa,EAAE;EACtE,MAAMC,qBAAqB,GAAG,CAAC,CAAC;EAChCF,kBAAkB,CAAC1C,OAAO,CAAC6C,UAAU,IAAI;IACvC;IACA;IACAD,qBAAqB,CAACC,UAAU,CAACC,IAAI,CAAC,GAAG;MACvCC,MAAM,EAAEC,KAAK,CAACH,UAAU,CAACI,QAAQ,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;MAC1CC,qBAAqB,EAAE,CAAC;MACxBC,2BAA2B,EAAEP,UAAU,CAACI;IAC1C,CAAC;EACH,CAAC,CAAC;EAEFN,aAAa,CAAC3C,OAAO,CAAEqD,OAAO,IAAK;IACjCA,OAAO,CAACC,WAAW,CAACtD,OAAO,CAAEuD,UAAU,IAAK;MAC1C,IAAI,EAAEA,UAAU,CAACC,mBAAmB,IAAID,UAAU,CAACE,UAAU,IAAIF,UAAU,CAACG,iBAAiB,CAAC,EAAE;QAC9F;MACF;MACA,MAAM;QACJC,cAAc;QACdC,eAAe;QACfF;MACF,CAAC,GAAGH,UAAU;;MAEd;MACA;MACA;MACA;MACA,IAAI,CAACX,qBAAqB,CAACe,cAAc,CAAC,EAAE;QAC1C;MACF;MAEA,IAAI;QACFR;MACF,CAAC,GAAGP,qBAAqB,CAACe,cAAc,CAAC;MAEzCR,qBAAqB,EAAE;MACvB,IAAIA,qBAAqB,IAAIP,qBAAqB,CAACe,cAAc,CAAC,CAACP,2BAA2B,EAAE;QAC9F;QACA;QACAR,qBAAqB,CAACe,cAAc,CAAC,CAACZ,MAAM,CAACc,KAAK,CAAC,CAAC;MACtD;MACA;MACAjB,qBAAqB,CAACe,cAAc,CAAC,CAACZ,MAAM,CAACvD,IAAI,CAACoE,eAAe,GAAGA,eAAe,GAAGF,iBAAiB,GAAG,CAAC,CAAC;MAC5G;MACAd,qBAAqB,CAACe,cAAc,CAAC,CAACR,qBAAqB,GAAGA,qBAAqB;IACrF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOT,kBAAkB,CAACoB,GAAG,CAAEjB,UAAU,IAAK;IAC5C,MAAM;MAAEV,YAAY;MAAEC;IAAc,CAAC,GAAGZ,6BAA6B,CACnEoB,qBAAqB,CAACC,UAAU,CAACC,IAAI,CAAC,CAACC,MAAM,EAC7CF,UAAU,CAACkB,MAAM,EACjBlB,UAAU,CAAClB,YACb,CAAC;IAED,OAAO;MACLQ,YAAY;MACZR,YAAY,EAAEkB,UAAU,CAAClB,YAAY;MACrCqC,UAAU,EAAEnB,UAAU,CAACmB,UAAU;MACjClB,IAAI,EAAED,UAAU,CAACC,IAAI;MACrBiB,MAAM,EAAElB,UAAU,CAACkB,MAAM;MACzB3B;IACF,CAAC;EACH,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6B,iCAAiCA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC7D,MAAMC,IAAI,GAAG,IAAAC,iCAAe,EAACH,QAAQ,CAAC;EACtC,OAAAxE,aAAA,CAAAA,aAAA,KACK0E,IAAI;IACPE,IAAI,EAAEF,IAAI,CAACE,IAAI,CAACR,GAAG,CAACS,GAAG,KAAK;MAC1B;MACA;MACA;MACAC,IAAI,EAAED,GAAG,CAACE,KAAK,KAAK,YAAY,GAAGN,QAAQ,GAAGI,GAAG,CAACE,KAAK;MACvDC,KAAK,EAAEH,GAAG,CAACG,KAAK;MAChBC,GAAG,EAAEJ,GAAG,CAACI;IACX,CAAC,CAAC,CAAC;IACHC,cAAc,EAAER,IAAI,CAACS,mBAAmB,IAAI,CAACT,IAAI,CAACU;EAAO;AAE7D;AAEO,SAASC,sBAAsBA,CAACC,QAAQ,EAAEC,MAAM,EAAE;EACvD,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE,CAAC,CAAC;IACXC,QAAQ,EAAE,CAAC,CAAC;IACZC,SAAS,EAAE,CAAC;EACd,CAAC;EACDpG,MAAM,CAACqG,MAAM,CAACL,MAAM,CAAC,CAACjF,OAAO,CAACuF,KAAK,IAAI;IACrC,QAAQA,KAAK,CAACzC,IAAI;MAChB,KAAK,QAAQ;QACXoC,MAAM,CAACC,OAAO,CAACI,KAAK,CAACC,EAAE,CAAC,GAAG;UACzBA,EAAE,EAAER,QAAQ;UACZN,KAAK,EAAEa,KAAK,CAACE,YAAY;UACzBC,UAAU,EAAEH,KAAK,CAACI,QAAQ,IAAI,EAAE;UAChCC,mBAAmB,EAAEL,KAAK,CAACM;QAC7B,CAAC;QACD;MAEF,KAAK,SAAS;QACZX,MAAM,CAACE,QAAQ,CAACG,KAAK,CAACC,EAAE,CAAC,GAAG;UAC1BM,QAAQ,EAAEP,KAAK,CAACO,QAAQ;UACxBN,EAAE,EAAED,KAAK,CAACC,EAAE;UACZd,KAAK,EAAEa,KAAK,CAACE,YAAY;UACzBM,WAAW,EAAER,KAAK,CAACS,YAAY;UAC/BC,WAAW,EAAEV,KAAK,CAACI,QAAQ,IAAI;QACjC,CAAC;QACD;MAEF,KAAK,YAAY;QACfT,MAAM,CAACG,SAAS,CAACE,KAAK,CAACC,EAAE,CAAC,GAAG;UAC3BM,QAAQ,EAAEP,KAAK,CAACO,QAAQ;UACxBI,WAAW,EAAEX,KAAK,CAACW,WAAW;UAC9BC,GAAG,EAAEZ,KAAK,CAACY,GAAG;UACdC,gBAAgB,EAAEb,KAAK,CAACc,iBAAiB;UACzCC,UAAU,EAAEf,KAAK,CAACgB,WAAW;UAC7BC,IAAI,EAAEjB,KAAK,CAACiB,IAAI;UAChBhB,EAAE,EAAED,KAAK,CAACC,EAAE;UACZ;UACA;UACAiB,QAAQ,EAAE,CAAC,CAAClB,KAAK,CAACmB,WAAW;UAC7BhC,KAAK,EAAEa,KAAK,CAACE;QACf,CAAC;QACD;MAEF;QACE,IAAAkB,gBAAO,EAAE,iCAAgCpB,KAAK,CAACzC,IAAK,YAAWyC,KAAK,CAACC,EAAG,8DAA6D,CAAC;IAC1I;EACF,CAAC,CAAC;;EAEF;EACA;EACAvG,MAAM,CAACqG,MAAM,CAACJ,MAAM,CAACC,OAAO,CAAC,CAACnF,OAAO,CAAC4G,MAAM,IAAI;IAC9C,IAAI5D,KAAK,CAAC6D,OAAO,CAACD,MAAM,CAAClB,UAAU,CAAC,EAAE;MACpCkB,MAAM,CAAClB,UAAU,CAAC1F,OAAO,CAAC8G,SAAS,IAAI;QACrC,MAAMC,OAAO,GAAG7B,MAAM,CAACE,QAAQ,CAAC0B,SAAS,CAAC;QAC1CC,OAAO,CAAC/B,QAAQ,GAAG4B,MAAM,CAACpB,EAAE;MAC9B,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEFvG,MAAM,CAACqG,MAAM,CAACJ,MAAM,CAACE,QAAQ,CAAC,CAACpF,OAAO,CAAC+G,OAAO,IAAI;IAChD,IAAI/D,KAAK,CAAC6D,OAAO,CAACE,OAAO,CAACd,WAAW,CAAC,EAAE;MACtCc,OAAO,CAACd,WAAW,CAACjG,OAAO,CAACgH,UAAU,IAAI;QACxC,IAAIA,UAAU,IAAI9B,MAAM,CAACG,SAAS,EAAE;UAClCH,MAAM,CAACG,SAAS,CAAC2B,UAAU,CAAC,CAACF,SAAS,GAAGC,OAAO,CAACvB,EAAE;QACrD,CAAC,MAAM;UACL,IAAAmB,gBAAO,EAAE,WAAUI,OAAO,CAACvB,EAAG,oBAAmBwB,UAAW,mDAAkD,CAAC;QACjH;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,OAAO9B,MAAM;AACf;AAEO,eAAe+B,2BAA2BA,CAACjC,QAAQ,EAAEb,QAAQ,EAAE;EACpE,IAAIQ,GAAG,GAAI,GAAE,IAAAuC,2BAAS,EAAC,CAAC,CAACC,YAAa,oCAAmCnC,QAAS,EAAC;EACnFL,GAAG,GAAG,IAAAyC,iCAA0B,EAACzC,GAAG,CAAC;EACrC,MAAM;IAAEP;EAAK,CAAC,GAAG,MAAM,IAAAiD,gCAA0B,EAAC,CAAC,CAACC,GAAG,CAAC3C,GAAG,CAAC;EAC5D,OAAOV,iCAAiC,CAACG,IAAI,EAAED,QAAQ,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACO,eAAeoD,eAAeA,CAACvC,QAAQ,EAAE;EAC9C;EACA,MAAML,GAAG,GAAI,GAAE,IAAAuC,2BAAS,EAAC,CAAC,CAACC,YAAa,0BAAyBnC,QAAS,EAAC;EAC3E,IAAI;IACF,MAAM;MAAEZ;IAAK,CAAC,GAAG,MAAM,IAAAiD,gCAA0B,EAAC,CAAC,CAACC,GAAG,CAAC3C,GAAG,CAAC;IAC5D,OAAO,IAAAN,iCAAe,EAACD,IAAI,CAAC;EAC9B,CAAC,CAAC,OAAOoD,KAAK,EAAE;IACd,MAAMC,eAAe,GAAGD,KAAK,EAAEE,QAAQ,EAAEC,MAAM;IAC/C,IAAIF,eAAe,KAAK,GAAG,EAAE;MAC3B;MACA;MACA,OAAO,CAAC,CAAC;IACX;IACA,IAAIA,eAAe,KAAK,GAAG,EAAE;MAC3B;MACA;MACA;MACA,OAAO,CAAC,CAAC;IACX;IACA,MAAMD,KAAK;EACb;AACF;AAEO,eAAeI,kBAAkBA,CAAC5C,QAAQ,EAAE6C,YAAY,EAAE;EAC/D,IAAIlD,GAAG,GAAI,GAAE,IAAAuC,2BAAS,EAAC,CAAC,CAACC,YAAa,6BAA4BnC,QAAS,EAAC;;EAE5E;EACA;EACA,IAAI6C,YAAY,EAAE;IAChBlD,GAAG,IAAK,IAAGkD,YAAa,GAAE;EAC5B;EAEA,IAAI;IACF,MAAM;MAAEzD;IAAK,CAAC,GAAG,MAAM,IAAAiD,gCAA0B,EAAC,CAAC,CAACC,GAAG,CAAC3C,GAAG,CAAC;IAC5D,MAAMmD,cAAc,GAAG,IAAAzD,iCAAe,EAACD,IAAI,CAAC;IAE5C0D,cAAc,CAACC,aAAa,CAACrF,kBAAkB,GAAGD,2BAA2B,CAC3EqF,cAAc,CAACC,aAAa,CAACrF,kBAAkB,EAC/CoF,cAAc,CAACnF,aACjB,CAAC;;IAED;IACA;IACA;IACAmF,cAAc,CAACC,aAAa,CAACC,UAAU,GAAG5D,IAAI,CAAC6D,cAAc,CAACC,WAAW;IAEzEJ,cAAc,CAACK,0BAA0B,GAAGL,cAAc,CAACM,iBAAiB,CAACC,WAAW,GAAG,CAAC;IAE5FP,cAAc,CAACQ,8BAA8B,GAAG,KAAK;IACrD,IAAIR,cAAc,CAACK,0BAA0B,EAAE;MAC7CL,cAAc,CAACnF,aAAa,CAAC3C,OAAO,CAAEqD,OAAO,IAAK;QAChDA,OAAO,CAACC,WAAW,CAACtD,OAAO,CAAEuD,UAAU,IAAK;UAC1C;UACA,IAAIA,UAAU,CAACI,cAAc,KAAK,IAAI,IAAIJ,UAAU,CAACC,mBAAmB,IAAID,UAAU,CAACE,UAAU,KAC3FF,UAAU,CAACG,iBAAiB,GAAG,CAAC,IAAIH,UAAU,CAACK,eAAe,GAAG,CAAC,CAAC,EAAE;YACzE;YACA;YACA,IAAIL,UAAU,CAACgF,gBAAgB,EAAE;cAC/BT,cAAc,CAACQ,8BAA8B,GAAG,IAAI;cACpDR,cAAc,CAACK,0BAA0B,GAAG,KAAK;YACnD;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEA,OAAOL,cAAc;EACvB,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,MAAMC,eAAe,GAAGD,KAAK,EAAEE,QAAQ,EAAEC,MAAM;IAC/C,IAAIF,eAAe,KAAK,GAAG,EAAE;MAC3Be,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAE,GAAE,IAAAxB,2BAAS,EAAC,CAAC,CAACC,YAAa,YAAWnC,QAAS,WAAU,CAAC;MACnF,OAAO,CAAC,CAAC;IACX;IACA,IAAIyC,eAAe,KAAK,GAAG,EAAE;MAC3B;MACA;MACA,OAAO,CAAC,CAAC;IACX;IACA,IAAIA,eAAe,KAAK,GAAG,EAAE;MAC3B;MACA;MACA;MACA,OAAO,CAAC,CAAC;IACX;IACA,MAAMD,KAAK;EACb;AACF;AAEO,eAAemB,qBAAqBA,CAAC3D,QAAQ,EAAE4D,QAAQ,EAAE;EAC9D,IAAIjE,GAAG,GAAI,GAAE,IAAAuC,2BAAS,EAAC,CAAC,CAACC,YAAa,gFAA+E0B,kBAAkB,CAAC7D,QAAQ,CAAE,EAAC;EACnJ,IAAI4D,QAAQ,EAAE;IACZjE,GAAG,IAAK,aAAYkE,kBAAkB,CAACD,QAAQ,CAAE,EAAC;EACpD;EACA,IAAI;IACF,MAAM;MAAExE;IAAK,CAAC,GAAG,MAAM,IAAAiD,gCAA0B,EAAC,CAAC,CAACC,GAAG,CAAC3C,GAAG,CAAC;IAC5D,OAAOP,IAAI;EACb,CAAC,CAAC,OAAOoD,KAAK,EAAE;IACd,MAAM;MAAEC;IAAgB,CAAC,GAAGD,KAAK,IAAIA,KAAK,CAACsB,gBAAgB;IAC3D,IAAIrB,eAAe,KAAK,GAAG,EAAE;MAC3B,OAAO,CAAC,CAAC;IACX;IACA,MAAMD,KAAK;EACb;AACF;AAEO,eAAeuB,gBAAgBA,CAAC/D,QAAQ,EAAE;EAC/C,MAAML,GAAG,GAAI,GAAE,IAAAuC,2BAAS,EAAC,CAAC,CAACC,YAAa,2BAA0BnC,QAAS,GAAE;EAC7E,IAAI;IACF,MAAM;MAAEZ;IAAK,CAAC,GAAG,MAAM,IAAAiD,gCAA0B,EAAC,CAAC,CAACC,GAAG,CAAC3C,GAAG,CAAC;IAC5D,OAAOP,IAAI;EACb,CAAC,CAAC,OAAOoD,KAAK,EAAE;IACd,MAAM;MAAEC;IAAgB,CAAC,GAAGD,KAAK,IAAIA,KAAK,CAACsB,gBAAgB;IAC3D,IAAIrB,eAAe,KAAK,GAAG,EAAE;MAC3B,OAAO,CAAC,CAAC;IACX;IACA,MAAMD,KAAK;EACb;AACF;AAEO,SAASwB,mBAAmBA,CAACC,UAAU,EAAEC,WAAW,EAAEC,YAAY,EAAE;EACzE;EACA;;EAEA,IAAIC,gBAAgB,GAAG,CAAC;EACxB,IAAIH,UAAU,KAAK9H,SAAS,EAAE;IAC5B,MAAMkI,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACN,UAAU,CAAC;IACzC,MAAMO,eAAe,GAAGN,WAAW,GAAGC,YAAY;IAClD,MAAMM,SAAS,GAAGN,YAAY,GAAIK,eAAe,GAAG,CAAE,CAAC,CAAC;IACxDJ,gBAAgB,GAAGC,UAAU,GAAGI,SAAS;EAC3C;EAEA,OAAOL,gBAAgB;AACzB;AAEO,eAAeM,iBAAiBA,CAAC1E,QAAQ,EAAE;EAChD,MAAML,GAAG,GAAI,GAAE,IAAAuC,2BAAS,EAAC,CAAC,CAACC,YAAa,4BAA2BnC,QAAS,EAAC;EAC7E,MAAMkE,WAAW,GAAGI,IAAI,CAACK,GAAG,CAAC,CAAC;EAC9B,IAAIC,OAAO;EACX,IAAI;IACFA,OAAO,GAAG,MAAM,IAAAvC,gCAA0B,EAAC,CAAC,CAACC,GAAG,CAAC3C,GAAG,CAAC;EACvD,CAAC,CAAC,OAAO6C,KAAK,EAAE;IACd,MAAMC,eAAe,GAAGD,KAAK,EAAEE,QAAQ,EAAEC,MAAM;IAC/C,IAAIF,eAAe,KAAK,GAAG,EAAE;MAC3B;MACA;MACA;MACA,OAAO,CAAC,CAAC;IACX;IACA,MAAMD,KAAK;EACb;EAEA,MAAM2B,YAAY,GAAGG,IAAI,CAACK,GAAG,CAAC,CAAC;EAE/B,MAAM;IACJvF,IAAI;IACJyF;EACF,CAAC,GAAGD,OAAO;EAEX,MAAME,gBAAgB,GAAG,IAAAzF,iCAAe,EAACD,IAAI,CAAC2F,iBAAiB,CAAC;EAChE,MAAMC,kBAAkB,GAAG5F,IAAI,CAAC6F,qBAAqB;EACrD,MAAMC,QAAQ,GAAG,IAAA7F,iCAAe,EAACD,IAAI,CAAC+F,SAAS,CAAC;EAChD,MAAMC,YAAY,GAAGhG,IAAI,CAACiG,aAAa,GAAGtF,sBAAsB,CAACC,QAAQ,EAAEZ,IAAI,CAACiG,aAAa,CAACpF,MAAM,CAAC,GAAG,CAAC,CAAC;EAC1G,MAAMqF,WAAW,GAAG,IAAAjG,iCAAe,EAACD,IAAI,CAACmG,YAAY,CAAC;EACtD,MAAMC,WAAW,GAAG,IAAAnG,iCAAe,EAACD,IAAI,CAACqG,YAAY,CAAC;EACtD,MAAMC,eAAe,GAAG,IAAArG,iCAAe,EAACD,IAAI,CAACuG,iBAAiB,CAAC;EAC/D,MAAMC,WAAW,GAAG,IAAAvG,iCAAe,EAACD,IAAI,CAACyG,YAAY,CAAC;EACtD,MAAMC,oBAAoB,GAAG1G,IAAI,CAAC2G,sBAAsB;EACxD,MAAMC,WAAW,GAAG,IAAA3G,iCAAe,EAACD,IAAI,CAAC6G,YAAY,CAAC;EACtD,MAAMC,cAAc,GAAG9G,IAAI,CAAC+G,eAAe;EAC3C,MAAMC,YAAY,GAAGhH,IAAI,CAACiH,aAAa;EACvC,MAAMzF,mBAAmB,GAAGxB,IAAI,CAACyB,qBAAqB;EACtD,MAAMyF,QAAQ,GAAGlH,IAAI,CAACmH,SAAS;EAC/B,MAAMC,KAAK,GAAG,IAAAnH,iCAAe,EAACD,IAAI,CAACoH,KAAK,CAAC;EACzC,MAAMC,YAAY,GAAG,IAAApH,iCAAe,EAACD,IAAI,CAACsH,aAAa,CAAC;EACxD,MAAMtC,gBAAgB,GAAGJ,mBAAmB,CAACa,OAAO,IAAIA,OAAO,CAAC8B,IAAI,EAAEzC,WAAW,EAAEC,YAAY,CAAC;EAChG,MAAMyC,mBAAmB,GAAGxH,IAAI,CAACyH,sBAAsB;EACvD,MAAMC,YAAY,GAAG,IAAAzH,iCAAe,EAACD,IAAI,CAAC2H,aAAa,CAAC;EACxD,MAAMC,kBAAkB,GAAG5H,IAAI,CAAC6H,oBAAoB,IAAI,EAAE;EAE1D,OAAO;IACLnC,gBAAgB;IAChBE,kBAAkB;IAClBE,QAAQ;IACRE,YAAY;IACZE,WAAW;IACXE,WAAW;IACXE,eAAe;IACfE,WAAW;IACXI,WAAW;IACXE,cAAc;IACdJ,oBAAoB;IACpBM,YAAY;IACZxF,mBAAmB;IACnB0F,QAAQ;IACRE,KAAK;IACLC,YAAY;IACZrC,gBAAgB;IAAE;IAClBwC,mBAAmB;IACnBE,YAAY;IACZE;EACF,CAAC;AACH;AAEO,eAAeE,mBAAmBA,CAAClH,QAAQ,EAAEmH,KAAK,EAAE;EACzD,MAAMxH,GAAG,GAAG,IAAIyH,GAAG,CAAE,GAAE,IAAAlF,2BAAS,EAAC,CAAC,CAACC,YAAa,kDAAiD,CAAC;EAClG,OAAO,IAAAE,gCAA0B,EAAC,CAAC,CAACgF,IAAI,CAAC1H,GAAG,CAAC2H,IAAI,EAAE;IACjDC,UAAU,EAAEvH,QAAQ;IACpBwH,mBAAmB,EAAE;MAAE/D,QAAQ,EAAG,GAAE0D,KAAM;IAAM;EAClD,CAAC,CAAC;AACJ;AAEO,eAAeM,yBAAyBA,CAACzH,QAAQ,EAAE0H,OAAO,EAAE;EACjE,MAAM/H,GAAG,GAAG,IAAIyH,GAAG,CAAE,GAAE,IAAAlF,2BAAS,EAAC,CAAC,CAACC,YAAa,mCAAkC,CAAC;EACnF,OAAO,IAAAE,gCAA0B,EAAC,CAAC,CAACgF,IAAI,CAAC1H,GAAG,CAAC2H,IAAI,EAAE;IAAEK,SAAS,EAAE3H,QAAQ;IAAE4H,QAAQ,EAAEF;EAAQ,CAAC,CAAC;AAChG;AAEO,eAAeG,sBAAsBA,CAAC7H,QAAQ,EAAE8H,WAAW,EAAEC,qBAAqB,EAAE;EACzF,MAAMpI,GAAG,GAAG,IAAIyH,GAAG,CAAE,GAAE,IAAAlF,2BAAS,EAAC,CAAC,CAACC,YAAa,mCAAkC,CAAC;EACnF,OAAO,IAAAE,gCAA0B,EAAC,CAAC,CAACgF,IAAI,CAAC1H,GAAG,CAAC2H,IAAI,EAAE;IACjDK,SAAS,EAAE3H,QAAQ;IACnBgI,aAAa,EAAEF,WAAW;IAC1BG,uBAAuB,EAAEF;EAC3B,CAAC,CAAC;AACJ;AAEO,eAAeG,yBAAyBA,CAAClI,QAAQ,EAAE;EACxD,MAAML,GAAG,GAAG,IAAIyH,GAAG,CAAE,GAAE,IAAAlF,2BAAS,EAAC,CAAC,CAACC,YAAa,0CAAyC,CAAC;EAC1F,MAAM,IAAAE,gCAA0B,EAAC,CAAC,CAACgF,IAAI,CAAC1H,GAAG,CAAC2H,IAAI,EAAE;IAAEK,SAAS,EAAE3H;EAAS,CAAC,CAAC;AAC5E;AAEO,eAAemI,eAAeA,CAACnI,QAAQ,EAAE;EAC9C,MAAML,GAAG,GAAG,IAAIyH,GAAG,CAAE,GAAE,IAAAlF,2BAAS,EAAC,CAAC,CAACC,YAAa,YAAWnC,QAAS,qBAAoB,CAAC;EACzF,MAAM,IAAAqC,gCAA0B,EAAC,CAAC,CAACgF,IAAI,CAAC1H,GAAG,CAAC2H,IAAI,CAAC;AACnD;AAEO,eAAec,wBAAwBA,CAACC,QAAQ,EAAEC,iBAAiB,EAAE;EAC1E,MAAM3I,GAAG,GAAG,IAAIyH,GAAG,CAACiB,QAAQ,CAAC1I,GAAG,CAAC;EACjC,OAAO,IAAA0C,gCAA0B,EAAC,CAAC,CAACgF,IAAI,CAAC1H,GAAG,CAAC2H,IAAI,EAAE;IACjDC,UAAU,EAAEc,QAAQ,CAACE,UAAU,CAACvI,QAAQ;IACxCwH,mBAAmB,EAAEc;EACvB,CAAC,CAAC;AACJ;AAEO,eAAeE,yBAAyBA,CAACC,KAAK,EAAE;EACrD,MAAM9I,GAAG,GAAG,IAAIyH,GAAG,CAAE,GAAE,IAAAlF,2BAAS,EAAC,CAAC,CAACC,YAAa,iDAAgDsG,KAAM,EAAC,CAAC;EACxG,OAAO,IAAApG,gCAA0B,EAAC,CAAC,CAACgF,IAAI,CAAC1H,GAAG,CAAC2H,IAAI,CAAC,CAC/CoB,IAAI,CAACtM,GAAG,IAAI,IAAAiD,iCAAe,EAACjD,GAAG,CAAC,CAAC;AACtC"}