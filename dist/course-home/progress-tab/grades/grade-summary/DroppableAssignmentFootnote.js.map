{"version":3,"sources":["../../../../../src/course-home/progress-tab/grades/grade-summary/DroppableAssignmentFootnote.jsx"],"names":["DroppableAssignmentFootnote","footnotes","intl","courseId","state","courseHome","gradesFeatureIsFullyLocked","formatMessage","messages","footnotesTitle","map","footnote","index","id","numDroppable","assignmentType","backToContent","propTypes","PropTypes","arrayOf","shape","string","isRequired","number","intlShape"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;;;;;AAEA,SAASA,2BAAT,OAA0D;AAAA,MAArB;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAqB;AACxD,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAGA,QAAM;AACJC,IAAAA;AADI,MAEF,0BAAS,UAAT,EAAqBH,QAArB,CAFJ;AAGA,sBACE;AAAA,4BACE;AAAM,MAAA,EAAE,EAAC,8BAAT;AAAwC,MAAA,SAAS,EAAC,SAAlD;AAAA,gBAA6DD,IAAI,CAACK,aAAL,CAAmBC,kBAASC,cAA5B;AAA7D,MADF,eAEE;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA,gBACGR,SAAS,CAACS,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,kBACb;AAAI,QAAA,EAAE,EAAG,GAAED,QAAQ,CAACE,EAAG,WAAvB;AAAqD,QAAA,SAAS,EAAC,cAA/D;AAAA,gCACE;AAAA,oBAAMD,KAAK,GAAG;AAAd,UADF,eAEE,qBAAC,sBAAD;AACE,UAAA,EAAE,EAAC,yCADL;AAEE,UAAA,cAAc,EAAC,mHAFjB;AAGE,UAAA,MAAM,EAAE;AACNE,YAAAA,YAAY,EAAEH,QAAQ,CAACG,YADjB;AAENC,YAAAA,cAAc,EAAEJ,QAAQ,CAACI;AAFnB;AAHV,UAFF,eAUE;AAAG,UAAA,SAAS,EAAC,SAAb;AAAuB,UAAA,IAAI,EAAG,IAAGJ,QAAQ,CAACE,EAAG,MAA7C;AAAoD,UAAA,QAAQ,EAAEP,0BAA0B,GAAG,IAAH,GAAU,GAAlG;AAAA,oBACGJ,IAAI,CAACK,aAAL,CAAmBC,kBAASQ,aAA5B;AADH,UAVF;AAAA,SAAwCL,QAAQ,CAACE,EAAjD,CADD;AADH,MAFF;AAAA,IADF;AAuBD;;AAEDb,2BAA2B,CAACiB,SAA5B,GAAwC;AACtChB,EAAAA,SAAS,EAAEiB,mBAAUC,OAAV,CAAkBD,mBAAUE,KAAV,CAAgB;AAC3CL,IAAAA,cAAc,EAAEG,mBAAUG,MAAV,CAAiBC,UADU;AAE3CT,IAAAA,EAAE,EAAEK,mBAAUG,MAAV,CAAiBC,UAFsB;AAG3CR,IAAAA,YAAY,EAAEI,mBAAUK,MAAV,CAAiBD;AAHY,GAAhB,CAAlB,EAIPA,UALkC;AAMtCpB,EAAAA,IAAI,EAAEsB,gBAAUF;AANsB,CAAxC;;eASe,sBAAWtB,2BAAX,C","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport messages from '../messages';\nimport { useModel } from '../../../../generic/model-store';\n\nfunction DroppableAssignmentFootnote({ footnotes, intl }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n  const {\n    gradesFeatureIsFullyLocked,\n  } = useModel('progress', courseId);\n  return (\n    <>\n      <span id=\"grade-summary-footnote-label\" className=\"sr-only\">{intl.formatMessage(messages.footnotesTitle)}</span>\n      <ul className=\"list-unstyled mt-2\">\n        {footnotes.map((footnote, index) => (\n          <li id={`${footnote.id}-footnote`} key={footnote.id} className=\"x-small mt-1\">\n            <sup>{index + 1}</sup>\n            <FormattedMessage\n              id=\"progress.footnotes.droppableAssignments\"\n              defaultMessage=\"The lowest {numDroppable, plural, one{# {assignmentType} score is} other{# {assignmentType} scores are}} dropped.\"\n              values={{\n                numDroppable: footnote.numDroppable,\n                assignmentType: footnote.assignmentType,\n              }}\n            />\n            <a className=\"sr-only\" href={`#${footnote.id}-ref`} tabIndex={gradesFeatureIsFullyLocked ? '-1' : '0'}>\n              {intl.formatMessage(messages.backToContent)}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nDroppableAssignmentFootnote.propTypes = {\n  footnotes: PropTypes.arrayOf(PropTypes.shape({\n    assignmentType: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    numDroppable: PropTypes.number.isRequired,\n  })).isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(DroppableAssignmentFootnote);\n"],"file":"DroppableAssignmentFootnote.js"}