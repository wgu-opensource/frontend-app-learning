{"version":3,"sources":["../../../../../src/course-home/progress-tab/grades/grade-summary/GradeSummaryHeader.jsx"],"names":["GradeSummaryHeader","intl","allOfSomeAssignmentTypeIsLocked","courseId","state","courseHome","gradesFeatureIsFullyLocked","showTooltip","setShowTooltip","formatMessage","messages","gradeSummary","gradeSummaryTooltipBody","gradeSummaryTooltipAlt","InfoOutline","Icon","height","width","Blocked","gradeSummaryLimitedAccessExplanation","propTypes","intlShape","isRequired","PropTypes","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAGA;;AAEA;;AACA;;;;;;;;;;AAEA,SAASA,kBAAT,OAAuE;AAAA,MAA3C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA2C;AACrE,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAGA,QAAM;AACJC,IAAAA;AADI,MAEF,0BAAS,UAAT,EAAqBH,QAArB,CAFJ;AAGA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgC,qBAAS,KAAT,CAAtC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBAA8BP,IAAI,CAACQ,aAAL,CAAmBC,kBAASC,YAA5B;AAA9B,MADF,eAEE,qBAAC,uBAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,MAAA,IAAI,EAAEJ,WAHR;AAIE,MAAA,OAAO,eACL,qBAAC,gBAAD;AAAA,+BACE,qBAAC,gBAAD,CAAS,OAAT;AAAiB,UAAA,SAAS,EAAC,qBAA3B;AAAA,oBACGN,IAAI,CAACQ,aAAL,CAAmBC,kBAASE,uBAA5B;AADH;AADF,QALJ;AAAA,6BAYE,qBAAC,mBAAD;AACE,QAAA,OAAO,EAAE,MAAM;AAAEJ,UAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AAA+B,SADlD;AAEE,QAAA,MAAM,EAAE,MAAM;AAAEC,UAAAA,cAAc,CAAC,KAAD,CAAd;AAAwB,SAF1C;AAGE,QAAA,GAAG,EAAEP,IAAI,CAACQ,aAAL,CAAmBC,kBAASG,sBAA5B,CAHP;AAIE,QAAA,GAAG,EAAEC,kBAJP;AAKE,QAAA,MAAM,EAAEC,aALV;AAME,QAAA,SAAS,EAAC,MANZ;AAOE,QAAA,IAAI,EAAC,IAPP;AAQE,QAAA,QAAQ,EAAET;AARZ;AAZF,MAFF,EAyBG,CAACA,0BAAD,IAA+BJ,+BAA/B,iBACC;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,8BACE,qBAAC,aAAD;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAA0C,QAAA,KAAK,EAAE;AAAEc,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAAjD;AAAoF,QAAA,GAAG,EAAEC,cAAzF;AAAkG,uBAAY;AAA9G,QADF,EAEGjB,IAAI,CAACQ,aAAL,CAAmBC,kBAASS,oCAA5B,CAFH;AAAA,MA1BJ;AAAA,IADF;AAkCD;;AAEDnB,kBAAkB,CAACoB,SAAnB,GAA+B;AAC7BnB,EAAAA,IAAI,EAAEoB,gBAAUC,UADa;AAE7BpB,EAAAA,+BAA+B,EAAEqB,mBAAUC,IAAV,CAAeF;AAFnB,CAA/B;;eAKe,sBAAWtB,kBAAX,C","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport {\n  Icon, IconButton, OverlayTrigger, Popover,\n} from '@edx/paragon';\nimport { Blocked, InfoOutline } from '@edx/paragon/icons';\n\nimport messages from '../messages';\nimport { useModel } from '../../../../generic/model-store';\n\nfunction GradeSummaryHeader({ intl, allOfSomeAssignmentTypeIsLocked }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n  const {\n    gradesFeatureIsFullyLocked,\n  } = useModel('progress', courseId);\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  return (\n    <div className=\"row w-100 m-0 align-items-center\">\n      <h3 className=\"h4 mb-3 mr-1\">{intl.formatMessage(messages.gradeSummary)}</h3>\n      <OverlayTrigger\n        trigger=\"click\"\n        placement=\"top\"\n        show={showTooltip}\n        overlay={(\n          <Popover>\n            <Popover.Content className=\"small text-dark-700\">\n              {intl.formatMessage(messages.gradeSummaryTooltipBody)}\n            </Popover.Content>\n          </Popover>\n        )}\n      >\n        <IconButton\n          onClick={() => { setShowTooltip(!showTooltip); }}\n          onBlur={() => { setShowTooltip(false); }}\n          alt={intl.formatMessage(messages.gradeSummaryTooltipAlt)}\n          src={InfoOutline}\n          iconAs={Icon}\n          className=\"mb-3\"\n          size=\"sm\"\n          disabled={gradesFeatureIsFullyLocked}\n        />\n      </OverlayTrigger>\n      {!gradesFeatureIsFullyLocked && allOfSomeAssignmentTypeIsLocked && (\n        <div className=\"mb-3 small ml-0 d-inline\">\n          <Icon className=\"mr-1 mt-1 d-inline-flex\" style={{ height: '1rem', width: '1rem' }} src={Blocked} data-testid=\"blocked-icon\" />\n          {intl.formatMessage(messages.gradeSummaryLimitedAccessExplanation)}\n        </div>\n      )}\n    </div>\n  );\n}\n\nGradeSummaryHeader.propTypes = {\n  intl: intlShape.isRequired,\n  allOfSomeAssignmentTypeIsLocked: PropTypes.bool.isRequired,\n};\n\nexport default injectIntl(GradeSummaryHeader);\n"],"file":"GradeSummaryHeader.js"}