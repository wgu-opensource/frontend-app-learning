{"version":3,"sources":["../../../../../src/course-home/progress-tab/grades/grade-summary/GradeSummaryTableFooter.jsx"],"names":["GradeSummaryTableFooter","intl","courseId","state","courseHome","courseGrade","isPassing","percent","bgColor","totalGrade","toFixed","isLocaleRtl","formatMessage","messages","weightedGradeSummary","propTypes","intlShape","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAGA;;AACA;;AAEA;;;;;;AAEA,SAASA,uBAAT,OAA2C;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACzC,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAIA,QAAM;AACJC,IAAAA,WAAW,EAAE;AACXC,MAAAA,SADW;AAEXC,MAAAA;AAFW;AADT,MAKF,0BAAS,UAAT,EAAqBL,QAArB,CALJ;AAOA,QAAMM,OAAO,GAAGF,SAAS,GAAG,gBAAH,GAAsB,gBAA/C;AACA,QAAMG,UAAU,GAAG,CAACF,OAAO,GAAG,GAAX,EAAgBG,OAAhB,CAAwB,CAAxB,CAAnB;AAEA,QAAMC,WAAW,GAAG,iBAAM,sBAAN,CAApB;AAEA,sBACE,qBAAC,kBAAD,CAAW,WAAX;AAAuB,IAAA,SAAS,EAAG,6BAA4BH,OAAQ,EAAvE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,wBAAR;AAAiC,QAAA,SAAS,EAAC,iBAA3C;AAAA,kBAA8DP,IAAI,CAACW,aAAL,CAAmBC,kBAASC,oBAA5B;AAA9D,QADF,eAEE;AAAK,uBAAY,sCAAjB;AAAwD,2BAAgB,wBAAxE;AAAiG,QAAA,SAAS,EAAC,6CAA3G;AAAA,mBAA0JL,UAA1J,EAAsKE,WAAW,IAAI,QAArL;AAAA,QAFF;AAAA;AADF,IADF;AAQD;;AAEDX,uBAAuB,CAACe,SAAxB,GAAoC;AAClCd,EAAAA,IAAI,EAAEe,gBAAUC;AADkB,CAApC;;eAIe,sBAAWjB,uBAAX,C","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {\n  getLocale, injectIntl, intlShape, isRtl,\n} from '@edx/frontend-platform/i18n';\nimport { DataTable } from '@edx/paragon';\nimport { useModel } from '../../../../generic/model-store';\n\nimport messages from '../messages';\n\nfunction GradeSummaryTableFooter({ intl }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    courseGrade: {\n      isPassing,\n      percent,\n    },\n  } = useModel('progress', courseId);\n\n  const bgColor = isPassing ? 'bg-success-100' : 'bg-warning-100';\n  const totalGrade = (percent * 100).toFixed(0);\n\n  const isLocaleRtl = isRtl(getLocale());\n\n  return (\n    <DataTable.TableFooter className={`border-top border-primary ${bgColor}`}>\n      <div className=\"row w-100 m-0\">\n        <div id=\"weighted-grade-summary\" className=\"col-8 p-0 small\">{intl.formatMessage(messages.weightedGradeSummary)}</div>\n        <div data-testid=\"gradeSummaryFooterTotalWeightedGrade\" aria-labelledby=\"weighted-grade-summary\" className=\"col-4 p-0 text-right font-weight-bold small\">{totalGrade}{isLocaleRtl && '\\u200f'}%</div>\n      </div>\n    </DataTable.TableFooter>\n  );\n}\n\nGradeSummaryTableFooter.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(GradeSummaryTableFooter);\n"],"file":"GradeSummaryTableFooter.js"}