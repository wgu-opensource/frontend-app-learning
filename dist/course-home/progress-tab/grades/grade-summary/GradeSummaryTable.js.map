{"version":3,"sources":["../../../../../src/course-home/progress-tab/grades/grade-summary/GradeSummaryTable.jsx"],"names":["GradeSummaryTable","intl","setAllOfSomeAssignmentTypeIsLocked","courseId","state","courseHome","gradingPolicy","assignmentPolicies","gradesFeatureIsFullyLocked","sectionScores","footnotes","getFootnoteId","assignment","footnoteId","shortLabel","type","replace","hasNoAccessToAssignmentsOfType","assignmentType","subsectionAssignmentsOfType","map","chapter","subsections","filter","subsection","hasGradedAssignment","numPointsPossible","numPointsEarned","flat","length","noAccessToAssignmentsOfType","some","learnerHasAccess","gradeSummaryData","footnoteMarker","numDroppable","push","id","locked","isLocaleRtl","weight","toFixed","grade","averageGrade","weightedGrade","Header","formatMessage","messages","accessor","Cell","value","headerClassName","cellClassName","propTypes","intlShape","isRequired","PropTypes","func"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAGA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;;;;;AAEA,SAASA,iBAAT,OAAyE;AAAA,MAA9C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA8C;AACvE,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAIA,QAAM;AACJC,IAAAA,aAAa,EAAE;AACbC,MAAAA;AADa,KADX;AAIJC,IAAAA,0BAJI;AAKJC,IAAAA;AALI,MAMF,0BAAS,UAAT,EAAqBN,QAArB,CANJ;AAQA,QAAMO,SAAS,GAAG,EAAlB;;AAEA,QAAMC,aAAa,GAAIC,UAAD,IAAgB;AACpC,UAAMC,UAAU,GAAGD,UAAU,CAACE,UAAX,GAAwBF,UAAU,CAACE,UAAnC,GAAgDF,UAAU,CAACG,IAA9E;AACA,WAAOF,UAAU,CAACG,OAAX,CAAmB,mBAAnB,EAAwC,GAAxC,CAAP;AACD,GAHD;;AAKA,QAAMC,8BAA8B,GAAIC,cAAD,IAAoB;AACzD,UAAMC,2BAA2B,GAAGV,aAAa,CAACW,GAAd,CAAmBC,OAAD,IAAaA,OAAO,CAACC,WAAR,CAAoBC,MAApB,CAA4BC,UAAD,IAC5FA,UAAU,CAACN,cAAX,KAA8BA,cAA9B,IAAgDM,UAAU,CAACC,mBAA3D,KACID,UAAU,CAACE,iBAAX,GAA+B,CAA/B,IAAoCF,UAAU,CAACG,eAAX,GAA6B,CADrE,CADiE,CAA/B,EAGhCC,IAHgC,EAApC;;AAIA,QAAIT,2BAA2B,CAACU,MAAhC,EAAwC;AACtC,YAAMC,2BAA2B,GAAG,CAACX,2BAA2B,CAACY,IAA5B,CAAkCP,UAAD,IACpEA,UAAU,CAACQ,gBAAX,KAAgC,IADG,CAArC;;AAGA,UAAIF,2BAAJ,EAAiC;AAC/B5B,QAAAA,kCAAkC,CAAC,IAAD,CAAlC;AACA,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD,GAfD;;AAiBA,QAAM+B,gBAAgB,GAAG1B,kBAAkB,CAACa,GAAnB,CAAwBR,UAAD,IAAgB;AAC9D,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIqB,cAAJ;;AAEA,QAAItB,UAAU,CAACuB,YAAX,GAA0B,CAA9B,EAAiC;AAC/BtB,MAAAA,UAAU,GAAGF,aAAa,CAACC,UAAD,CAA1B;AACAF,MAAAA,SAAS,CAAC0B,IAAV,CAAe;AACbC,QAAAA,EAAE,EAAExB,UADS;AAEbsB,QAAAA,YAAY,EAAEvB,UAAU,CAACuB,YAFZ;AAGbjB,QAAAA,cAAc,EAAEN,UAAU,CAACG;AAHd,OAAf;AAMAmB,MAAAA,cAAc,GAAGxB,SAAS,CAACmB,MAA3B;AACD;;AAED,UAAMS,MAAM,GAAG,CAAC9B,0BAAD,IAA+BS,8BAA8B,CAACL,UAAU,CAACG,IAAZ,CAA5E;AAEA,UAAMwB,WAAW,GAAG,iBAAM,sBAAN,CAApB;AAEA,WAAO;AACLxB,MAAAA,IAAI,EAAE;AACJF,QAAAA,UADI;AACQqB,QAAAA,cADR;AACwBnB,QAAAA,IAAI,EAAEH,UAAU,CAACG,IADzC;AAC+CuB,QAAAA;AAD/C,OADD;AAILE,MAAAA,MAAM,EAAE;AAAEA,QAAAA,MAAM,EAAG,GAAE,CAAC5B,UAAU,CAAC4B,MAAX,GAAoB,GAArB,EAA0BC,OAA1B,CAAkC,CAAlC,CAAqC,GAAEF,WAAW,GAAG,QAAH,GAAc,EAAG,GAAhF;AAAoFD,QAAAA;AAApF,OAJH;AAKLI,MAAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAG,GAAE,CAAC9B,UAAU,CAAC+B,YAAX,GAA0B,GAA3B,EAAgCF,OAAhC,CAAwC,CAAxC,CAA2C,GAAEF,WAAW,GAAG,QAAH,GAAc,EAAG,GAArF;AAAyFD,QAAAA;AAAzF,OALF;AAMLM,MAAAA,aAAa,EAAE;AAAEA,QAAAA,aAAa,EAAG,GAAE,CAAChC,UAAU,CAACgC,aAAX,GAA2B,GAA5B,EAAiCH,OAAjC,CAAyC,CAAzC,CAA4C,GAAEF,WAAW,GAAG,QAAH,GAAc,EAAG,GAA9F;AAAkGD,QAAAA;AAAlG;AANV,KAAP;AAQD,GA3BwB,CAAzB;AA6BA,sBACE;AAAA,4BACE,sBAAC,kBAAD;AACE,MAAA,IAAI,EAAEL,gBADR;AAEE,MAAA,SAAS,EAAEA,gBAAgB,CAACJ,MAF9B;AAGE,MAAA,OAAO,EAAE,CACP;AACEgB,QAAAA,MAAM,EAAG,GAAE5C,IAAI,CAAC6C,aAAL,CAAmBC,kBAAS7B,cAA5B,CAA4C,EADzD;AAEE8B,QAAAA,QAAQ,EAAE,MAFZ;AAGE;AACAC,QAAAA,IAAI,EAAE;AAAA,cAAC;AAAEC,YAAAA;AAAF,WAAD;AAAA,8BACJ,qBAAC,2BAAD;AACE,YAAA,cAAc,EAAEA,KAAK,CAACnC,IADxB,CAC8B;AAD9B;AAEE,YAAA,UAAU,EAAEmC,KAAK,CAACrC,UAFpB,CAEgC;AAFhC;AAGE,YAAA,cAAc,EAAEqC,KAAK,CAAChB,cAHxB,CAGwC;AAHxC;AAIE,YAAA,MAAM,EAAEgB,KAAK,CAACZ,MAJhB,CAIwB;;AAJxB,YADI;AAAA,SAJR;AAYEa,QAAAA,eAAe,EAAE;AAZnB,OADO,EAeP;AACEN,QAAAA,MAAM,EAAG,GAAE5C,IAAI,CAAC6C,aAAL,CAAmBC,kBAASP,MAA5B,CAAoC,EADjD;AAEEQ,QAAAA,QAAQ,EAAE,QAFZ;AAGEG,QAAAA,eAAe,EAAE,6BAHnB;AAIE;AACAF,QAAAA,IAAI,EAAE;AAAA,cAAC;AAAEC,YAAAA;AAAF,WAAD;AAAA,8BACJ;AAAM,YAAA,SAAS,EAAEA,KAAK,CAACZ,MAAN,GAAe,YAAf,GAA8B,EAA/C;AAAA,sBAAoDY,KAAK,CAACV;AAA1D,YADI,CACqE;AADrE;AAAA,SALR;AAQEY,QAAAA,aAAa,EAAE;AARjB,OAfO,EAyBP;AACEP,QAAAA,MAAM,EAAG,GAAE5C,IAAI,CAAC6C,aAAL,CAAmBC,kBAASL,KAA5B,CAAmC,EADhD;AAEEM,QAAAA,QAAQ,EAAE,OAFZ;AAGEG,QAAAA,eAAe,EAAE,6BAHnB;AAIE;AACAF,QAAAA,IAAI,EAAE;AAAA,cAAC;AAAEC,YAAAA;AAAF,WAAD;AAAA,8BACJ;AAAM,YAAA,SAAS,EAAEA,KAAK,CAACZ,MAAN,GAAe,YAAf,GAA8B,EAA/C;AAAA,sBAAoDY,KAAK,CAACR;AAA1D,YADI,CACoE;AADpE;AAAA,SALR;AAQEU,QAAAA,aAAa,EAAE;AARjB,OAzBO,EAmCP;AACEP,QAAAA,MAAM,EAAG,GAAE5C,IAAI,CAAC6C,aAAL,CAAmBC,kBAASH,aAA5B,CAA2C,EADxD;AAEEI,QAAAA,QAAQ,EAAE,eAFZ;AAGEG,QAAAA,eAAe,EAAE,wCAHnB;AAIE;AACAF,QAAAA,IAAI,EAAE;AAAA,cAAC;AAAEC,YAAAA;AAAF,WAAD;AAAA,8BACJ;AAAM,YAAA,SAAS,EAAEA,KAAK,CAACZ,MAAN,GAAe,YAAf,GAA8B,EAA/C;AAAA,sBAAoDY,KAAK,CAACN;AAA1D,YADI,CAC4E;AAD5E;AAAA,SALR;AAQEQ,QAAAA,aAAa,EAAE;AARjB,OAnCO,CAHX;AAAA,8BAkDE,qBAAC,kBAAD,CAAW,KAAX,KAlDF,eAmDE,qBAAC,gCAAD,KAnDF;AAAA,MADF,EAuDG1C,SAAS,iBACR,qBAAC,oCAAD;AAA6B,MAAA,SAAS,EAAEA;AAAxC,MAxDJ;AAAA,IADF;AA6DD;;AAEDV,iBAAiB,CAACqD,SAAlB,GAA8B;AAC5BpD,EAAAA,IAAI,EAAEqD,gBAAUC,UADY;AAE5BrD,EAAAA,kCAAkC,EAAEsD,mBAAUC,IAAV,CAAeF;AAFvB,CAA9B;;eAKe,sBAAWvD,iBAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport {\n  getLocale, injectIntl, intlShape, isRtl,\n} from '@edx/frontend-platform/i18n';\nimport { DataTable } from '@edx/paragon';\nimport { useModel } from '../../../../generic/model-store';\n\nimport AssignmentTypeCell from './AssignmentTypeCell';\nimport DroppableAssignmentFootnote from './DroppableAssignmentFootnote';\nimport GradeSummaryTableFooter from './GradeSummaryTableFooter';\n\nimport messages from '../messages';\n\nfunction GradeSummaryTable({ intl, setAllOfSomeAssignmentTypeIsLocked }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    gradingPolicy: {\n      assignmentPolicies,\n    },\n    gradesFeatureIsFullyLocked,\n    sectionScores,\n  } = useModel('progress', courseId);\n\n  const footnotes = [];\n\n  const getFootnoteId = (assignment) => {\n    const footnoteId = assignment.shortLabel ? assignment.shortLabel : assignment.type;\n    return footnoteId.replace(/[^A-Za-z0-9.-_]+/g, '-');\n  };\n\n  const hasNoAccessToAssignmentsOfType = (assignmentType) => {\n    const subsectionAssignmentsOfType = sectionScores.map((chapter) => chapter.subsections.filter((subsection) => (\n      subsection.assignmentType === assignmentType && subsection.hasGradedAssignment\n      && (subsection.numPointsPossible > 0 || subsection.numPointsEarned > 0)\n    ))).flat();\n    if (subsectionAssignmentsOfType.length) {\n      const noAccessToAssignmentsOfType = !subsectionAssignmentsOfType.some((subsection) => (\n        subsection.learnerHasAccess === true\n      ));\n      if (noAccessToAssignmentsOfType) {\n        setAllOfSomeAssignmentTypeIsLocked(true);\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const gradeSummaryData = assignmentPolicies.map((assignment) => {\n    let footnoteId = '';\n    let footnoteMarker;\n\n    if (assignment.numDroppable > 0) {\n      footnoteId = getFootnoteId(assignment);\n      footnotes.push({\n        id: footnoteId,\n        numDroppable: assignment.numDroppable,\n        assignmentType: assignment.type,\n      });\n\n      footnoteMarker = footnotes.length;\n    }\n\n    const locked = !gradesFeatureIsFullyLocked && hasNoAccessToAssignmentsOfType(assignment.type);\n\n    const isLocaleRtl = isRtl(getLocale());\n\n    return {\n      type: {\n        footnoteId, footnoteMarker, type: assignment.type, locked,\n      },\n      weight: { weight: `${(assignment.weight * 100).toFixed(0)}${isLocaleRtl ? '\\u200f' : ''}%`, locked },\n      grade: { grade: `${(assignment.averageGrade * 100).toFixed(0)}${isLocaleRtl ? '\\u200f' : ''}%`, locked },\n      weightedGrade: { weightedGrade: `${(assignment.weightedGrade * 100).toFixed(0)}${isLocaleRtl ? '\\u200f' : ''}%`, locked },\n    };\n  });\n\n  return (\n    <>\n      <DataTable\n        data={gradeSummaryData}\n        itemCount={gradeSummaryData.length}\n        columns={[\n          {\n            Header: `${intl.formatMessage(messages.assignmentType)}`,\n            accessor: 'type',\n            // eslint-disable-next-line react/prop-types\n            Cell: ({ value }) => (\n              <AssignmentTypeCell\n                assignmentType={value.type} // eslint-disable-line react/prop-types\n                footnoteId={value.footnoteId} // eslint-disable-line react/prop-types\n                footnoteMarker={value.footnoteMarker} // eslint-disable-line react/prop-types\n                locked={value.locked} // eslint-disable-line react/prop-types\n              />\n            ),\n            headerClassName: 'h5 mb-0',\n          },\n          {\n            Header: `${intl.formatMessage(messages.weight)}`,\n            accessor: 'weight',\n            headerClassName: 'justify-content-end h5 mb-0',\n            // eslint-disable-next-line react/prop-types\n            Cell: ({ value }) => (\n              <span className={value.locked ? 'greyed-out' : ''}>{value.weight}</span> // eslint-disable-line react/prop-types\n            ),\n            cellClassName: 'text-right small',\n          },\n          {\n            Header: `${intl.formatMessage(messages.grade)}`,\n            accessor: 'grade',\n            headerClassName: 'justify-content-end h5 mb-0',\n            // eslint-disable-next-line react/prop-types\n            Cell: ({ value }) => (\n              <span className={value.locked ? 'greyed-out' : ''}>{value.grade}</span> // eslint-disable-line react/prop-types\n            ),\n            cellClassName: 'text-right small',\n          },\n          {\n            Header: `${intl.formatMessage(messages.weightedGrade)}`,\n            accessor: 'weightedGrade',\n            headerClassName: 'justify-content-end h5 mb-0 text-right',\n            // eslint-disable-next-line react/prop-types\n            Cell: ({ value }) => (\n              <span className={value.locked ? 'greyed-out' : ''}>{value.weightedGrade}</span> // eslint-disable-line react/prop-types\n            ),\n            cellClassName: 'text-right font-weight-bold small',\n          },\n        ]}\n      >\n        <DataTable.Table />\n        <GradeSummaryTableFooter />\n      </DataTable>\n\n      {footnotes && (\n        <DroppableAssignmentFootnote footnotes={footnotes} />\n      )}\n    </>\n  );\n}\n\nGradeSummaryTable.propTypes = {\n  intl: intlShape.isRequired,\n  setAllOfSomeAssignmentTypeIsLocked: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(GradeSummaryTable);\n"],"file":"GradeSummaryTable.js"}