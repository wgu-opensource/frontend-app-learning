{"version":3,"sources":["../../../../../src/course-home/progress-tab/grades/detailed-grades/SubsectionTitleCell.jsx"],"names":["SubsectionTitleCell","intl","subsection","courseId","state","courseHome","org","gradesFeatureIsFullyLocked","blockKey","displayName","problemScores","url","administrator","logSubsectionClicked","org_key","courserun_key","is_staff","assignment_block_key","formatMessage","messages","problemScoreToggleAltText","subsectionTitle","ArrowDropDown","ArrowDropUp","learnerHasAccess","noAccessToSubsection","height","width","Blocked","override","Info","sectionGradeOverridden","propTypes","intlShape","isRequired","PropTypes","shape","string","bool","system","reason","arrayOf","earned","number","possible"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Collapsible, Icon, Row } from '@edx/paragon';\nimport {\n  ArrowDropDown, ArrowDropUp, Blocked, Info,\n} from '@edx/paragon/icons';\n\nimport messages from '../messages';\nimport { useModel } from '../../../../generic/model-store';\nimport ProblemScoreDrawer from './ProblemScoreDrawer';\n\nfunction SubsectionTitleCell({ intl, subsection }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n  const {\n    org,\n  } = useModel('courseHomeMeta', courseId);\n  const {\n    gradesFeatureIsFullyLocked,\n  } = useModel('progress', courseId);\n\n  const {\n    blockKey,\n    displayName,\n    problemScores,\n    url,\n  } = subsection;\n\n  const { administrator } = getAuthenticatedUser();\n  const logSubsectionClicked = () => {\n    sendTrackEvent('edx.ui.lms.course_progress.detailed_grades_assignment.clicked', {\n      org_key: org,\n      courserun_key: courseId,\n      is_staff: administrator,\n      assignment_block_key: blockKey,\n    });\n  };\n\n  return (\n    <Collapsible.Advanced>\n      <Row className=\"w-100 m-0\">\n        <Collapsible.Trigger\n          className=\"mr-1 position-absolute\"\n          aria-label={intl.formatMessage(messages.problemScoreToggleAltText, { subsectionTitle: displayName })}\n          tabIndex={gradesFeatureIsFullyLocked ? '-1' : '0'}\n        >\n          <Collapsible.Visible whenClosed><Icon src={ArrowDropDown} /></Collapsible.Visible>\n          <Collapsible.Visible whenOpen><Icon src={ArrowDropUp} /></Collapsible.Visible>\n        </Collapsible.Trigger>\n        <span className=\"small d-inline ml-4 pl-1\">\n          {gradesFeatureIsFullyLocked || subsection.learnerHasAccess ? ''\n            : (\n              <Icon\n                id={`detailedGradesBlockedIcon${subsection.blockKey}`}\n                aria-label={intl.formatMessage(messages.noAccessToSubsection, { displayName })}\n                className=\"mr-1 mt-1 d-inline-flex\"\n                style={{ height: '1rem', width: '1rem' }}\n                src={Blocked}\n                data-testid=\"blocked-icon\"\n              />\n            )}\n          {url ? (\n            <a\n              href={url}\n              className=\"muted-link small\"\n              onClick={logSubsectionClicked}\n              tabIndex={gradesFeatureIsFullyLocked ? '-1' : '0'}\n              aria-labelledby={`detailedGradesBlockedIcon${subsection.blockKey}`}\n            >\n              {displayName}\n            </a>\n          ) : (\n            <span className=\"greyed-out small\">{displayName}</span>\n          )}\n        </span>\n      </Row>\n      <Collapsible.Body className=\"d-flex w-100\">\n        <div className=\"col\">\n          { subsection.override && (\n            <div className=\"row w-100 m-0 x-small ml-4 pt-2 pl-1 text-gray-700 flex-nowrap\">\n              <div>\n                <Icon\n                  src={Info}\n                  className=\"x-small mr-1 text-primary-500\"\n                  style={{ height: '1.3em', width: '1.3em' }}\n                />\n              </div>\n              <div>{intl.formatMessage(messages.sectionGradeOverridden)}</div>\n            </div>\n          )}\n          <ProblemScoreDrawer problemScores={problemScores} subsection={subsection} />\n        </div>\n      </Collapsible.Body>\n    </Collapsible.Advanced>\n  );\n}\n\nSubsectionTitleCell.propTypes = {\n  intl: intlShape.isRequired,\n  subsection: PropTypes.shape({\n    blockKey: PropTypes.string.isRequired,\n    displayName: PropTypes.string.isRequired,\n    learnerHasAccess: PropTypes.bool.isRequired,\n    override: PropTypes.shape({\n      system: PropTypes.string,\n      reason: PropTypes.string,\n    }),\n    problemScores: PropTypes.arrayOf(PropTypes.shape({\n      earned: PropTypes.number.isRequired,\n      possible: PropTypes.number.isRequired,\n    })).isRequired,\n    url: PropTypes.string,\n  }).isRequired,\n};\n\nexport default injectIntl(SubsectionTitleCell);\n"],"file":"SubsectionTitleCell.js"}