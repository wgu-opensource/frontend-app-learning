{"version":3,"sources":["../../../../../src/course-home/progress-tab/grades/detailed-grades/ProblemScoreDrawer.jsx"],"names":["ProblemScoreDrawer","intl","problemScores","subsection","isLocaleRtl","formatMessage","messages","problemScoreLabel","learnerHasAccess","map","problemScore","earned","possible","propTypes","intlShape","isRequired","PropTypes","arrayOf","shape","number","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAIA;;;;;;AAEA,SAASA,kBAAT,OAAiE;AAAA,MAArC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,aAAR;AAAuBC,IAAAA;AAAvB,GAAqC;AAC/D,QAAMC,WAAW,GAAG,iBAAM,sBAAN,CAApB;AACA,sBACE;AAAM,IAAA,SAAS,EAAC,gEAAhB;AAAA,4BACE;AAAM,MAAA,EAAE,EAAC,qBAAT;AAA+B,MAAA,SAAS,EAAC,cAAzC;AAAA,gBAAyDH,IAAI,CAACI,aAAL,CAAmBC,kBAASC,iBAA5B;AAAzD,MADF,eAEE;AAAK,MAAA,SAAS,EAAE,yBAAW,KAAX,EAAkB,KAAlB,EAAyB;AAAE,sBAAc,CAACJ,UAAU,CAACK;AAA5B,OAAzB,CAAhB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,6BAAd;AAA4C,2BAAgB,qBAA5D;AAAA,kBACGN,aAAa,CAACO,GAAd,CAAkBC,YAAY,iBAC7B;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,qBAAsBA,YAAY,CAACC,MAAnC,EAA2CP,WAAW,GAAG,IAAH,GAAU,GAAhE,EAAqEM,YAAY,CAACE,QAAlF;AAAA,UADD;AADH;AADF,MAFF;AAAA,IADF;AAYD;;AAEDZ,kBAAkB,CAACa,SAAnB,GAA+B;AAC7BZ,EAAAA,IAAI,EAAEa,gBAAUC,UADa;AAE7Bb,EAAAA,aAAa,EAAEc,mBAAUC,OAAV,CAAkBD,mBAAUE,KAAV,CAAgB;AAC/CP,IAAAA,MAAM,EAAEK,mBAAUG,MAAV,CAAiBJ,UADsB;AAE/CH,IAAAA,QAAQ,EAAEI,mBAAUG,MAAV,CAAiBJ;AAFoB,GAAhB,CAAlB,EAGXA,UALyB;AAM7BZ,EAAAA,UAAU,EAAEa,mBAAUE,KAAV,CAAgB;AAAEV,IAAAA,gBAAgB,EAAEQ,mBAAUI;AAA9B,GAAhB,EAAsDL;AANrC,CAA/B;;eASe,sBAAWf,kBAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport {\n  getLocale, injectIntl, intlShape, isRtl,\n} from '@edx/frontend-platform/i18n';\n\nimport messages from '../messages';\n\nfunction ProblemScoreDrawer({ intl, problemScores, subsection }) {\n  const isLocaleRtl = isRtl(getLocale());\n  return (\n    <span className=\"row w-100 m-0 x-small ml-4 pt-2 pl-1 text-gray-700 flex-nowrap\">\n      <span id=\"problem-score-label\" className=\"col-auto p-0\">{intl.formatMessage(messages.problemScoreLabel)}</span>\n      <div className={classNames('col', 'p-0', { 'greyed-out': !subsection.learnerHasAccess })}>\n        <ul className=\"list-unstyled row w-100 m-0\" aria-labelledby=\"problem-score-label\">\n          {problemScores.map(problemScore => (\n            <li className=\"ml-3\">{problemScore.earned}{isLocaleRtl ? '\\\\' : '/'}{problemScore.possible}</li>\n          ))}\n        </ul>\n      </div>\n    </span>\n  );\n}\n\nProblemScoreDrawer.propTypes = {\n  intl: intlShape.isRequired,\n  problemScores: PropTypes.arrayOf(PropTypes.shape({\n    earned: PropTypes.number.isRequired,\n    possible: PropTypes.number.isRequired,\n  })).isRequired,\n  subsection: PropTypes.shape({ learnerHasAccess: PropTypes.bool }).isRequired,\n};\n\nexport default injectIntl(ProblemScoreDrawer);\n"],"file":"ProblemScoreDrawer.js"}