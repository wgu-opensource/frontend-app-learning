{"version":3,"file":"CourseGradeFooter.js","names":["_react","_interopRequireDefault","require","_reactRedux","_propTypes","_i18n","_icons","_paragon","_modelStore","_GradeRangeTooltip","_messages","_jsxRuntime","obj","__esModule","default","CourseGradeFooter","_ref","intl","passingGrade","courseId","useSelector","state","courseHome","courseGrade","isPassing","letterGrade","gradingPolicy","gradeRange","useModel","wideScreen","useWindowSize","width","breakpoints","medium","minWidth","hasLetterGrades","Object","keys","length","footerText","formatMessage","messages","courseGradeFooterNonPassing","minGradeRangeCutoff","possibleMaxGradeRangeValues","values","filter","grade","maxGradeRangeCutoff","Math","min","courseGradeFooterPassingWithGrade","minGrade","toFixed","maxGrade","courseGradeFooterGenericPassing","icon","jsx","Icon","src","CheckCircle","className","WarningFilled","jsxs","children","style","whiteSpace","iconButtonClassName","propTypes","intlShape","isRequired","PropTypes","number","_default","injectIntl","exports"],"sources":["../../../../../src/course-home/progress-tab/grades/course-grade/CourseGradeFooter.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { CheckCircle, WarningFilled } from '@edx/paragon/icons';\nimport { breakpoints, Icon, useWindowSize } from '@edx/paragon';\nimport { useModel } from '../../../../generic/model-store';\n\nimport GradeRangeTooltip from './GradeRangeTooltip';\nimport messages from '../messages';\n\nconst CourseGradeFooter = ({ intl, passingGrade }) => {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    courseGrade: {\n      isPassing,\n      letterGrade,\n    },\n    gradingPolicy: {\n      gradeRange,\n    },\n  } = useModel('progress', courseId);\n\n  const wideScreen = useWindowSize().width >= breakpoints.medium.minWidth;\n\n  const hasLetterGrades = Object.keys(gradeRange).length > 1; // A pass/fail course will only have one key\n  let footerText = intl.formatMessage(messages.courseGradeFooterNonPassing, { passingGrade });\n\n  if (isPassing) {\n    if (hasLetterGrades) {\n      const minGradeRangeCutoff = gradeRange[letterGrade] * 100;\n      const possibleMaxGradeRangeValues = [...Object.values(gradeRange).filter(\n        (grade) => (grade * 100 > minGradeRangeCutoff),\n      )];\n      const maxGradeRangeCutoff = possibleMaxGradeRangeValues.length ? Math.min(...possibleMaxGradeRangeValues) * 100\n        : 100;\n\n      footerText = intl.formatMessage(messages.courseGradeFooterPassingWithGrade, {\n        letterGrade,\n        minGrade: minGradeRangeCutoff.toFixed(0),\n        maxGrade: maxGradeRangeCutoff.toFixed(0),\n      });\n    } else {\n      footerText = intl.formatMessage(messages.courseGradeFooterGenericPassing);\n    }\n  }\n\n  const icon = isPassing ? <Icon src={CheckCircle} className=\"text-success-300 d-inline-flex align-bottom\" />\n    : <Icon src={WarningFilled} className=\"d-inline-flex align-bottom\" />;\n\n  return (\n    <div className={`row w-100 m-0 px-4 py-3 py-md-4 rounded-bottom ${isPassing ? 'bg-success-100' : 'bg-warning-100'}`}>\n      <div className=\"col-auto p-0\">\n        {icon}\n      </div>\n      <div className=\"col-11 pl-2 px-0\">\n        {!wideScreen && (\n          <span className=\"h5 align-bottom\">\n            {footerText}\n            {hasLetterGrades && (\n              <span style={{ whiteSpace: 'nowrap' }}>\n                &nbsp;\n                <GradeRangeTooltip iconButtonClassName=\"h4\" passingGrade={passingGrade} />\n              </span>\n            )}\n          </span>\n        )}\n        {wideScreen && (\n          <span className=\"h4 m-0 align-bottom\">\n            {footerText}\n            {hasLetterGrades && (\n              <span style={{ whiteSpace: 'nowrap' }}>\n                &nbsp;\n                <GradeRangeTooltip iconButtonClassName=\"h3\" passingGrade={passingGrade} />\n              </span>\n            )}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCourseGradeFooter.propTypes = {\n  intl: intlShape.isRequired,\n  passingGrade: PropTypes.number.isRequired,\n};\n\nexport default injectIntl(CourseGradeFooter);\n"],"mappings":"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"}