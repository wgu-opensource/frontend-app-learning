{"version":3,"sources":["../../../../../src/course-home/progress-tab/grades/course-grade/CurrentGradeTooltip.jsx"],"names":["CurrentGradeTooltip","intl","tooltipClassName","courseId","state","courseHome","courseGrade","isPassing","percent","currentGrade","Number","toFixed","currentGradeDirection","isLocaleRtl","Math","min","transform","formatMessage","messages","currentGradeLabel","defaultProps","propTypes","intlShape","isRequired","PropTypes","string"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAGA;;AAEA;;AAEA;;;;;;AAEA,SAASA,mBAAT,OAAyD;AAAA,MAA5B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA4B;AACvD,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAIA,QAAM;AACJC,IAAAA,WAAW,EAAE;AACXC,MAAAA,SADW;AAEXC,MAAAA;AAFW;AADT,MAKF,0BAAS,UAAT,EAAqBL,QAArB,CALJ;AAOA,QAAMM,YAAY,GAAGC,MAAM,CAAC,CAACF,OAAO,GAAG,GAAX,EAAgBG,OAAhB,CAAwB,CAAxB,CAAD,CAA3B;AAEA,MAAIC,qBAAqB,GAAGH,YAAY,GAAG,EAAf,GAAoB,EAApB,GAAyB,GAArD;AAEA,QAAMI,WAAW,GAAG,iBAAM,sBAAN,CAApB;;AAEA,MAAIA,WAAJ,EAAiB;AACfD,IAAAA,qBAAqB,GAAGH,YAAY,GAAG,EAAf,GAAoB,GAApB,GAA0B,EAAlD;AACD;;AAED,sBACE;AAAA,4BACE,qBAAC,uBAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,MAAA,OAAO,eACL,qBAAC,gBAAD;AAAS,QAAA,EAAE,EAAG,GAAEF,SAAS,GAAG,SAAH,GAAe,aAAc,gBAAtD;AAAuE,uBAAY,MAAnF;AAA0F,QAAA,SAAS,EAAEL,gBAArG;AAAA,+BACE,sBAAC,gBAAD,CAAS,OAAT;AAAiB,yBAAY,4BAA7B;AAA0D,UAAA,SAAS,EAAEK,SAAS,GAAG,YAAH,GAAkB,eAAhG;AAAA,qBACGE,YAAY,CAACE,OAAb,CAAqB,CAArB,CADH,EAC4BE,WAAW,GAAG,QAAH,GAAc,EADrD;AAAA;AADF,QAJJ;AAAA,6BAWE;AAAA,gCACE;AAAQ,UAAA,EAAE,EAAG,GAAEC,IAAI,CAACC,GAAL,CAAS,GAAG,CAACF,WAAW,GAAG,MAAMJ,YAAT,GAAwBA,YAApC,EAAkD,GAAlD,CAAZ,CAAoE,GAAnF;AAAuF,UAAA,EAAE,EAAC,KAA1F;AAAgG,UAAA,CAAC,EAAC,KAAlG;AAAwG,UAAA,IAAI,EAAC;AAA7G,UADF,eAEE;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAqC,UAAA,CAAC,EAAG,GAAEK,IAAI,CAACC,GAAL,CAAS,GAAG,CAACF,WAAW,GAAG,MAAMJ,YAAT,GAAwBA,YAApC,EAAkD,GAAlD,CAAZ,CAAoE,GAA/G;AAAmH,UAAA,KAAK,EAAE;AAAEO,YAAAA,SAAS,EAAE;AAAb;AAA1H,UAFF;AAAA;AAXF,MADF,eAiBE;AACE,MAAA,SAAS,EAAC,SADZ;AAEE,MAAA,UAAU,EAAEP,YAAY,GAAG,EAAf,GAAoB,OAApB,GAA8B,KAF5C;AAGE,MAAA,CAAC,EAAG,GAAEK,IAAI,CAACC,GAAL,CAAS,GAAG,CAACF,WAAW,GAAG,MAAMJ,YAAT,GAAwBA,YAApC,EAAkD,GAAlD,CAAZ,CAAoE,GAH5E;AAIE,MAAA,CAAC,EAAC,MAJJ;AAKE,MAAA,KAAK,EAAE;AAAEO,QAAAA,SAAS,EAAG,cAAaJ,qBAAsB;AAAjD,OALT;AAAA,gBAOGX,IAAI,CAACgB,aAAL,CAAmBC,kBAASC,iBAA5B;AAPH,MAjBF;AAAA,IADF;AA6BD;;AAEDnB,mBAAmB,CAACoB,YAApB,GAAmC;AACjClB,EAAAA,gBAAgB,EAAE;AADe,CAAnC;AAIAF,mBAAmB,CAACqB,SAApB,GAAgC;AAC9BpB,EAAAA,IAAI,EAAEqB,gBAAUC,UADc;AAE9BrB,EAAAA,gBAAgB,EAAEsB,mBAAUC;AAFE,CAAhC;;eAKe,sBAAWzB,mBAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport {\n  getLocale, injectIntl, intlShape, isRtl,\n} from '@edx/frontend-platform/i18n';\nimport { OverlayTrigger, Popover } from '@edx/paragon';\n\nimport { useModel } from '../../../../generic/model-store';\n\nimport messages from '../messages';\n\nfunction CurrentGradeTooltip({ intl, tooltipClassName }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    courseGrade: {\n      isPassing,\n      percent,\n    },\n  } = useModel('progress', courseId);\n\n  const currentGrade = Number((percent * 100).toFixed(0));\n\n  let currentGradeDirection = currentGrade < 50 ? '' : '-';\n\n  const isLocaleRtl = isRtl(getLocale());\n\n  if (isLocaleRtl) {\n    currentGradeDirection = currentGrade < 50 ? '-' : '';\n  }\n\n  return (\n    <>\n      <OverlayTrigger\n        show\n        placement=\"top\"\n        overlay={(\n          <Popover id={`${isPassing ? 'passing' : 'non-passing'}-grade-tooltip`} aria-hidden=\"true\" className={tooltipClassName}>\n            <Popover.Content data-testid=\"currentGradeTooltipContent\" className={isPassing ? 'text-white' : 'text-dark-700'}>\n              {currentGrade.toFixed(0)}{isLocaleRtl ? '\\u200f' : ''}%\n            </Popover.Content>\n          </Popover>\n        )}\n      >\n        <g>\n          <circle cx={`${Math.min(...[isLocaleRtl ? 100 - currentGrade : currentGrade, 100])}%`} cy=\"50%\" r=\"8.5\" fill=\"transparent\" />\n          <rect className=\"grade-bar__divider\" x={`${Math.min(...[isLocaleRtl ? 100 - currentGrade : currentGrade, 100])}%`} style={{ transform: 'translateY(2.61em)' }} />\n        </g>\n      </OverlayTrigger>\n      <text\n        className=\"x-small\"\n        textAnchor={currentGrade < 50 ? 'start' : 'end'}\n        x={`${Math.min(...[isLocaleRtl ? 100 - currentGrade : currentGrade, 100])}%`}\n        y=\"20px\"\n        style={{ transform: `translateX(${currentGradeDirection}3.4em)` }}\n      >\n        {intl.formatMessage(messages.currentGradeLabel)}\n      </text>\n    </>\n  );\n}\n\nCurrentGradeTooltip.defaultProps = {\n  tooltipClassName: '',\n};\n\nCurrentGradeTooltip.propTypes = {\n  intl: intlShape.isRequired,\n  tooltipClassName: PropTypes.string,\n};\n\nexport default injectIntl(CurrentGradeTooltip);\n"],"file":"CurrentGradeTooltip.js"}