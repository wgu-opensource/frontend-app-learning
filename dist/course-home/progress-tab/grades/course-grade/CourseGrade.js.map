{"version":3,"sources":["../../../../../src/course-home/progress-tab/grades/course-grade/CourseGrade.jsx"],"names":["CourseGrade","intl","courseId","state","courseHome","creditCourseRequirements","gradesFeatureIsFullyLocked","gradesFeatureIsPartiallyLocked","gradingPolicy","gradeRange","passingGrade","Number","Math","min","Object","values","toFixed","applyLockedOverlay","formatMessage","messages","gradesAndCredit","grades","courseGradeBody","propTypes","intlShape","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAEA,SAASA,WAAT,OAA+B;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC7B,QAAM;AACJC,IAAAA;AADI,MAEF,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAFJ;AAIA,QAAM;AACJC,IAAAA,wBADI;AAEJC,IAAAA,0BAFI;AAGJC,IAAAA,8BAHI;AAIJC,IAAAA,aAAa,EAAE;AACbC,MAAAA;AADa;AAJX,MAOF,0BAAS,UAAT,EAAqBP,QAArB,CAPJ;AASA,QAAMQ,YAAY,GAAGC,MAAM,CAAC,CAACC,IAAI,CAACC,GAAL,CAAS,GAAGC,MAAM,CAACC,MAAP,CAAcN,UAAd,CAAZ,IAAyC,GAA1C,EAA+CO,OAA/C,CAAuD,CAAvD,CAAD,CAA3B;AAEA,QAAMC,kBAAkB,GAAGX,0BAA0B,GAAG,gBAAH,GAAsB,EAA3E;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,wCAAnB;AAAA,eACG,CAACA,0BAA0B,IAAIC,8BAA/B,kBAAkE,qBAAC,0BAAD,KADrE,eAEE;AAAK,MAAA,SAAS,EAAEU,kBAAhB;AAAoC,qBAAaX,0BAAjD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,+BAAf;AAAA,kCACE;AAAA,sBAAKD,wBAAwB,GACzBJ,IAAI,CAACiB,aAAL,CAAmBC,kBAASC,eAA5B,CADyB,GAEzBnB,IAAI,CAACiB,aAAL,CAAmBC,kBAASE,MAA5B;AAFJ,YADF,eAKE;AAAG,YAAA,SAAS,EAAC,OAAb;AAAA,sBACGpB,IAAI,CAACiB,aAAL,CAAmBC,kBAASG,eAA5B;AADH,YALF;AAAA,UADF,eAUE,qBAAC,iBAAD;AAAU,UAAA,YAAY,EAAEZ;AAAxB,UAVF;AAAA,QADF,eAaE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE,qBAAC,0BAAD;AADF,QAbF,eAgBE,qBAAC,0BAAD;AAAmB,QAAA,YAAY,EAAEA;AAAjC,QAhBF;AAAA,MAFF;AAAA,IADF;AAuBD;;AAEDV,WAAW,CAACuB,SAAZ,GAAwB;AACtBtB,EAAAA,IAAI,EAAEuB,gBAAUC;AADM,CAAxB;;eAIe,sBAAWzB,WAAX,C","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport { useModel } from '../../../../generic/model-store';\n\nimport CourseGradeFooter from './CourseGradeFooter';\nimport CourseGradeHeader from './CourseGradeHeader';\nimport GradeBar from './GradeBar';\nimport CreditInformation from '../../credit-information/CreditInformation';\n\nimport messages from '../messages';\n\nfunction CourseGrade({ intl }) {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    creditCourseRequirements,\n    gradesFeatureIsFullyLocked,\n    gradesFeatureIsPartiallyLocked,\n    gradingPolicy: {\n      gradeRange,\n    },\n  } = useModel('progress', courseId);\n\n  const passingGrade = Number((Math.min(...Object.values(gradeRange)) * 100).toFixed(0));\n\n  const applyLockedOverlay = gradesFeatureIsFullyLocked ? 'locked-overlay' : '';\n\n  return (\n    <section className=\"text-dark-700 my-4 rounded raised-card\">\n      {(gradesFeatureIsFullyLocked || gradesFeatureIsPartiallyLocked) && <CourseGradeHeader />}\n      <div className={applyLockedOverlay} aria-hidden={gradesFeatureIsFullyLocked}>\n        <div className=\"row w-100 m-0 p-4\">\n          <div className=\"col-12 col-sm-6 p-0 pr-sm-5.5\">\n            <h2>{creditCourseRequirements\n              ? intl.formatMessage(messages.gradesAndCredit)\n              : intl.formatMessage(messages.grades)}\n            </h2>\n            <p className=\"small\">\n              {intl.formatMessage(messages.courseGradeBody)}\n            </p>\n          </div>\n          <GradeBar passingGrade={passingGrade} />\n        </div>\n        <div className=\"row w-100 m-0 px-4\">\n          <CreditInformation />\n        </div>\n        <CourseGradeFooter passingGrade={passingGrade} />\n      </div>\n    </section>\n  );\n}\n\nCourseGrade.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(CourseGrade);\n"],"file":"CourseGrade.js"}