{"version":3,"file":"CompletionDonutChart.js","names":["_react","_interopRequireDefault","require","_reactRedux","_i18n","_modelStore","_CompleteDonutSegment","_IncompleteDonutSegment","_LockedDonutSegment","_messages","_jsxRuntime","obj","__esModule","default","CompletionDonutChart","_ref","intl","courseId","useSelector","state","courseHome","completionSummary","completeCount","incompleteCount","lockedCount","useModel","numTotalUnits","completePercentage","Number","toFixed","lockedPercentage","incompletePercentage","isLocaleRtl","isRtl","getLocale","jsxs","Fragment","children","role","width","height","viewBox","className","style","maxWidth","jsx","fill","cx","cy","r","x","y","formatMessage","messages","donutLabel","percentComplete","percent","percentIncomplete","percentLocked","propTypes","intlShape","isRequired","_default","injectIntl","exports"],"sources":["../../../../src/course-home/progress-tab/course-completion/CompletionDonutChart.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  getLocale, injectIntl, intlShape, isRtl,\n} from '@edx/frontend-platform/i18n';\nimport { useModel } from '../../../generic/model-store';\n\nimport CompleteDonutSegment from './CompleteDonutSegment';\nimport IncompleteDonutSegment from './IncompleteDonutSegment';\nimport LockedDonutSegment from './LockedDonutSegment';\nimport messages from './messages';\n\nconst CompletionDonutChart = ({ intl }) => {\n  const {\n    courseId,\n  } = useSelector(state => state.courseHome);\n\n  const {\n    completionSummary: {\n      completeCount,\n      incompleteCount,\n      lockedCount,\n    },\n  } = useModel('progress', courseId);\n\n  const numTotalUnits = completeCount + incompleteCount + lockedCount;\n  const completePercentage = completeCount ? Number(((completeCount / numTotalUnits) * 100).toFixed(0)) : 0;\n  const lockedPercentage = lockedCount ? Number(((lockedCount / numTotalUnits) * 100).toFixed(0)) : 0;\n  const incompletePercentage = 100 - completePercentage - lockedPercentage;\n\n  const isLocaleRtl = isRtl(getLocale());\n\n  return (\n    <>\n      <svg role=\"img\" width=\"50%\" height=\"100%\" viewBox=\"0 0 42 42\" className=\"donut\" style={{ maxWidth: '178px' }} aria-hidden=\"true\">\n        {/* The radius (or \"r\" attribute) is based off of a circumference of 100 in order to simplify percentage\n            calculations. The subsequent stroke-dasharray values found in each segment should add up to equal 100\n            in order to wrap around the circle once. */}\n        <circle className=\"donut-hole\" fill=\"#fff\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" />\n        <g className=\"donut-chart-text\">\n          <text x=\"50%\" y=\"50%\" className=\"donut-chart-number\">\n            {completePercentage}{isLocaleRtl && '\\u200f'}%\n          </text>\n          <text x=\"50%\" y=\"50%\" className=\"donut-chart-label\">\n            {intl.formatMessage(messages.donutLabel)}\n          </text>\n        </g>\n        <IncompleteDonutSegment incompletePercentage={incompletePercentage} />\n        <LockedDonutSegment lockedPercentage={lockedPercentage} />\n        <CompleteDonutSegment completePercentage={completePercentage} lockedPercentage={lockedPercentage} />\n      </svg>\n      <div className=\"sr-only\">\n        {intl.formatMessage(messages.percentComplete, { percent: completePercentage })}\n        {intl.formatMessage(messages.percentIncomplete, { percent: incompletePercentage })}\n        {lockedPercentage > 0 && (\n          <>\n            {intl.formatMessage(messages.percentLocked, { percent: lockedPercentage })}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nCompletionDonutChart.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(CompletionDonutChart);\n"],"mappings":"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"}