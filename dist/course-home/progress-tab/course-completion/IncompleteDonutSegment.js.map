{"version":3,"file":"IncompleteDonutSegment.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_i18n","_paragon","_messages","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","IncompleteDonutSegment","_ref","incompletePercentage","intl","showIncompletePopover","setShowIncompletePopover","useState","incompleteSegmentOffset","incompleteTooltipDegree","jsxs","className","onBlur","onFocus","tabIndex","children","jsx","cx","cy","r","strokeDasharray","strokeDashoffset","OverlayTrigger","show","placement","overlay","Popover","Content","formatMessage","messages","incompleteContentTooltip","x","y","style","transform","propTypes","PropTypes","number","isRequired","intlShape","_default","injectIntl","exports"],"sources":["../../../../src/course-home/progress-tab/course-completion/IncompleteDonutSegment.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { OverlayTrigger, Popover } from '@edx/paragon';\n\nimport messages from './messages';\n\nconst IncompleteDonutSegment = ({ incompletePercentage, intl }) => {\n  const [showIncompletePopover, setShowIncompletePopover] = useState(false);\n\n  if (!incompletePercentage) {\n    return null;\n  }\n\n  const incompleteSegmentOffset = (3.6 * incompletePercentage) / 16;\n  const incompleteTooltipDegree = incompletePercentage < 100 ? incompleteSegmentOffset : 0;\n\n  return (\n    <g\n      className=\"donut-segment-group\"\n      onBlur={() => setShowIncompletePopover(false)}\n      onFocus={() => setShowIncompletePopover(true)}\n      tabIndex=\"-1\"\n    >\n      <circle\n        className=\"donut-ring incomplete-stroke\"\n        cx=\"21\"\n        cy=\"21\"\n        r=\"15.91549430918954\"\n        strokeDasharray={`${incompletePercentage} ${100 - incompletePercentage}`}\n        strokeDashoffset=\"25\"\n      />\n\n      {/* Tooltip */}\n      <OverlayTrigger\n        show={showIncompletePopover}\n        placement=\"top\"\n        overlay={(\n          <Popover aria-hidden=\"true\">\n            <Popover.Content>\n              {intl.formatMessage(messages.incompleteContentTooltip)}\n            </Popover.Content>\n          </Popover>\n        )}\n      >\n        {/* Used to anchor the tooltip within the incomplete segment's stroke */}\n        <rect x=\"19\" y=\"3\" style={{ transform: `rotate(${incompleteTooltipDegree}deg)` }} />\n      </OverlayTrigger>\n    </g>\n  );\n};\n\nIncompleteDonutSegment.propTypes = {\n  incompletePercentage: PropTypes.number.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(IncompleteDonutSegment);\n"],"mappings":"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"}