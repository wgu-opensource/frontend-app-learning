{"version":3,"file":"utils.js","names":["executeThunk","thunk","dispatch","getState","Promise","setImmediate","exports","appendBrowserTimezoneToUrl","url","browserTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","urlObject","URL","searchParams","append","href"],"sources":["../src/utils.js"],"sourcesContent":["// Helper, that is used to forcibly finalize all promises\n// in thunk before running matcher against state.\nexport const executeThunk = async (thunk, dispatch, getState) => {\n  await thunk(dispatch, getState);\n  await new Promise(setImmediate);\n};\n\n// Utility function for appending the browser timezone to the url\n// Can be used on the backend when the user timezone is not set in the user account\nexport const appendBrowserTimezoneToUrl = (url) => {\n  const browserTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  const urlObject = new URL(url);\n  if (browserTimezone) {\n    urlObject.searchParams.append('browser_timezone', browserTimezone);\n  }\n  return urlObject.href;\n};\n"],"mappings":";;;;;;AAAA;AACA;AACO,MAAMA,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EAC/D,MAAMF,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;EAC/B,MAAM,IAAIC,OAAO,CAACC,YAAY,CAAC;AACjC,CAAC;;AAED;AACA;AAAAC,OAAA,CAAAN,YAAA,GAAAA,YAAA;AACO,MAAMO,0BAA0B,GAAIC,GAAG,IAAK;EACjD,MAAMC,eAAe,GAAGC,IAAI,CAACC,cAAc,CAAC,CAAC,CAACC,eAAe,CAAC,CAAC,CAACC,QAAQ;EACxE,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAACP,GAAG,CAAC;EAC9B,IAAIC,eAAe,EAAE;IACnBK,SAAS,CAACE,YAAY,CAACC,MAAM,CAAC,kBAAkB,EAAER,eAAe,CAAC;EACpE;EACA,OAAOK,SAAS,CAACI,IAAI;AACvB,CAAC;AAACZ,OAAA,CAAAC,0BAAA,GAAAA,0BAAA"}