{"version":3,"sources":["../../../src/alerts/logistration-alert/AccountActivationAlert.jsx"],"names":["AccountActivationAlert","intl","showModal","setShowModal","showSpinner","setShowSpinner","showCheck","setShowCheck","handleOnClick","then","showAccountActivationAlert","Cookies","get","undefined","remove","path","domain","process","env","SESSION_COOKIE_DOMAIN","button","siteName","SITE_NAME","ArrowForward","children","bodyContent","message","boldEmail","email","sendEmailTag","height","width","Check","formatMessage","messages","accountActivationAlertTitle","propTypes","intlShape","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Cookies from 'js-cookie';\nimport { getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport {\n  AlertModal,\n  Button,\n  Spinner,\n  Icon,\n} from '@edx/paragon';\nimport { Check, ArrowForward } from '@edx/paragon/icons';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { sendActivationEmail } from '../../courseware/data';\nimport messages from './messages';\n\nfunction AccountActivationAlert({\n  intl,\n}) {\n  const [showModal, setShowModal] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showCheck, setShowCheck] = useState(false);\n  const handleOnClick = () => {\n    setShowSpinner(true);\n    setShowCheck(false);\n    sendActivationEmail().then(() => {\n      setShowSpinner(false);\n      setShowCheck(true);\n    });\n  };\n\n  const showAccountActivationAlert = Cookies.get('show-account-activation-popup');\n  if (showAccountActivationAlert !== undefined) {\n    Cookies.remove('show-account-activation-popup', { path: '/', domain: process.env.SESSION_COOKIE_DOMAIN });\n    // extra check to make sure cookie was removed before updating the state. Updating the state without removal\n    // of cookie would make it infinite rendering\n    if (Cookies.get('show-account-activation-popup') === undefined) {\n      setShowModal(true);\n    }\n  }\n\n  const button = (\n    <Button\n      variant=\"primary\"\n      className=\"\"\n      onClick={() => setShowModal(false)}\n    >\n      <FormattedMessage\n        id=\"account-activation.alert.button\"\n        defaultMessage=\"Continue to {siteName}\"\n        description=\"account activation alert continue button\"\n        values={{\n          siteName: getConfig().SITE_NAME,\n        }}\n      />\n      <Icon src={ArrowForward} className=\"ml-1 d-inline-block align-bottom\" />\n    </Button>\n  );\n\n  const children = () => {\n    let bodyContent;\n    const message = (\n      <FormattedMessage\n        id=\"account-activation.alert.message\"\n        defaultMessage=\"We sent an email to {boldEmail} with a link to activate your account. Canâ€™t find it? Check your spam folder or\n        {sendEmailTag}.\"\n        description=\"Message for account activation alert which is shown after the registration\"\n        values={{\n          boldEmail: <b>{getAuthenticatedUser() && getAuthenticatedUser().email}</b>,\n          sendEmailTag: (\n          // eslint-disable-next-line jsx-a11y/anchor-is-valid\n            <a href=\"#\" role=\"button\" onClick={handleOnClick}>\n              <FormattedMessage\n                id=\"account-activation.resend.link\"\n                defaultMessage=\"resend the email\"\n                description=\"Message for resend link in account activation alert which is shown after the registration\"\n              />\n            </a>\n          ),\n        }}\n      />\n    );\n    bodyContent = (\n      <div>\n        {message}\n      </div>\n    );\n\n    if (!showCheck && showSpinner) {\n      bodyContent = (\n        <div>\n          {message}\n          <Spinner\n            animation=\"border\"\n            variant=\"secondary\"\n            style={{ height: '1.5rem', width: '1.5rem' }}\n          />\n        </div>\n      );\n    }\n\n    if (showCheck && !showSpinner) {\n      bodyContent = (\n        <div>\n          {message}\n          <Icon\n            src={Check}\n            style={{ height: '1.7rem', width: '1.25rem' }}\n            className=\"text-success-500 d-inline-block position-fixed\"\n          />\n        </div>\n      );\n    }\n    return bodyContent;\n  };\n\n  return (\n    <AlertModal\n      isOpen={showModal}\n      title={intl.formatMessage(messages.accountActivationAlertTitle)}\n      footerNode={button}\n      onClose={() => ({})}\n    >\n      {children()}\n    </AlertModal>\n  );\n}\n\nAccountActivationAlert.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(AccountActivationAlert);\n"],"file":"AccountActivationAlert.js"}