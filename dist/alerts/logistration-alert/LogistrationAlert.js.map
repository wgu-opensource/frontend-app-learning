{"version":3,"sources":["../../../src/alerts/logistration-alert/LogistrationAlert.jsx"],"names":["LogistrationAlert","intl","signIn","textDecoration","global","location","href","formatMessage","genericMessages","signInLowercase","register","LMS_BASE_URL","encodeURIComponent","registerLowercase","WarningFilled","propTypes","intlShape","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAEA,SAASA,iBAAT,OAAqC;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACnC,QAAMC,MAAM,gBACV,qBAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KADT;AAEE,IAAA,WAAW,EAAG,GAAE,+BAAoBC,MAAM,CAACC,QAAP,CAAgBC,IAApC,CAA0C,EAF5D;AAAA,cAIGL,IAAI,CAACM,aAAL,CAAmBC,kBAAgBC,eAAnC;AAJH,IADF,CADmC,CAUnC;AACA;;AACA,QAAMC,QAAQ,gBACZ,qBAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AAAEP,MAAAA,cAAc,EAAE;AAAlB,KADT;AAEE,IAAA,WAAW,EAAG,GAAE,mCAAYQ,YAAa,kBAAiBC,kBAAkB,CAACR,MAAM,CAACC,QAAP,CAAgBC,IAAjB,CAAuB,EAFrG;AAAA,cAIGL,IAAI,CAACM,aAAL,CAAmBC,kBAAgBK,iBAAnC;AAJH,IADF;AASA,sBACE,qBAAC,cAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,IAAI,EAAEC,oBAA/B;AAAA,2BACE,qBAAC,sBAAD;AACE,MAAA,EAAE,EAAC,6BADL;AAEE,MAAA,WAAW,EAAC,gEAFd;AAGE,MAAA,cAAc,EAAC,gDAHjB;AAIE,MAAA,MAAM,EAAE;AACNZ,QAAAA,MADM;AAENQ,QAAAA;AAFM;AAJV;AADF,IADF;AAaD;;AAEDV,iBAAiB,CAACe,SAAlB,GAA8B;AAC5Bd,EAAAA,IAAI,EAAEe,gBAAUC;AADY,CAA9B;;eAIe,sBAAWjB,iBAAX,C","sourcesContent":["import React from 'react';\nimport { getConfig } from '@edx/frontend-platform';\nimport { injectIntl, intlShape, FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { getLoginRedirectUrl } from '@edx/frontend-platform/auth';\nimport { Alert, Hyperlink } from '@edx/paragon';\nimport { WarningFilled } from '@edx/paragon/icons';\n\nimport genericMessages from '../../generic/messages';\n\nfunction LogistrationAlert({ intl }) {\n  const signIn = (\n    <Hyperlink\n      style={{ textDecoration: 'underline' }}\n      destination={`${getLoginRedirectUrl(global.location.href)}`}\n    >\n      {intl.formatMessage(genericMessages.signInLowercase)}\n    </Hyperlink>\n  );\n\n  // TODO: Pull this registration URL building out into a function, like the login one above.\n  // This is complicated by the fact that we don't have a REGISTER_URL env variable available.\n  const register = (\n    <Hyperlink\n      style={{ textDecoration: 'underline' }}\n      destination={`${getConfig().LMS_BASE_URL}/register?next=${encodeURIComponent(global.location.href)}`}\n    >\n      {intl.formatMessage(genericMessages.registerLowercase)}\n    </Hyperlink>\n  );\n\n  return (\n    <Alert variant=\"warning\" icon={WarningFilled}>\n      <FormattedMessage\n        id=\"learning.logistration.alert\"\n        description=\"Prompts the user to sign in or register to see course content.\"\n        defaultMessage=\"To see course content, {signIn} or {register}.\"\n        values={{\n          signIn,\n          register,\n        }}\n      />\n    </Alert>\n  );\n}\n\nLogistrationAlert.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(LogistrationAlert);\n"],"file":"LogistrationAlert.js"}