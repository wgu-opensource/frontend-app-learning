{"version":3,"sources":["../../../src/alerts/course-start-alert/hooks.js"],"names":["CourseStartAlert","React","lazy","CourseStartMasqueradeBanner","isStartDateInFuture","courseId","start","today","Date","startDate","useCourseStartAlert","isEnrolled","isVisible","payload","code","Object","values","sort","topic","clientCourseStartAlert","useCourseStartMasqueradeBanner","tab","isMasquerading","clientCourseStartMasqueradeBanner"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,MAAMA,gBAAgB,gBAAGC,eAAMC,IAAN,CAAW,mEAAa,oBAAb,GAAX,CAAzB;;AACA,MAAMC,2BAA2B,gBAAGF,eAAMC,IAAN,CAAW,mEAAa,+BAAb,GAAX,CAApC;;AAEA,SAASE,mBAAT,CAA6BC,QAA7B,EAAuC;AACrC,QAAM;AACJC,IAAAA;AADI,MAEF,0BAAS,gBAAT,EAA2BD,QAA3B,CAFJ;AAIA,QAAME,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,SAAS,GAAG,IAAID,IAAJ,CAASF,KAAT,CAAlB;AACA,SAAOG,SAAS,GAAGF,KAAnB;AACD;;AAED,SAASG,mBAAT,CAA6BL,QAA7B,EAAuC;AACrC,QAAM;AACJM,IAAAA;AADI,MAEF,0BAAS,gBAAT,EAA2BN,QAA3B,CAFJ;AAIA,QAAMO,SAAS,GAAGD,UAAU,IAAIP,mBAAmB,CAACC,QAAD,CAAnD;AAEA,QAAMQ,OAAO,GAAG;AACdR,IAAAA;AADc,GAAhB;AAIA,8BAASO,SAAT,EAAoB;AAClBE,IAAAA,IAAI,EAAE,wBADY;AAElBD,IAAAA,OAAO,EAAE,oBAAQ,MAAMA,OAAd,EAAuBE,MAAM,CAACC,MAAP,CAAcH,OAAd,EAAuBI,IAAvB,EAAvB,CAFS;AAGlBC,IAAAA,KAAK,EAAE;AAHW,GAApB;AAMA,SAAO;AACLC,IAAAA,sBAAsB,EAAEnB;AADnB,GAAP;AAGD;;AAEM,SAASoB,8BAAT,CAAwCf,QAAxC,EAAkDgB,GAAlD,EAAuD;AAC5D,QAAM;AACJC,IAAAA;AADI,MAEF,0BAAS,gBAAT,EAA2BjB,QAA3B,CAFJ;AAIA,QAAMO,SAAS,GAAGU,cAAc,IAAID,GAAG,KAAK,UAA1B,IAAwCjB,mBAAmB,CAACC,QAAD,CAA7E;AAEA,QAAMQ,OAAO,GAAG;AACdR,IAAAA;AADc,GAAhB;AAIA,8BAASO,SAAT,EAAoB;AAClBE,IAAAA,IAAI,EAAE,mCADY;AAElBD,IAAAA,OAAO,EAAE,oBAAQ,MAAMA,OAAd,EAAuBE,MAAM,CAACC,MAAP,CAAcH,OAAd,EAAuBI,IAAvB,EAAvB,CAFS;AAGlBC,IAAAA,KAAK,EAAE;AAHW,GAApB;AAMA,SAAO;AACLK,IAAAA,iCAAiC,EAAEpB;AAD9B,GAAP;AAGD;;eAEcO,mB","sourcesContent":["import React, { useMemo } from 'react';\nimport { useAlert } from '../../generic/user-messages';\nimport { useModel } from '../../generic/model-store';\n\nconst CourseStartAlert = React.lazy(() => import('./CourseStartAlert'));\nconst CourseStartMasqueradeBanner = React.lazy(() => import('./CourseStartMasqueradeBanner'));\n\nfunction isStartDateInFuture(courseId) {\n  const {\n    start,\n  } = useModel('courseHomeMeta', courseId);\n\n  const today = new Date();\n  const startDate = new Date(start);\n  return startDate > today;\n}\n\nfunction useCourseStartAlert(courseId) {\n  const {\n    isEnrolled,\n  } = useModel('courseHomeMeta', courseId);\n\n  const isVisible = isEnrolled && isStartDateInFuture(courseId);\n\n  const payload = {\n    courseId,\n  };\n\n  useAlert(isVisible, {\n    code: 'clientCourseStartAlert',\n    payload: useMemo(() => payload, Object.values(payload).sort()),\n    topic: 'outline-course-alerts',\n  });\n\n  return {\n    clientCourseStartAlert: CourseStartAlert,\n  };\n}\n\nexport function useCourseStartMasqueradeBanner(courseId, tab) {\n  const {\n    isMasquerading,\n  } = useModel('courseHomeMeta', courseId);\n\n  const isVisible = isMasquerading && tab === 'progress' && isStartDateInFuture(courseId);\n\n  const payload = {\n    courseId,\n  };\n\n  useAlert(isVisible, {\n    code: 'clientCourseStartMasqueradeBanner',\n    payload: useMemo(() => payload, Object.values(payload).sort()),\n    topic: 'instructor-toolbar-alerts',\n  });\n\n  return {\n    clientCourseStartMasqueradeBanner: CourseStartMasqueradeBanner,\n  };\n}\n\nexport default useCourseStartAlert;\n"],"file":"hooks.js"}