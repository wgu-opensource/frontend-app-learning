{"version":3,"sources":["../../../src/alerts/access-expiration-alert/AccessExpirationAlertMMP2P.jsx"],"names":["AccessExpirationAlertMMP2P","payload","accessExpiration","userTimezone","timezoneFormatArgs","timeZone","expirationDate","upgradeDeadline","upgradeUrl","deadlineMessage","formatDate","val","key","textDecoration","messages","upgradeNow","defaultMessage","Info","propTypes","PropTypes","shape","string","isRequired","masqueradingExpiredCourse","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;AAEA,SAASA,0BAAT,OAAiD;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC/C,QAAM;AACJC,IAAAA,gBADI;AAEJC,IAAAA;AAFI,MAGFF,OAHJ;AAIA,QAAMG,kBAAkB,GAAGD,YAAY,GAAG;AAAEE,IAAAA,QAAQ,EAAEF;AAAZ,GAAH,GAAgC,EAAvE;;AAEA,MAAI,CAACD,gBAAL,EAAuB;AACrB,WAAO,IAAP;AACD;;AAED,QAAM;AACJI,IAAAA,cADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA;AAHI,MAIFN,gBAJJ;AAMA,MAAIO,eAAe,GAAG,IAAtB;;AACA,QAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,GAAN,kBACjB,qBAAC,mBAAD;AAEE,IAAA,GAAG,EAAC,SAFN;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,IAAI,EAAC,SAJP;AAKE,IAAA,KAAK,EAAED;AALT,KAMMP,kBANN,GACQ,oBAAmBQ,GAAI,EAD/B,CADF;;AAWA,MAAIL,eAAe,IAAIC,UAAvB,EAAmC;AACjCC,IAAAA,eAAe,gBACb;AAAA,gCACcC,UAAU,CAACH,eAAD,EAAkB,aAAlB,CADxB,2GAGE,qBAAC,kBAAD;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,KAAK,EAAE;AAAEM,UAAAA,cAAc,EAAE;AAAlB,SAFT;AAGE,QAAA,WAAW,EAAEL,UAHf;AAAA,kBAKGM,kBAASC,UAAT,CAAoBC;AALvB,QAHF;AAAA,MADF;AAaD;;AAED,sBACE,sBAAC,cAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAsB,IAAA,IAAI,EAAEC,WAA5B;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,mDACiCP,UAAU,CAACH,eAAD,EAAkB,cAAlB,CAD3C;AAAA,MADF,eAIE,8BAJF,EAKGE,eALH,eAME,8BANF,yEAQMC,UAAU,CAACJ,cAAD,EAAiB,gBAAjB,CARhB;AAAA,IADF;AAYD;;AAEDN,0BAA0B,CAACkB,SAA3B,GAAuC;AACrCjB,EAAAA,OAAO,EAAEkB,mBAAUC,KAAV,CAAgB;AACvBlB,IAAAA,gBAAgB,EAAEiB,mBAAUC,KAAV,CAAgB;AAChCd,MAAAA,cAAc,EAAEa,mBAAUE,MAAV,CAAiBC,UADD;AAEhCC,MAAAA,yBAAyB,EAAEJ,mBAAUK,IAAV,CAAeF,UAFV;AAGhCf,MAAAA,eAAe,EAAEY,mBAAUE,MAHK;AAIhCb,MAAAA,UAAU,EAAEW,mBAAUE;AAJU,KAAhB,EAKfC,UANoB;AAOvBnB,IAAAA,YAAY,EAAEgB,mBAAUE,MAAV,CAAiBC;AAPR,GAAhB,EAQNA;AATkC,CAAvC;;eAYe,sBAAWtB,0BAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedDate, injectIntl } from '@edx/frontend-platform/i18n';\nimport { Alert, Hyperlink } from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\n\nimport messages from './messages';\n\nfunction AccessExpirationAlertMMP2P({ payload }) {\n  const {\n    accessExpiration,\n    userTimezone,\n  } = payload;\n  const timezoneFormatArgs = userTimezone ? { timeZone: userTimezone } : {};\n\n  if (!accessExpiration) {\n    return null;\n  }\n\n  const {\n    expirationDate,\n    upgradeDeadline,\n    upgradeUrl,\n  } = accessExpiration;\n\n  let deadlineMessage = null;\n  const formatDate = (val, key) => (\n    <FormattedDate\n      key={`accessExpiration.${key}`}\n      day=\"numeric\"\n      month=\"short\"\n      year=\"numeric\"\n      value={val}\n      {...timezoneFormatArgs}\n    />\n  );\n\n  if (upgradeDeadline && upgradeUrl) {\n    deadlineMessage = (\n      <>\n        Upgrade by {formatDate(upgradeDeadline, 'upgradeDesc')} to unlock unlimited access to all course activities, including graded assignments.\n        &nbsp;\n        <Hyperlink\n          className=\"font-weight-bold\"\n          style={{ textDecoration: 'underline' }}\n          destination={upgradeUrl}\n        >\n          {messages.upgradeNow.defaultMessage}\n        </Hyperlink>\n      </>\n    );\n  }\n\n  return (\n    <Alert variant=\"info\" icon={Info}>\n      <span className=\"font-weight-bold\">\n        Unlock full course content by {formatDate(upgradeDeadline, 'upgradeTitle')}\n      </span>\n      <br />\n      {deadlineMessage}\n      <br />\n      You lose all access to the first two weeks of scheduled content\n      on {formatDate(expirationDate, 'expirationBody')}.\n    </Alert>\n  );\n}\n\nAccessExpirationAlertMMP2P.propTypes = {\n  payload: PropTypes.shape({\n    accessExpiration: PropTypes.shape({\n      expirationDate: PropTypes.string.isRequired,\n      masqueradingExpiredCourse: PropTypes.bool.isRequired,\n      upgradeDeadline: PropTypes.string,\n      upgradeUrl: PropTypes.string,\n    }).isRequired,\n    userTimezone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default injectIntl(AccessExpirationAlertMMP2P);\n"],"file":"AccessExpirationAlertMMP2P.js"}