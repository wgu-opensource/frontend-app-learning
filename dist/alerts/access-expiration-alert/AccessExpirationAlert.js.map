{"version":3,"sources":["../../../src/alerts/access-expiration-alert/AccessExpirationAlert.jsx"],"names":["AccessExpirationAlert","intl","payload","showMMP2P","setShowMMP2P","window","experiment__home_alert_bShowMMP2P","experiment__home_alert_showMMP2P","undefined","val","accessExpiration","courseId","org","userTimezone","analyticsPageName","timezoneFormatArgs","timeZone","expirationDate","upgradeDeadline","upgradeUrl","logClick","org_key","courserun_key","linkCategory","linkName","linkType","pageName","deadlineMessage","date","textDecoration","formatMessage","messages","upgradeNow","Info","propTypes","intlShape","isRequired","PropTypes","shape","string","masqueradingExpiredCourse","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport {\n  FormattedMessage, FormattedDate, injectIntl, intlShape,\n} from '@edx/frontend-platform/i18n';\nimport { Alert, Hyperlink } from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\n\nimport messages from './messages';\nimport AccessExpirationAlertMMP2P from './AccessExpirationAlertMMP2P';\n\nfunction AccessExpirationAlert({ intl, payload }) {\n  /** [MM-P2P] Experiment */\n  const [showMMP2P, setShowMMP2P] = useState(!!window.experiment__home_alert_bShowMMP2P);\n  if (window.experiment__home_alert_showMMP2P === undefined) {\n    window.experiment__home_alert_showMMP2P = (val) => {\n      window.experiment__home_alert_bShowMMP2P = !!val;\n      setShowMMP2P(!!val);\n    };\n  }\n\n  const {\n    accessExpiration,\n    courseId,\n    org,\n    userTimezone,\n    analyticsPageName,\n  } = payload;\n  const timezoneFormatArgs = userTimezone ? { timeZone: userTimezone } : {};\n\n  if (!accessExpiration) {\n    return null;\n  }\n\n  const {\n    expirationDate,\n    upgradeDeadline,\n    upgradeUrl,\n  } = accessExpiration;\n\n  /** [MM-P2P] Experiment */\n  if (showMMP2P) {\n    return (\n      <AccessExpirationAlertMMP2P payload={payload} />\n    );\n  }\n\n  const logClick = () => {\n    sendTrackEvent('edx.bi.ecommerce.upsell_links_clicked', {\n      org_key: org,\n      courserun_key: courseId,\n      linkCategory: 'FBE_banner',\n      linkName: `${analyticsPageName}_audit_access_expires`,\n      linkType: 'link',\n      pageName: analyticsPageName,\n    });\n  };\n\n  let deadlineMessage = null;\n  if (upgradeDeadline && upgradeUrl) {\n    deadlineMessage = (\n      <>\n        <br />\n        <FormattedMessage\n          id=\"learning.accessExpiration.deadline\"\n          defaultMessage=\"Upgrade by {date} to get unlimited access to the course as long as it exists on the site.\"\n          description=\"Warning shown to learner to upgrade while they are enrolled on the audit version and it's possible to upgrade\"\n          values={{\n            date: (\n              <FormattedDate\n                key=\"accessExpirationUpgradeDeadline\"\n                day=\"numeric\"\n                month=\"short\"\n                year=\"numeric\"\n                value={upgradeDeadline}\n                {...timezoneFormatArgs}\n              />\n            ),\n          }}\n        />\n        &nbsp;\n        <Hyperlink\n          className=\"font-weight-bold\"\n          style={{ textDecoration: 'underline' }}\n          destination={upgradeUrl}\n          onClick={logClick}\n        >\n          {intl.formatMessage(messages.upgradeNow)}\n        </Hyperlink>\n      </>\n    );\n  }\n\n  return (\n    <Alert variant=\"info\" icon={Info}>\n      <span className=\"font-weight-bold\">\n        <FormattedMessage\n          id=\"learning.accessExpiration.header\"\n          defaultMessage=\"Audit Access Expires {date}\"\n          description=\"Headline for auditing deadline\"\n          values={{\n            date: (\n              <FormattedDate\n                key=\"accessExpirationHeaderDate\"\n                day=\"numeric\"\n                month=\"short\"\n                year=\"numeric\"\n                value={expirationDate}\n                {...timezoneFormatArgs}\n              />\n            ),\n          }}\n        />\n      </span>\n      <br />\n      <FormattedMessage\n        id=\"learning.accessExpiration.body\"\n        defaultMessage=\"You lose all access to this course, including your progress, on {date}.\"\n        description=\"Message body to tell learner the consequences of course expiration.\"\n        values={{\n          date: (\n            <FormattedDate\n              key=\"accessExpirationBodyDate\"\n              day=\"numeric\"\n              month=\"short\"\n              year=\"numeric\"\n              value={expirationDate}\n              {...timezoneFormatArgs}\n            />\n          ),\n        }}\n      />\n      {deadlineMessage}\n    </Alert>\n  );\n}\n\nAccessExpirationAlert.propTypes = {\n  intl: intlShape.isRequired,\n  payload: PropTypes.shape({\n    accessExpiration: PropTypes.shape({\n      expirationDate: PropTypes.string.isRequired,\n      masqueradingExpiredCourse: PropTypes.bool.isRequired,\n      upgradeDeadline: PropTypes.string,\n      upgradeUrl: PropTypes.string,\n    }).isRequired,\n    courseId: PropTypes.string.isRequired,\n    org: PropTypes.string.isRequired,\n    userTimezone: PropTypes.string.isRequired,\n    analyticsPageName: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default injectIntl(AccessExpirationAlert);\n"],"file":"AccessExpirationAlert.js"}