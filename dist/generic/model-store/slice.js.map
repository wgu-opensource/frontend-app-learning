{"version":3,"sources":["../../../src/generic/model-store/slice.js"],"names":["add","state","modelType","model","idField","id","undefined","update","remove","slice","name","initialState","reducers","addModel","payload","addModels","models","forEach","addModelsMap","modelsMap","Object","values","updateModel","updateModels","updateModelsMap","removeModel","removeModels","ids","actions","reducer"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nfunction add(state, modelType, model, idField) {\n  idField = idField ?? 'id';\n  const id = model[idField];\n  if (state[modelType] === undefined) {\n    state[modelType] = {};\n  }\n  state[modelType][id] = model;\n}\n\nfunction update(state, modelType, model, idField) {\n  idField = idField ?? 'id';\n  const id = model[idField];\n  if (state[modelType] === undefined) {\n    state[modelType] = {};\n  }\n  state[modelType][id] = { ...state[modelType][id], ...model };\n}\n\nfunction remove(state, modelType, id) {\n  if (state[modelType] === undefined) {\n    state[modelType] = {};\n  }\n\n  delete state[modelType][id];\n}\n\nconst slice = createSlice({\n  name: 'models',\n  initialState: {},\n  reducers: {\n    addModel: (state, { payload }) => {\n      const { modelType, model, idField } = payload;\n      add(state, modelType, model, idField);\n    },\n    addModels: (state, { payload }) => {\n      const { modelType, models, idField } = payload;\n      models.forEach(model => add(state, modelType, model, idField));\n    },\n    addModelsMap: (state, { payload }) => {\n      const { modelType, modelsMap, idField } = payload;\n      Object.values(modelsMap).forEach(model => add(state, modelType, model, idField));\n    },\n    updateModel: (state, { payload }) => {\n      const { modelType, model, idField } = payload;\n      update(state, modelType, model, idField);\n    },\n    updateModels: (state, { payload }) => {\n      const { modelType, models, idField } = payload;\n      models.forEach(model => update(state, modelType, model, idField));\n    },\n    updateModelsMap: (state, { payload }) => {\n      const { modelType, modelsMap, idField } = payload;\n      Object.values(modelsMap).forEach(model => update(state, modelType, model, idField));\n    },\n    removeModel: (state, { payload }) => {\n      const { modelType, id } = payload;\n      remove(state, modelType, id);\n    },\n    removeModels: (state, { payload }) => {\n      const { modelType, ids } = payload;\n      ids.forEach(id => remove(state, modelType, id));\n    },\n  },\n});\n\nexport const {\n  addModel,\n  addModels,\n  addModelsMap,\n  updateModel,\n  updateModels,\n  updateModelsMap,\n  removeModel,\n  removeModels,\n} = slice.actions;\n\nexport const { reducer } = slice;\n"],"file":"slice.js"}