{"version":3,"sources":["../../../src/generic/upgrade-notification/UpgradeNotification.jsx"],"names":["UpsellNoFBECardContent","UpsellFBEFarAwayCardContent","UpsellFBESoonCardContent","accessExpirationDate","timezoneFormatArgs","includingAnyProgress","date","Date","benefitsOfUpgrading","propTypes","PropTypes","instanceOf","isRequired","shape","timeZone","string","defaultProps","PastExpirationCardContent","ExpirationCountdown","courseId","hoursToExpiration","setupgradeNotificationCurrentState","type","expirationText","dayCount","Math","floor","hourCount","number","func","AccessExpirationDateBanner","PastExpirationDateBanner","UpgradeNotification","accessExpiration","contentTypeGatingEnabled","marketingUrl","offer","org","shouldDisplayBorder","timeOffsetMillis","upsellPageName","userTimezone","verifiedMode","dateNow","now","correctedTime","expirationDate","pastExpirationDeadline","eventProperties","org_key","courserun_key","promotionEventProperties","creative","name","position","promotion_id","logClick","location","linkCategory","linkName","linkType","pageName","logClickPastExpiration","upgradeNotificationHeaderText","expirationBanner","upsellMessage","callToActionButton","offerCode","hoursToAccessExpiration","hoursToDiscountExpiration","percentage","code","bool","currencySymbol","price","upgradeUrl"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { sendTrackEvent, sendTrackingLogEvent } from '@edx/frontend-platform/analytics';\nimport { FormattedDate, FormattedMessage, injectIntl } from '@edx/frontend-platform/i18n';\nimport { Button } from '@edx/paragon';\nimport { setLocalStorage } from '../../data/localStorage';\nimport { UpgradeButton } from '../upgrade-button';\nimport {\n  VerifiedCertBullet,\n  UnlockGradedBullet,\n  FullAccessBullet,\n  SupportMissionBullet,\n} from '../upsell-bullets/UpsellBullets';\n\nfunction UpsellNoFBECardContent() {\n  return (\n    <ul className=\"fa-ul upgrade-notification-ul pt-0\">\n      <VerifiedCertBullet />\n      <SupportMissionBullet />\n    </ul>\n  );\n}\n\nfunction UpsellFBEFarAwayCardContent() {\n  return (\n    <ul className=\"fa-ul upgrade-notification-ul\">\n      <VerifiedCertBullet />\n      <UnlockGradedBullet />\n      <FullAccessBullet />\n      <SupportMissionBullet />\n    </ul>\n  );\n}\n\nfunction UpsellFBESoonCardContent({ accessExpirationDate, timezoneFormatArgs }) {\n  const includingAnyProgress = (\n    <span className=\"font-weight-bold\">\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expirationAccessLoss.progress\"\n        defaultMessage=\"including any progress\"\n      />\n    </span>\n  );\n\n  const date = (\n    <FormattedDate\n      key=\"accessDate\"\n      day=\"numeric\"\n      month=\"long\"\n      value={new Date(accessExpirationDate)}\n      {...timezoneFormatArgs}\n    />\n  );\n\n  const benefitsOfUpgrading = (\n    <a className=\"inline-link-underline font-weight-bold\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://support.edx.org/hc/en-us/articles/360013426573-What-are-the-differences-between-audit-free-and-verified-paid-courses-\">\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expirationVerifiedCert.benefits\"\n        defaultMessage=\"benefits of upgrading\"\n      />\n    </a>\n  );\n\n  return (\n    <div className=\"upgrade-notification-text\">\n      <p>\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.expirationAccessLoss\"\n          defaultMessage=\"You will lose all access to this course, {includingAnyProgress}, on {date}.\"\n          values={{\n            includingAnyProgress,\n            date,\n          }}\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.expirationVerifiedCert\"\n          defaultMessage=\"Upgrading your course enables you to pursue a verified certificate and unlocks numerous features. Learn more about the {benefitsOfUpgrading}.\"\n          values={{ benefitsOfUpgrading }}\n        />\n      </p>\n    </div>\n  );\n}\n\nUpsellFBESoonCardContent.propTypes = {\n  accessExpirationDate: PropTypes.PropTypes.instanceOf(Date).isRequired,\n  timezoneFormatArgs: PropTypes.shape({\n    timeZone: PropTypes.string,\n  }),\n};\n\nUpsellFBESoonCardContent.defaultProps = {\n  timezoneFormatArgs: {},\n};\n\nfunction PastExpirationCardContent() {\n  return (\n    <div className=\"upgrade-notification-text\">\n      <p>\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.pastExpiration.content\"\n          defaultMessage=\"The upgrade deadline for this course passed. To upgrade, enroll in the next available session.\"\n        />\n      </p>\n    </div>\n  );\n}\n\nfunction ExpirationCountdown({\n  courseId, hoursToExpiration, setupgradeNotificationCurrentState, type,\n}) {\n  let expirationText;\n  if (hoursToExpiration >= 24) { // More than 1 day left\n    // setupgradeNotificationCurrentState is available in NotificationTray (not course home)\n    if (setupgradeNotificationCurrentState) {\n      if (type === 'access') {\n        setupgradeNotificationCurrentState('accessDaysLeft');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'accessDaysLeft');\n      }\n      if (type === 'offer') {\n        setupgradeNotificationCurrentState('FPDdaysLeft');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'FPDdaysLeft');\n      }\n    }\n    expirationText = (\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expirationDays\"\n        defaultMessage={`{dayCount, number} {dayCount, plural, \n          one {day}\n          other {days}} left`}\n        values={{\n          dayCount: (Math.floor(hoursToExpiration / 24)),\n        }}\n      />\n    );\n  } else if (hoursToExpiration >= 1) { // More than 1 hour left\n    // setupgradeNotificationCurrentState is available in NotificationTray (not course home)\n    if (setupgradeNotificationCurrentState) {\n      if (type === 'access') {\n        setupgradeNotificationCurrentState('accessHoursLeft');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'accessHoursLeft');\n      }\n      if (type === 'offer') {\n        setupgradeNotificationCurrentState('FPDHoursLeft');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'FPDHoursLeft');\n      }\n    }\n    expirationText = (\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expirationHours\"\n        defaultMessage={`{hourCount, number} {hourCount, plural,\n          one {hour}\n          other {hours}} left`}\n        values={{\n          hourCount: (hoursToExpiration),\n        }}\n      />\n    );\n  } else { // Less than 1 hour\n    // setupgradeNotificationCurrentState is available in NotificationTray (not course home)\n    if (setupgradeNotificationCurrentState) {\n      if (type === 'access') {\n        setupgradeNotificationCurrentState('accessLastHour');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'accessLastHour');\n      }\n      if (type === 'offer') {\n        setupgradeNotificationCurrentState('FPDLastHour');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'FPDLastHour');\n      }\n    }\n    expirationText = (\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expirationMinutes\"\n        defaultMessage=\"Less than 1 hour left\"\n      />\n    );\n  }\n  return (<div className=\"upsell-warning\">{expirationText}</div>);\n}\n\nExpirationCountdown.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  hoursToExpiration: PropTypes.number.isRequired,\n  setupgradeNotificationCurrentState: PropTypes.func,\n  type: PropTypes.string,\n};\nExpirationCountdown.defaultProps = {\n  setupgradeNotificationCurrentState: null,\n  type: null,\n};\n\nfunction AccessExpirationDateBanner({\n  courseId, accessExpirationDate, timezoneFormatArgs, setupgradeNotificationCurrentState,\n}) {\n  if (setupgradeNotificationCurrentState) {\n    setupgradeNotificationCurrentState('accessDateView');\n    setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'accessDateView');\n  }\n  return (\n    <div className=\"upsell-warning-light\">\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expiration\"\n        defaultMessage=\"Course access will expire {date}\"\n        values={{\n          date: (\n            <FormattedDate\n              key=\"accessExpireDate\"\n              day=\"numeric\"\n              month=\"long\"\n              value={accessExpirationDate}\n              {...timezoneFormatArgs}\n            />\n          ),\n        }}\n      />\n    </div>\n  );\n}\n\nAccessExpirationDateBanner.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  accessExpirationDate: PropTypes.PropTypes.instanceOf(Date).isRequired,\n  timezoneFormatArgs: PropTypes.shape({\n    timeZone: PropTypes.string,\n  }),\n  setupgradeNotificationCurrentState: PropTypes.func,\n};\n\nAccessExpirationDateBanner.defaultProps = {\n  timezoneFormatArgs: {},\n  setupgradeNotificationCurrentState: null,\n};\n\nfunction PastExpirationDateBanner({\n  courseId, accessExpirationDate, timezoneFormatArgs, setupgradeNotificationCurrentState,\n}) {\n  if (setupgradeNotificationCurrentState) {\n    setupgradeNotificationCurrentState('PastExpirationDate');\n    setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'PastExpirationDate');\n  }\n  return (\n    <div className=\"upsell-warning\">\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.pastExpiration.banner\"\n        defaultMessage=\"Upgrade deadline passed on {date}\"\n        values={{\n          date: (\n            <FormattedDate\n              key=\"accessExpireDate\"\n              day=\"numeric\"\n              month=\"long\"\n              value={accessExpirationDate}\n              {...timezoneFormatArgs}\n            />\n          ),\n        }}\n      />\n    </div>\n  );\n}\n\nPastExpirationDateBanner.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  accessExpirationDate: PropTypes.PropTypes.instanceOf(Date).isRequired,\n  timezoneFormatArgs: PropTypes.shape({\n    timeZone: PropTypes.string,\n  }),\n  setupgradeNotificationCurrentState: PropTypes.func,\n};\n\nPastExpirationDateBanner.defaultProps = {\n  timezoneFormatArgs: {},\n  setupgradeNotificationCurrentState: null,\n};\n\nfunction UpgradeNotification({\n  accessExpiration,\n  contentTypeGatingEnabled,\n  marketingUrl,\n  courseId,\n  offer,\n  org,\n  setupgradeNotificationCurrentState,\n  shouldDisplayBorder,\n  timeOffsetMillis,\n  upsellPageName,\n  userTimezone,\n  verifiedMode,\n}) {\n  const dateNow = Date.now();\n  const timezoneFormatArgs = userTimezone ? { timeZone: userTimezone } : {};\n  const correctedTime = new Date(dateNow + timeOffsetMillis);\n  const accessExpirationDate = accessExpiration ? new Date(accessExpiration.expirationDate) : null;\n  const pastExpirationDeadline = accessExpiration ? new Date(dateNow) > accessExpirationDate : false;\n\n  if (!verifiedMode) {\n    return null;\n  }\n\n  const eventProperties = {\n    org_key: org,\n    courserun_key: courseId,\n  };\n\n  const promotionEventProperties = {\n    creative: 'sidebarupsell',\n    name: 'In-Course Verification Prompt',\n    position: 'sidebar-message',\n    promotion_id: 'courseware_verified_certificate_upsell',\n    ...eventProperties,\n  };\n\n  useEffect(() => {\n    sendTrackingLogEvent('edx.bi.course.upgrade.sidebarupsell.displayed', eventProperties);\n    sendTrackEvent('Promotion Viewed', promotionEventProperties);\n  }, []);\n\n  const logClick = () => {\n    sendTrackingLogEvent('edx.bi.course.upgrade.sidebarupsell.clicked', eventProperties);\n    sendTrackingLogEvent('edx.course.enrollment.upgrade.clicked', {\n      ...eventProperties,\n      location: 'sidebar-message',\n    });\n    sendTrackEvent('Promotion Clicked', promotionEventProperties);\n    sendTrackEvent('edx.bi.ecommerce.upsell_links_clicked', {\n      ...eventProperties,\n      linkCategory: 'green_upgrade',\n      linkName: `${upsellPageName}_green`,\n      linkType: 'button',\n      pageName: upsellPageName,\n    });\n  };\n\n  const logClickPastExpiration = () => {\n    sendTrackEvent('edx.bi.ecommerce.upgrade_notification.past_expiration.button_clicked', {\n      ...eventProperties,\n      linkCategory: 'upgrade_notification',\n      linkName: `${upsellPageName}_course_details`,\n      linkType: 'button',\n      pageName: upsellPageName,\n    });\n  };\n\n  /*\n  There are 5 parts that change in the upgrade card:\n    upgradeNotificationHeaderText\n    expirationBanner\n    upsellMessage\n    callToActionButton\n    offerCode\n  */\n  let upgradeNotificationHeaderText;\n  let expirationBanner;\n  let upsellMessage;\n  let callToActionButton;\n  let offerCode;\n\n  if (!!accessExpiration && !!contentTypeGatingEnabled) {\n    const hoursToAccessExpiration = Math.floor((accessExpirationDate - correctedTime) / 1000 / 60 / 60);\n\n    if (hoursToAccessExpiration >= (7 * 24)) {\n      if (offer) { // countdown to the first purchase discount if there is one\n        const hoursToDiscountExpiration = Math.floor((new Date(offer.expirationDate) - correctedTime) / 1000 / 60 / 60);\n        upgradeNotificationHeaderText = (\n          <FormattedMessage\n            id=\"learning.generic.upgradeNotification.firstTimeLearnerDiscount\"\n            defaultMessage=\"{percentage}% First-Time Learner Discount\"\n            values={{\n              percentage: (offer.percentage),\n            }}\n          />\n        );\n        expirationBanner = (\n          <ExpirationCountdown\n            courseId={courseId}\n            hoursToExpiration={hoursToDiscountExpiration}\n            setupgradeNotificationCurrentState={setupgradeNotificationCurrentState}\n            type=\"offer\"\n          />\n        );\n      } else {\n        upgradeNotificationHeaderText = (\n          <FormattedMessage\n            id=\"learning.generic.upgradeNotification.accessExpiration\"\n            defaultMessage=\"Upgrade your course today\"\n          />\n        );\n        expirationBanner = (\n          <AccessExpirationDateBanner\n            courseId={courseId}\n            accessExpirationDate={accessExpirationDate}\n            timezoneFormatArgs={timezoneFormatArgs}\n            setupgradeNotificationCurrentState={setupgradeNotificationCurrentState}\n          />\n        );\n      }\n      upsellMessage = <UpsellFBEFarAwayCardContent />;\n    } else if (hoursToAccessExpiration < (7 * 24) && hoursToAccessExpiration >= 0) {\n      // more urgent messaging if there's less than 7 days left to access expiration\n      upgradeNotificationHeaderText = (\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.accessExpirationUrgent\"\n          defaultMessage=\"Course Access Expiration\"\n        />\n      );\n      expirationBanner = (\n        <ExpirationCountdown\n          courseId={courseId}\n          hoursToExpiration={hoursToAccessExpiration}\n          setupgradeNotificationCurrentState={setupgradeNotificationCurrentState}\n          type=\"access\"\n        />\n      );\n      upsellMessage = (\n        <UpsellFBESoonCardContent\n          accessExpirationDate={accessExpirationDate}\n          timezoneFormatArgs={timezoneFormatArgs}\n        />\n      );\n    } else { // access expiration deadline has passed\n      upgradeNotificationHeaderText = (\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.accessExpirationPast\"\n          defaultMessage=\"Course Access Expiration\"\n        />\n      );\n      expirationBanner = (\n        <PastExpirationDateBanner\n          courseId={courseId}\n          accessExpirationDate={accessExpirationDate}\n          timezoneFormatArgs={timezoneFormatArgs}\n          setupgradeNotificationCurrentState={setupgradeNotificationCurrentState}\n        />\n      );\n      upsellMessage = (\n        <PastExpirationCardContent />\n      );\n    }\n  } else { // FBE is turned off\n    upgradeNotificationHeaderText = (\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.pursueAverifiedCertificate\"\n        defaultMessage=\"Pursue a verified certificate\"\n      />\n    );\n    upsellMessage = (<UpsellNoFBECardContent />);\n  }\n\n  if (pastExpirationDeadline) {\n    callToActionButton = (\n      <Button\n        variant=\"primary\"\n        onClick={logClickPastExpiration}\n        href={marketingUrl}\n        block\n      >\n        View Course Details\n      </Button>\n    );\n  } else {\n    callToActionButton = (\n      <UpgradeButton\n        offer={offer}\n        onClick={logClick}\n        verifiedMode={verifiedMode}\n        block\n      />\n    );\n  }\n\n  if (offer) { // if there's a first purchase discount, message the code at the bottom\n    offerCode = (\n      <div className=\"text-center discount-info\">\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.code\"\n          defaultMessage=\"Use code {code} at checkout\"\n          values={{\n            code: (<span className=\"font-weight-bold\">{offer.code}</span>),\n          }}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <section className={classNames('upgrade-notification small', { 'card mb-4': shouldDisplayBorder })}>\n      <div id=\"courseHome-upgradeNotification\">\n        <h2 className=\"h5 upgrade-notification-header\" id=\"outline-sidebar-upgrade-header\">\n          {upgradeNotificationHeaderText}\n        </h2>\n        {expirationBanner}\n        <div className=\"upgrade-notification-message\">\n          {upsellMessage}\n        </div>\n        <div className=\"upgrade-notification-button\">\n          {callToActionButton}\n        </div>\n        {offerCode}\n      </div>\n    </section>\n  );\n}\n\nUpgradeNotification.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  org: PropTypes.string.isRequired,\n  accessExpiration: PropTypes.shape({\n    expirationDate: PropTypes.string,\n  }),\n  contentTypeGatingEnabled: PropTypes.bool,\n  marketingUrl: PropTypes.string,\n  offer: PropTypes.shape({\n    expirationDate: PropTypes.string,\n    percentage: PropTypes.number,\n    code: PropTypes.string,\n  }),\n  shouldDisplayBorder: PropTypes.bool,\n  setupgradeNotificationCurrentState: PropTypes.func,\n  timeOffsetMillis: PropTypes.number,\n  upsellPageName: PropTypes.string.isRequired,\n  userTimezone: PropTypes.string,\n  verifiedMode: PropTypes.shape({\n    currencySymbol: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    upgradeUrl: PropTypes.string.isRequired,\n  }),\n};\n\nUpgradeNotification.defaultProps = {\n  accessExpiration: null,\n  contentTypeGatingEnabled: false,\n  marketingUrl: null,\n  offer: null,\n  setupgradeNotificationCurrentState: null,\n  shouldDisplayBorder: null,\n  timeOffsetMillis: 0,\n  userTimezone: null,\n  verifiedMode: null,\n};\n\nexport default injectIntl(UpgradeNotification);\n"],"file":"UpgradeNotification.js"}