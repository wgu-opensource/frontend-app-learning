{"version":3,"file":"UpgradeNotification.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_classnames","_analytics","_i18n","_paragon","_localStorage","_upgradeButton","_UpsellBullets","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","UpsellNoFBECardContent","jsxs","className","children","jsx","VerifiedCertBullet","SupportMissionBullet","UpsellFBEFarAwayCardContent","UnlockGradedBullet","FullAccessBullet","UpsellFBESoonCardContent","_ref","accessExpirationDate","timezoneFormatArgs","includingAnyProgress","FormattedMessage","id","defaultMessage","date","FormattedDate","day","month","Date","benefitsOfUpgrading","rel","href","values","propTypes","PropTypes","instanceOf","isRequired","shape","timeZone","string","defaultProps","PastExpirationCardContent","ExpirationCountdown","_ref2","courseId","hoursToExpiration","setupgradeNotificationCurrentState","type","expirationText","setLocalStorage","dayCount","Math","floor","hourCount","number","func","AccessExpirationDateBanner","_ref3","PastExpirationDateBanner","_ref4","UpgradeNotification","_ref5","accessExpiration","contentTypeGatingEnabled","marketingUrl","offer","org","shouldDisplayBorder","timeOffsetMillis","upsellPageName","userTimezone","verifiedMode","dateNow","now","correctedTime","expirationDate","pastExpirationDeadline","eventProperties","org_key","courserun_key","promotionEventProperties","creative","name","position","promotion_id","useEffect","sendTrackingLogEvent","sendTrackEvent","logClick","location","linkCategory","linkName","linkType","pageName","logClickPastExpiration","upgradeNotificationHeaderText","expirationBanner","upsellMessage","callToActionButton","offerCode","hoursToAccessExpiration","hoursToDiscountExpiration","percentage","Button","variant","onClick","block","UpgradeButton","code","classNames","bool","currencySymbol","price","upgradeUrl","_default","injectIntl","exports"],"sources":["../../../src/generic/upgrade-notification/UpgradeNotification.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { sendTrackEvent, sendTrackingLogEvent } from '@edx/frontend-platform/analytics';\nimport { FormattedDate, FormattedMessage, injectIntl } from '@edx/frontend-platform/i18n';\nimport { Button } from '@edx/paragon';\nimport { setLocalStorage } from '../../data/localStorage';\nimport { UpgradeButton } from '../upgrade-button';\nimport {\n  VerifiedCertBullet,\n  UnlockGradedBullet,\n  FullAccessBullet,\n  SupportMissionBullet,\n} from '../upsell-bullets/UpsellBullets';\n\nconst UpsellNoFBECardContent = () => (\n  <ul className=\"fa-ul upgrade-notification-ul pt-0\">\n    <VerifiedCertBullet />\n    <SupportMissionBullet />\n  </ul>\n);\n\nconst UpsellFBEFarAwayCardContent = () => (\n  <ul className=\"fa-ul upgrade-notification-ul\">\n    <VerifiedCertBullet />\n    <UnlockGradedBullet />\n    <FullAccessBullet />\n    <SupportMissionBullet />\n  </ul>\n);\n\nconst UpsellFBESoonCardContent = ({ accessExpirationDate, timezoneFormatArgs }) => {\n  const includingAnyProgress = (\n    <span className=\"font-weight-bold\">\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expirationAccessLoss.progress\"\n        defaultMessage=\"including any progress\"\n      />\n    </span>\n  );\n\n  const date = (\n    <FormattedDate\n      key=\"accessDate\"\n      day=\"numeric\"\n      month=\"long\"\n      value={new Date(accessExpirationDate)}\n      {...timezoneFormatArgs}\n    />\n  );\n\n  const benefitsOfUpgrading = (\n    <a className=\"inline-link-underline font-weight-bold\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://support.edx.org/hc/en-us/articles/360013426573-What-are-the-differences-between-audit-free-and-verified-paid-courses-\">\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expirationVerifiedCert.benefits\"\n        defaultMessage=\"benefits of upgrading\"\n      />\n    </a>\n  );\n\n  return (\n    <div className=\"upgrade-notification-text\">\n      <p>\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.expirationAccessLoss\"\n          defaultMessage=\"You will lose all access to this course, {includingAnyProgress}, on {date}.\"\n          values={{\n            includingAnyProgress,\n            date,\n          }}\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.expirationVerifiedCert\"\n          defaultMessage=\"Upgrading your course enables you to pursue a verified certificate and unlocks numerous features. Learn more about the {benefitsOfUpgrading}.\"\n          values={{ benefitsOfUpgrading }}\n        />\n      </p>\n    </div>\n  );\n};\n\nUpsellFBESoonCardContent.propTypes = {\n  accessExpirationDate: PropTypes.PropTypes.instanceOf(Date).isRequired,\n  timezoneFormatArgs: PropTypes.shape({\n    timeZone: PropTypes.string,\n  }),\n};\n\nUpsellFBESoonCardContent.defaultProps = {\n  timezoneFormatArgs: {},\n};\n\nconst PastExpirationCardContent = () => (\n  <div className=\"upgrade-notification-text\">\n    <p>\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.pastExpiration.content\"\n        defaultMessage=\"The upgrade deadline for this course passed. To upgrade, enroll in the next available session.\"\n      />\n    </p>\n  </div>\n);\n\nconst ExpirationCountdown = ({\n  courseId, hoursToExpiration, setupgradeNotificationCurrentState, type,\n}) => {\n  let expirationText;\n  if (hoursToExpiration >= 24) { // More than 1 day left\n    // setupgradeNotificationCurrentState is available in NotificationTray (not course home)\n    if (setupgradeNotificationCurrentState) {\n      if (type === 'access') {\n        setupgradeNotificationCurrentState('accessDaysLeft');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'accessDaysLeft');\n      }\n      if (type === 'offer') {\n        setupgradeNotificationCurrentState('FPDdaysLeft');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'FPDdaysLeft');\n      }\n    }\n    expirationText = (\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expirationDays\"\n        defaultMessage={`{dayCount, number} {dayCount, plural, \n          one {day}\n          other {days}} left`}\n        values={{\n          dayCount: (Math.floor(hoursToExpiration / 24)),\n        }}\n      />\n    );\n  } else if (hoursToExpiration >= 1) { // More than 1 hour left\n    // setupgradeNotificationCurrentState is available in NotificationTray (not course home)\n    if (setupgradeNotificationCurrentState) {\n      if (type === 'access') {\n        setupgradeNotificationCurrentState('accessHoursLeft');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'accessHoursLeft');\n      }\n      if (type === 'offer') {\n        setupgradeNotificationCurrentState('FPDHoursLeft');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'FPDHoursLeft');\n      }\n    }\n    expirationText = (\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expirationHours\"\n        defaultMessage={`{hourCount, number} {hourCount, plural,\n          one {hour}\n          other {hours}} left`}\n        values={{\n          hourCount: (hoursToExpiration),\n        }}\n      />\n    );\n  } else { // Less than 1 hour\n    // setupgradeNotificationCurrentState is available in NotificationTray (not course home)\n    if (setupgradeNotificationCurrentState) {\n      if (type === 'access') {\n        setupgradeNotificationCurrentState('accessLastHour');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'accessLastHour');\n      }\n      if (type === 'offer') {\n        setupgradeNotificationCurrentState('FPDLastHour');\n        setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'FPDLastHour');\n      }\n    }\n    expirationText = (\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expirationMinutes\"\n        defaultMessage=\"Less than 1 hour left\"\n      />\n    );\n  }\n  return (<div className=\"upsell-warning\">{expirationText}</div>);\n};\n\nExpirationCountdown.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  hoursToExpiration: PropTypes.number.isRequired,\n  setupgradeNotificationCurrentState: PropTypes.func,\n  type: PropTypes.string,\n};\nExpirationCountdown.defaultProps = {\n  setupgradeNotificationCurrentState: null,\n  type: null,\n};\n\nconst AccessExpirationDateBanner = ({\n  courseId, accessExpirationDate, timezoneFormatArgs, setupgradeNotificationCurrentState,\n}) => {\n  if (setupgradeNotificationCurrentState) {\n    setupgradeNotificationCurrentState('accessDateView');\n    setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'accessDateView');\n  }\n  return (\n    <div className=\"upsell-warning-light\">\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.expiration\"\n        defaultMessage=\"Course access will expire {date}\"\n        values={{\n          date: (\n            <FormattedDate\n              key=\"accessExpireDate\"\n              day=\"numeric\"\n              month=\"long\"\n              value={accessExpirationDate}\n              {...timezoneFormatArgs}\n            />\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nAccessExpirationDateBanner.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  accessExpirationDate: PropTypes.PropTypes.instanceOf(Date).isRequired,\n  timezoneFormatArgs: PropTypes.shape({\n    timeZone: PropTypes.string,\n  }),\n  setupgradeNotificationCurrentState: PropTypes.func,\n};\n\nAccessExpirationDateBanner.defaultProps = {\n  timezoneFormatArgs: {},\n  setupgradeNotificationCurrentState: null,\n};\n\nconst PastExpirationDateBanner = ({\n  courseId, accessExpirationDate, timezoneFormatArgs, setupgradeNotificationCurrentState,\n}) => {\n  if (setupgradeNotificationCurrentState) {\n    setupgradeNotificationCurrentState('PastExpirationDate');\n    setLocalStorage(`upgradeNotificationCurrentState.${courseId}`, 'PastExpirationDate');\n  }\n  return (\n    <div className=\"upsell-warning\">\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.pastExpiration.banner\"\n        defaultMessage=\"Upgrade deadline passed on {date}\"\n        values={{\n          date: (\n            <FormattedDate\n              key=\"accessExpireDate\"\n              day=\"numeric\"\n              month=\"long\"\n              value={accessExpirationDate}\n              {...timezoneFormatArgs}\n            />\n          ),\n        }}\n      />\n    </div>\n  );\n};\n\nPastExpirationDateBanner.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  accessExpirationDate: PropTypes.PropTypes.instanceOf(Date).isRequired,\n  timezoneFormatArgs: PropTypes.shape({\n    timeZone: PropTypes.string,\n  }),\n  setupgradeNotificationCurrentState: PropTypes.func,\n};\n\nPastExpirationDateBanner.defaultProps = {\n  timezoneFormatArgs: {},\n  setupgradeNotificationCurrentState: null,\n};\n\nconst UpgradeNotification = ({\n  accessExpiration,\n  contentTypeGatingEnabled,\n  marketingUrl,\n  courseId,\n  offer,\n  org,\n  setupgradeNotificationCurrentState,\n  shouldDisplayBorder,\n  timeOffsetMillis,\n  upsellPageName,\n  userTimezone,\n  verifiedMode,\n}) => {\n  const dateNow = Date.now();\n  const timezoneFormatArgs = userTimezone ? { timeZone: userTimezone } : {};\n  const correctedTime = new Date(dateNow + timeOffsetMillis);\n  const accessExpirationDate = accessExpiration ? new Date(accessExpiration.expirationDate) : null;\n  const pastExpirationDeadline = accessExpiration ? new Date(dateNow) > accessExpirationDate : false;\n\n  const eventProperties = {\n    org_key: org,\n    courserun_key: courseId,\n  };\n\n  const promotionEventProperties = {\n    creative: 'sidebarupsell',\n    name: 'In-Course Verification Prompt',\n    position: 'sidebar-message',\n    promotion_id: 'courseware_verified_certificate_upsell',\n    ...eventProperties,\n  };\n\n  useEffect(() => {\n    sendTrackingLogEvent('edx.bi.course.upgrade.sidebarupsell.displayed', eventProperties);\n    sendTrackEvent('Promotion Viewed', promotionEventProperties);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!verifiedMode) {\n    return null;\n  }\n\n  const logClick = () => {\n    sendTrackingLogEvent('edx.bi.course.upgrade.sidebarupsell.clicked', eventProperties);\n    sendTrackingLogEvent('edx.course.enrollment.upgrade.clicked', {\n      ...eventProperties,\n      location: 'sidebar-message',\n    });\n    sendTrackEvent('Promotion Clicked', promotionEventProperties);\n    sendTrackEvent('edx.bi.ecommerce.upsell_links_clicked', {\n      ...eventProperties,\n      linkCategory: 'green_upgrade',\n      linkName: `${upsellPageName}_green`,\n      linkType: 'button',\n      pageName: upsellPageName,\n    });\n  };\n\n  const logClickPastExpiration = () => {\n    sendTrackEvent('edx.bi.ecommerce.upgrade_notification.past_expiration.button_clicked', {\n      ...eventProperties,\n      linkCategory: 'upgrade_notification',\n      linkName: `${upsellPageName}_course_details`,\n      linkType: 'button',\n      pageName: upsellPageName,\n    });\n  };\n\n  /*\n  There are 5 parts that change in the upgrade card:\n    upgradeNotificationHeaderText\n    expirationBanner\n    upsellMessage\n    callToActionButton\n    offerCode\n  */\n  let upgradeNotificationHeaderText;\n  let expirationBanner;\n  let upsellMessage;\n  let callToActionButton;\n  let offerCode;\n\n  if (!!accessExpiration && !!contentTypeGatingEnabled) {\n    const hoursToAccessExpiration = Math.floor((accessExpirationDate - correctedTime) / 1000 / 60 / 60);\n\n    if (hoursToAccessExpiration >= (7 * 24)) {\n      if (offer) { // countdown to the first purchase discount if there is one\n        const hoursToDiscountExpiration = Math.floor((new Date(offer.expirationDate) - correctedTime) / 1000 / 60 / 60);\n        upgradeNotificationHeaderText = (\n          <FormattedMessage\n            id=\"learning.generic.upgradeNotification.firstTimeLearnerDiscount\"\n            defaultMessage=\"{percentage}% First-Time Learner Discount\"\n            values={{\n              percentage: (offer.percentage),\n            }}\n          />\n        );\n        expirationBanner = (\n          <ExpirationCountdown\n            courseId={courseId}\n            hoursToExpiration={hoursToDiscountExpiration}\n            setupgradeNotificationCurrentState={setupgradeNotificationCurrentState}\n            type=\"offer\"\n          />\n        );\n      } else {\n        upgradeNotificationHeaderText = (\n          <FormattedMessage\n            id=\"learning.generic.upgradeNotification.accessExpiration\"\n            defaultMessage=\"Upgrade your course today\"\n          />\n        );\n        expirationBanner = (\n          <AccessExpirationDateBanner\n            courseId={courseId}\n            accessExpirationDate={accessExpirationDate}\n            timezoneFormatArgs={timezoneFormatArgs}\n            setupgradeNotificationCurrentState={setupgradeNotificationCurrentState}\n          />\n        );\n      }\n      upsellMessage = <UpsellFBEFarAwayCardContent />;\n    } else if (hoursToAccessExpiration < (7 * 24) && hoursToAccessExpiration >= 0) {\n      // more urgent messaging if there's less than 7 days left to access expiration\n      upgradeNotificationHeaderText = (\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.accessExpirationUrgent\"\n          defaultMessage=\"Course Access Expiration\"\n        />\n      );\n      expirationBanner = (\n        <ExpirationCountdown\n          courseId={courseId}\n          hoursToExpiration={hoursToAccessExpiration}\n          setupgradeNotificationCurrentState={setupgradeNotificationCurrentState}\n          type=\"access\"\n        />\n      );\n      upsellMessage = (\n        <UpsellFBESoonCardContent\n          accessExpirationDate={accessExpirationDate}\n          timezoneFormatArgs={timezoneFormatArgs}\n        />\n      );\n    } else { // access expiration deadline has passed\n      upgradeNotificationHeaderText = (\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.accessExpirationPast\"\n          defaultMessage=\"Course Access Expiration\"\n        />\n      );\n      expirationBanner = (\n        <PastExpirationDateBanner\n          courseId={courseId}\n          accessExpirationDate={accessExpirationDate}\n          timezoneFormatArgs={timezoneFormatArgs}\n          setupgradeNotificationCurrentState={setupgradeNotificationCurrentState}\n        />\n      );\n      upsellMessage = (\n        <PastExpirationCardContent />\n      );\n    }\n  } else { // FBE is turned off\n    upgradeNotificationHeaderText = (\n      <FormattedMessage\n        id=\"learning.generic.upgradeNotification.pursueAverifiedCertificate\"\n        defaultMessage=\"Pursue a verified certificate\"\n      />\n    );\n    upsellMessage = (<UpsellNoFBECardContent />);\n  }\n\n  if (pastExpirationDeadline) {\n    callToActionButton = (\n      <Button\n        variant=\"primary\"\n        onClick={logClickPastExpiration}\n        href={marketingUrl}\n        block\n      >\n        View Course Details\n      </Button>\n    );\n  } else {\n    callToActionButton = (\n      <UpgradeButton\n        offer={offer}\n        onClick={logClick}\n        verifiedMode={verifiedMode}\n        block\n      />\n    );\n  }\n\n  if (offer) { // if there's a first purchase discount, message the code at the bottom\n    offerCode = (\n      <div className=\"text-center discount-info\">\n        <FormattedMessage\n          id=\"learning.generic.upgradeNotification.code\"\n          defaultMessage=\"Use code {code} at checkout\"\n          values={{\n            code: (<span className=\"font-weight-bold\">{offer.code}</span>),\n          }}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <section className={classNames('upgrade-notification small', { 'card mb-4': shouldDisplayBorder })}>\n      <div id=\"courseHome-upgradeNotification\">\n        <h2 className=\"h5 upgrade-notification-header\" id=\"outline-sidebar-upgrade-header\">\n          {upgradeNotificationHeaderText}\n        </h2>\n        {expirationBanner}\n        <div className=\"upgrade-notification-message\">\n          {upsellMessage}\n        </div>\n        <div className=\"upgrade-notification-button\">\n          {callToActionButton}\n        </div>\n        {offerCode}\n      </div>\n    </section>\n  );\n};\n\nUpgradeNotification.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  org: PropTypes.string.isRequired,\n  accessExpiration: PropTypes.shape({\n    expirationDate: PropTypes.string,\n  }),\n  contentTypeGatingEnabled: PropTypes.bool,\n  marketingUrl: PropTypes.string,\n  offer: PropTypes.shape({\n    expirationDate: PropTypes.string,\n    percentage: PropTypes.number,\n    code: PropTypes.string,\n  }),\n  shouldDisplayBorder: PropTypes.bool,\n  setupgradeNotificationCurrentState: PropTypes.func,\n  timeOffsetMillis: PropTypes.number,\n  upsellPageName: PropTypes.string.isRequired,\n  userTimezone: PropTypes.string,\n  verifiedMode: PropTypes.shape({\n    currencySymbol: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    upgradeUrl: PropTypes.string.isRequired,\n  }),\n};\n\nUpgradeNotification.defaultProps = {\n  accessExpiration: null,\n  contentTypeGatingEnabled: false,\n  marketingUrl: null,\n  offer: null,\n  setupgradeNotificationCurrentState: null,\n  shouldDisplayBorder: null,\n  timeOffsetMillis: 0,\n  userTimezone: null,\n  verifiedMode: null,\n};\n\nexport default injectIntl(UpgradeNotification);\n"],"mappings":"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"}