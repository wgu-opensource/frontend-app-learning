{"version":3,"sources":["../../../src/generic/upgrade-button/FormattedPricing.jsx"],"names":["FormattedPricing","props","inline","intl","offer","verifiedMode","currencySymbol","price","discountedPrice","originalPrice","formatMessage","messages","srInlinePrices","srPrices","defaultProps","propTypes","PropTypes","bool","intlShape","isRequired","shape","string","upgradeUrl","number"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAEA,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFJ,KALJ;AAOA,MAAIK,cAAJ;;AACA,MAAID,YAAJ,EAAkB;AAChBC,IAAAA,cAAc,GAAGD,YAAY,CAACC,cAA9B;AACD;;AAED,MAAI,CAACF,KAAL,EAAY;AACV,UAAM;AACJG,MAAAA;AADI,QAEFF,YAFJ;AAGA,WAAQ,GAAEC,cAAe,GAAEC,KAAM,EAAjC;AACD;;AAED,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA;AAFI,MAGFL,KAHJ,CApB+B,CAyB/B;AACA;;AACA,MAAIF,MAAJ,EAAY;AACV,wBACE;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA,kBAAoCM;AAApC,QADF,wBAGE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA,kBACGL,IAAI,CAACO,aAAL,CAAmBC,kBAASC,cAA5B,EAA4C;AAAEH,UAAAA;AAAF,SAA5C;AADH,QAHF,eAME;AAAM,uBAAY,MAAlB;AAAA,+BACE;AAAA,oBAAMA;AAAN;AADF,QANF;AAAA,MADF;AAaD;;AAED,sBACE;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,gBACGN,IAAI,CAACO,aAAL,CAAmBC,kBAASE,QAA5B,EAAsC;AAAEL,QAAAA,eAAF;AAAmBC,QAAAA;AAAnB,OAAtC;AADH,MADF,eAIE;AAAM,qBAAY,MAAlB;AAAA,8BACE;AAAA,kBAAOD;AAAP,QADF,qBACkC;AAAA,kBAAMC;AAAN,QADlC;AAAA,MAJF;AAAA,IADF;AAUD;;AAEDT,gBAAgB,CAACc,YAAjB,GAAgC;AAC9BZ,EAAAA,MAAM,EAAE,KADsB;AAE9BE,EAAAA,KAAK,EAAE,IAFuB;AAG9BC,EAAAA,YAAY,EAAE;AAHgB,CAAhC;AAMAL,gBAAgB,CAACe,SAAjB,GAA6B;AAC3Bb,EAAAA,MAAM,EAAEc,mBAAUC,IADS;AAE3Bd,EAAAA,IAAI,EAAEe,gBAAUC,UAFW;AAG3Bf,EAAAA,KAAK,EAAEY,mBAAUI,KAAV,CAAgB;AACrBZ,IAAAA,eAAe,EAAEQ,mBAAUK,MAAV,CAAiBF,UADb;AAErBV,IAAAA,aAAa,EAAEO,mBAAUK,MAAV,CAAiBF,UAFX;AAGrBG,IAAAA,UAAU,EAAEN,mBAAUK,MAAV,CAAiBF;AAHR,GAAhB,CAHoB;AAQ3Bd,EAAAA,YAAY,EAAEW,mBAAUI,KAAV,CAAgB;AAC5Bd,IAAAA,cAAc,EAAEU,mBAAUK,MAAV,CAAiBF,UADL;AAE5BZ,IAAAA,KAAK,EAAES,mBAAUO,MAAV,CAAiBJ,UAFI;AAG5BG,IAAAA,UAAU,EAAEN,mBAAUK,MAAV,CAAiBF;AAHD,GAAhB;AARa,CAA7B;;eAee,sBAAWnB,gBAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport messages from './messages';\n\nfunction FormattedPricing(props) {\n  const {\n    inline,\n    intl,\n    offer,\n    verifiedMode,\n  } = props;\n\n  let currencySymbol;\n  if (verifiedMode) {\n    currencySymbol = verifiedMode.currencySymbol;\n  }\n\n  if (!offer) {\n    const {\n      price,\n    } = verifiedMode;\n    return `${currencySymbol}${price}`;\n  }\n\n  const {\n    discountedPrice,\n    originalPrice,\n  } = offer;\n\n  // The inline style is meant for being embedded in a sentence - it bolds the discount and leaves the original price\n  // as a parenthetical. The normal styling is more suited for a button, where the price and discount are side by side.\n  if (inline) {\n    return (\n      <>\n        <span className=\"font-weight-bold\">{discountedPrice}</span>\n        &nbsp;(\n        <span className=\"sr-only\">\n          {intl.formatMessage(messages.srInlinePrices, { originalPrice })}\n        </span>\n        <span aria-hidden=\"true\">\n          <del>{originalPrice}</del>\n        </span>\n        )\n      </>\n    );\n  }\n\n  return (\n    <>\n      <span className=\"sr-only\">\n        {intl.formatMessage(messages.srPrices, { discountedPrice, originalPrice })}\n      </span>\n      <span aria-hidden=\"true\">\n        <span>{discountedPrice}</span> (<del>{originalPrice}</del>)\n      </span>\n    </>\n  );\n}\n\nFormattedPricing.defaultProps = {\n  inline: false,\n  offer: null,\n  verifiedMode: null,\n};\n\nFormattedPricing.propTypes = {\n  inline: PropTypes.bool,\n  intl: intlShape.isRequired,\n  offer: PropTypes.shape({\n    discountedPrice: PropTypes.string.isRequired,\n    originalPrice: PropTypes.string.isRequired,\n    upgradeUrl: PropTypes.string.isRequired,\n  }),\n  verifiedMode: PropTypes.shape({\n    currencySymbol: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    upgradeUrl: PropTypes.string.isRequired,\n  }),\n};\n\nexport default injectIntl(FormattedPricing);\n"],"file":"FormattedPricing.js"}