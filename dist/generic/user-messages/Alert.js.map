{"version":3,"sources":["../../../src/generic/user-messages/Alert.jsx"],"names":["getAlertVariant","type","ALERT_TYPES","ERROR","DANGER","SUCCESS","getAlertIcon","WarningFilled","CheckCircle","Info","Alert","dismissible","children","onDismiss","stacked","propTypes","PropTypes","oneOf","INFO","isRequired","bool","node","func","defaultProps","undefined"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAEA,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,UAAQA,IAAR;AACE,SAAKC,kCAAYC,KAAjB;AACE,aAAO,SAAP;;AACF,SAAKD,kCAAYE,MAAjB;AACE,aAAO,QAAP;;AACF,SAAKF,kCAAYG,OAAjB;AACE,aAAO,SAAP;;AACF;AACE,aAAO,MAAP;AARJ;AAUD;;AAED,SAASC,YAAT,CAAsBL,IAAtB,EAA4B;AAC1B,UAAQA,IAAR;AACE,SAAKC,kCAAYC,KAAjB;AACE,aAAOI,oBAAP;;AACF,SAAKL,kCAAYG,OAAjB;AACE,aAAOG,kBAAP;;AACF;AACE,aAAOC,WAAP;AANJ;AAQD;;AAED,SAASC,KAAT,OAEG;AAAA,MAFY;AACbT,IAAAA,IADa;AACPU,IAAAA,WADO;AACMC,IAAAA,QADN;AACgBC,IAAAA,SADhB;AAC2BC,IAAAA;AAD3B,GAEZ;AACD,sBACE,qBAAC,cAAD;AACE,mBAAc,mBAAkBb,IAAK,EADvC;AAEE,IAAA,OAAO,EAAED,eAAe,CAACC,IAAD,CAF1B;AAGE,IAAA,IAAI,EAAEK,YAAY,CAACL,IAAD,CAHpB;AAIE,IAAA,WAAW,EAAEU,WAJf;AAKE,IAAA,OAAO,EAAEE,SALX;AAME,IAAA,OAAO,EAAEC,OANX;AAAA,cAQGF;AARH,IADF;AAYD;;AAEDF,KAAK,CAACK,SAAN,GAAkB;AAChBd,EAAAA,IAAI,EAAEe,mBAAUC,KAAV,CAAgB,CACpBf,kCAAYC,KADQ,EAEpBD,kCAAYE,MAFQ,EAGpBF,kCAAYgB,IAHQ,EAIpBhB,kCAAYG,OAJQ,CAAhB,EAKHc,UANa;AAOhBR,EAAAA,WAAW,EAAEK,mBAAUI,IAPP;AAQhBR,EAAAA,QAAQ,EAAEI,mBAAUK,IARJ;AAShBR,EAAAA,SAAS,EAAEG,mBAAUM,IATL;AAUhBR,EAAAA,OAAO,EAAEE,mBAAUI;AAVH,CAAlB;AAaAV,KAAK,CAACa,YAAN,GAAqB;AACnBZ,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,QAAQ,EAAEY,SAFS;AAGnBX,EAAAA,SAAS,EAAE,IAHQ;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;eAOeJ,K","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert as ParagonAlert } from '@edx/paragon';\nimport { CheckCircle, Info, WarningFilled } from '@edx/paragon/icons';\n\nimport { ALERT_TYPES } from './UserMessagesProvider';\n\nfunction getAlertVariant(type) {\n  switch (type) {\n    case ALERT_TYPES.ERROR:\n      return 'warning';\n    case ALERT_TYPES.DANGER:\n      return 'danger';\n    case ALERT_TYPES.SUCCESS:\n      return 'success';\n    default:\n      return 'info';\n  }\n}\n\nfunction getAlertIcon(type) {\n  switch (type) {\n    case ALERT_TYPES.ERROR:\n      return WarningFilled;\n    case ALERT_TYPES.SUCCESS:\n      return CheckCircle;\n    default:\n      return Info;\n  }\n}\n\nfunction Alert({\n  type, dismissible, children, onDismiss, stacked,\n}) {\n  return (\n    <ParagonAlert\n      data-testid={`alert-container-${type}`}\n      variant={getAlertVariant(type)}\n      icon={getAlertIcon(type)}\n      dismissible={dismissible}\n      onClose={onDismiss}\n      stacked={stacked}\n    >\n      {children}\n    </ParagonAlert>\n  );\n}\n\nAlert.propTypes = {\n  type: PropTypes.oneOf([\n    ALERT_TYPES.ERROR,\n    ALERT_TYPES.DANGER,\n    ALERT_TYPES.INFO,\n    ALERT_TYPES.SUCCESS,\n  ]).isRequired,\n  dismissible: PropTypes.bool,\n  children: PropTypes.node,\n  onDismiss: PropTypes.func,\n  stacked: PropTypes.bool,\n};\n\nAlert.defaultProps = {\n  dismissible: false,\n  children: undefined,\n  onDismiss: null,\n  stacked: false,\n};\n\nexport default Alert;\n"],"file":"Alert.js"}