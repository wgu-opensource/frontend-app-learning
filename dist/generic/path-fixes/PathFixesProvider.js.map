{"version":3,"sources":["../../../src/generic/path-fixes/PathFixesProvider.jsx"],"names":["PathFixesProvider","children","location","pathname","includes","newLocation","replaceAll","new_path","old_path","referrer","document","search","propTypes","PropTypes","node","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,iBAAiB,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC1C,QAAMC,QAAQ,GAAG,kCAAjB,CAD0C,CAG1C;AACA;;AACA,MAAIA,QAAQ,CAACC,QAAT,CAAkBC,QAAlB,CAA2B,GAA3B,CAAJ,EAAqC;AACnC,UAAMC,WAAW,mCACZH,QADY;AAEfC,MAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,CAAkBG,UAAlB,CAA6B,GAA7B,EAAkC,GAAlC;AAFK,MAAjB;;AAKA,mCAAe,uBAAf,EAAwC;AACtCC,MAAAA,QAAQ,EAAEF,WAAW,CAACF,QADgB;AAEtCK,MAAAA,QAAQ,EAAEN,QAAQ,CAACC,QAFmB;AAGtCM,MAAAA,QAAQ,EAAEC,QAAQ,CAACD,QAHmB;AAItCE,MAAAA,MAAM,EAAET,QAAQ,CAACS;AAJqB,KAAxC;AAOA,wBAAQ,qBAAC,wBAAD;AAAU,MAAA,EAAE,EAAEN;AAAd,MAAR;AACD;;AAED,SAAOJ,QAAP,CArB0C,CAqBzB;AAClB,CAtBD;;AAwBAD,iBAAiB,CAACY,SAAlB,GAA8B;AAC5BX,EAAAA,QAAQ,EAAEY,mBAAUC,IAAV,CAAeC;AADG,CAA9B;eAIef,iB","sourcesContent":["import { Redirect, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\n\n/**\n * We have seen evidence of learners hitting MFE pages with spaces instead of plus signs (which are used commonly\n * in our course keys). It's possible something out there is un-escaping our paths before sending learners to them.\n *\n * So this provider fixes those paths up and logs it so that we can try to fix the source.\n *\n * This might be temporary, based on how much we can fix the sources of these urls-with-spaces.\n */\nconst PathFixesProvider = ({ children }) => {\n  const location = useLocation();\n\n  // We only check for spaces. That's not the only kind of character that is escaped in URLs, but it would always be\n  // present for our cases, and I believe it's the only one we use normally.\n  if (location.pathname.includes(' ')) {\n    const newLocation = {\n      ...location,\n      pathname: location.pathname.replaceAll(' ', '+'),\n    };\n\n    sendTrackEvent('edx.ui.lms.path_fixed', {\n      new_path: newLocation.pathname,\n      old_path: location.pathname,\n      referrer: document.referrer,\n      search: location.search,\n    });\n\n    return (<Redirect to={newLocation} />);\n  }\n\n  return children; // pass through\n};\n\nPathFixesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default PathFixesProvider;\n"],"file":"PathFixesProvider.js"}