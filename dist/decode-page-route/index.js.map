{"version":3,"file":"index.js","names":["_propTypes","_interopRequireDefault","require","_react","_react2","_reactRouterDom","_constants","_jsxRuntime","obj","__esModule","default","ROUTES","concat","Object","values","DECODE_ROUTES","map","value","Array","isArray","decodeUrl","encodedUrl","decodedUrl","decodeURIComponent","exports","DecodePageRoute","_ref","children","computedMatch","forEach","route","matchedRoute","useMatch","pathname","pattern","params","keys","param","newUrl","generatePath","path","jsx","Navigate","to","replace","jsxs","PageWrap","propTypes","PropTypes","node","isRequired","_default"],"sources":["../../src/decode-page-route/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { PageWrap } from '@edx/frontend-platform/react';\nimport React from 'react';\nimport {\n  generatePath, useMatch, Navigate,\n} from 'react-router-dom';\n\nimport { DECODE_ROUTES } from '../constants';\n\nconst ROUTES = [].concat(\n  ...Object.values(DECODE_ROUTES).map(value => (Array.isArray(value) ? value : [value])),\n);\n\nexport const decodeUrl = (encodedUrl) => {\n  const decodedUrl = decodeURIComponent(encodedUrl);\n  if (encodedUrl === decodedUrl) {\n    return encodedUrl;\n  }\n  return decodeUrl(decodedUrl);\n};\n\nconst DecodePageRoute = ({ children }) => {\n  let computedMatch = null;\n\n  ROUTES.forEach((route) => {\n    const matchedRoute = useMatch(route);\n    if (matchedRoute) { computedMatch = matchedRoute; }\n  });\n\n  if (computedMatch) {\n    const { pathname, pattern, params } = computedMatch;\n\n    Object.keys(params).forEach((param) => {\n      // only decode params not the entire url.\n      // it is just to be safe and less prone to errors\n      params[param] = decodeUrl(params[param]);\n    });\n\n    const newUrl = generatePath(pattern.path, params);\n\n    // if the url get decoded, reroute to the decoded url\n    if (newUrl !== pathname) {\n      return <Navigate to={newUrl} replace />;\n    }\n  }\n\n  return <PageWrap> {children} </PageWrap>;\n};\n\nDecodePageRoute.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default DecodePageRoute;\n"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AAIA,IAAAI,UAAA,GAAAJ,OAAA;AAA6C,IAAAK,WAAA,GAAAL,OAAA;AAAA,SAAAD,uBAAAO,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE7C,MAAMG,MAAM,GAAG,EAAE,CAACC,MAAM,CACtB,GAAGC,MAAM,CAACC,MAAM,CAACC,wBAAa,CAAC,CAACC,GAAG,CAACC,KAAK,IAAKC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAE,CACvF,CAAC;AAEM,MAAMG,SAAS,GAAIC,UAAU,IAAK;EACvC,MAAMC,UAAU,GAAGC,kBAAkB,CAACF,UAAU,CAAC;EACjD,IAAIA,UAAU,KAAKC,UAAU,EAAE;IAC7B,OAAOD,UAAU;EACnB;EACA,OAAOD,SAAS,CAACE,UAAU,CAAC;AAC9B,CAAC;AAACE,OAAA,CAAAJ,SAAA,GAAAA,SAAA;AAEF,MAAMK,eAAe,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,IAAA;EACnC,IAAIE,aAAa,GAAG,IAAI;EAExBjB,MAAM,CAACkB,OAAO,CAAEC,KAAK,IAAK;IACxB,MAAMC,YAAY,GAAG,IAAAC,wBAAQ,EAACF,KAAK,CAAC;IACpC,IAAIC,YAAY,EAAE;MAAEH,aAAa,GAAGG,YAAY;IAAE;EACpD,CAAC,CAAC;EAEF,IAAIH,aAAa,EAAE;IACjB,MAAM;MAAEK,QAAQ;MAAEC,OAAO;MAAEC;IAAO,CAAC,GAAGP,aAAa;IAEnDf,MAAM,CAACuB,IAAI,CAACD,MAAM,CAAC,CAACN,OAAO,CAAEQ,KAAK,IAAK;MACrC;MACA;MACAF,MAAM,CAACE,KAAK,CAAC,GAAGjB,SAAS,CAACe,MAAM,CAACE,KAAK,CAAC,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMC,MAAM,GAAG,IAAAC,4BAAY,EAACL,OAAO,CAACM,IAAI,EAAEL,MAAM,CAAC;;IAEjD;IACA,IAAIG,MAAM,KAAKL,QAAQ,EAAE;MACvB,oBAAO,IAAA1B,WAAA,CAAAkC,GAAA,EAACpC,eAAA,CAAAqC,QAAQ;QAACC,EAAE,EAAEL,MAAO;QAACM,OAAO;MAAA,CAAE,CAAC;IACzC;EACF;EAEA,oBAAO,IAAArC,WAAA,CAAAsC,IAAA,EAAC1C,MAAA,CAAA2C,QAAQ;IAAAnB,QAAA,GAAC,GAAC,EAACA,QAAQ,EAAC,GAAC;EAAA,CAAU,CAAC;AAC1C,CAAC;AAEDF,eAAe,CAACsB,SAAS,GAAG;EAC1BpB,QAAQ,EAAEqB,kBAAS,CAACC,IAAI,CAACC;AAC3B,CAAC;AAAC,IAAAC,QAAA,GAEa1B,eAAe;AAAAD,OAAA,CAAAd,OAAA,GAAAyC,QAAA"}