{"version":3,"sources":["../../../src/courseware/course/CourseBreadcrumbs.jsx"],"names":["CourseBreadcrumb","content","withSeparator","courseId","sequenceId","unitId","isStaff","defaultContent","filter","destination","default","id","label","sequences","overflow","textOverflow","whiteSpace","ENABLE_JUMPNAV","length","map","item","propTypes","PropTypes","arrayOf","shape","bool","string","isRequired","defaultProps","CourseBreadcrumbs","sectionId","mmp2p","course","courseStatus","state","courseware","sequenceStatus","allSequencesInSections","Object","fromEntries","sectionIds","section","title","sequenceIds","links","chapters","sequentials","entries","forEach","push","sequence","faHome","isEnabled"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { getConfig } from '@edx/frontend-platform';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { useSelector } from 'react-redux';\nimport { SelectMenu } from '@edx/paragon';\nimport { Link } from 'react-router-dom';\nimport { useModel, useModels } from '../../generic/model-store';\n/** [MM-P2P] Experiment */\nimport { MMP2PFlyoverTrigger } from '../../experiments/mm-p2p';\nimport JumpNavMenuItem from './JumpNavMenuItem';\n\nfunction CourseBreadcrumb({\n  content, withSeparator, courseId, sequenceId, unitId, isStaff,\n}) {\n  const defaultContent = content.filter(destination => destination.default)[0] || { id: courseId, label: '', sequences: [] };\n  return (\n    <>\n      {withSeparator && (\n        <li className=\"col-auto p-0 mx-2 text-primary-500 text-truncate text-nowrap\" role=\"presentation\" aria-hidden>/</li>\n      )}\n\n      <li style={{\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      }}\n      >\n        { getConfig().ENABLE_JUMPNAV !== 'true' || content.length < 2 || !isStaff\n          ? (\n            <Link\n              className=\"text-primary-500\"\n              to={defaultContent.sequences.length\n                ? `/course/${courseId}/${defaultContent.sequences[0].id}`\n                : `/course/${courseId}/${defaultContent.id}`}\n            >\n              {defaultContent.label}\n            </Link>\n          )\n          : (\n            <SelectMenu isLink defaultMessage={defaultContent.label}>\n              {content.map(item => (\n                <JumpNavMenuItem\n                  isDefault={item.default}\n                  sequences={item.sequences}\n                  courseId={courseId}\n                  title={item.label}\n                  currentSequence={sequenceId}\n                  currentUnit={unitId}\n                />\n              ))}\n            </SelectMenu>\n          )}\n\n      </li>\n    </>\n  );\n}\nCourseBreadcrumb.propTypes = {\n  content: PropTypes.arrayOf(\n    PropTypes.shape({\n      default: PropTypes.bool,\n      id: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ).isRequired,\n  sequenceId: PropTypes.string,\n  unitId: PropTypes.string,\n  withSeparator: PropTypes.bool,\n  courseId: PropTypes.string,\n  isStaff: PropTypes.bool,\n};\n\nCourseBreadcrumb.defaultProps = {\n  withSeparator: false,\n  sequenceId: null,\n  unitId: null,\n  courseId: null,\n  isStaff: null,\n};\n\nexport default function CourseBreadcrumbs({\n  courseId,\n  sectionId,\n  sequenceId,\n  unitId,\n  isStaff,\n  /** [MM-P2P] Experiment */\n  mmp2p,\n}) {\n  const course = useModel('coursewareMeta', courseId);\n  const courseStatus = useSelector(state => state.courseware.courseStatus);\n  const sequenceStatus = useSelector(state => state.courseware.sequenceStatus);\n\n  const allSequencesInSections = Object.fromEntries(useModels('sections', course.sectionIds).map(section => [section.id, {\n    default: section.id === sectionId,\n    title: section.title,\n    sequences: useModels('sequences', section.sequenceIds),\n  }]));\n\n  const links = useMemo(() => {\n    const chapters = [];\n    const sequentials = [];\n    if (courseStatus === 'loaded' && sequenceStatus === 'loaded') {\n      Object.entries(allSequencesInSections).forEach(([id, section]) => {\n        chapters.push({\n          id,\n          label: section.title,\n          default: section.default,\n          sequences: section.sequences,\n        });\n        if (section.default) {\n          section.sequences.forEach(sequence => {\n            sequentials.push({\n              id: sequence.id,\n              label: sequence.title,\n              default: sequence.id === sequenceId,\n              sequences: [sequence],\n            });\n          });\n        }\n      });\n    }\n    return [chapters, sequentials];\n  }, [courseStatus, sequenceStatus, allSequencesInSections]);\n\n  return (\n    <nav aria-label=\"breadcrumb\" className=\"my-4 d-inline-block col-sm-10\">\n      <ol className=\"list-unstyled d-flex  flex-nowrap align-items-center m-0\">\n        <li className=\"list-unstyled col-auto m-0 p-0\">\n          <Link\n            className=\"flex-shrink-0 text-primary\"\n            to={`/course/${courseId}/home`}\n          >\n            <FontAwesomeIcon icon={faHome} className=\"mr-2\" />\n            <FormattedMessage\n              id=\"learn.breadcrumb.navigation.course.home\"\n              description=\"The course home link in breadcrumbs nav\"\n              defaultMessage=\"Course\"\n            />\n          </Link>\n        </li>\n        {links.map(content => (\n          <CourseBreadcrumb\n            courseId={courseId}\n            sequenceId={sequenceId}\n            content={content}\n            unitId={unitId}\n            withSeparator\n            isStaff={isStaff}\n          />\n        ))}\n        {/** [MM-P2P] Experiment */}\n        {mmp2p.state && mmp2p.state.isEnabled && (\n          <MMP2PFlyoverTrigger options={mmp2p} />\n        )}\n      </ol>\n    </nav>\n  );\n}\n\nCourseBreadcrumbs.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  sectionId: PropTypes.string,\n  sequenceId: PropTypes.string,\n  unitId: PropTypes.string,\n  isStaff: PropTypes.bool,\n  /** [MM-P2P] Experiment */\n  mmp2p: PropTypes.shape({\n    state: PropTypes.shape({\n      isEnabled: PropTypes.bool.isRequired,\n    }),\n  }),\n};\n\nCourseBreadcrumbs.defaultProps = {\n  sectionId: null,\n  sequenceId: null,\n  unitId: null,\n  isStaff: null,\n  /** [MM-P2P] Experiment */\n  mmp2p: {},\n};\n"],"file":"CourseBreadcrumbs.js"}