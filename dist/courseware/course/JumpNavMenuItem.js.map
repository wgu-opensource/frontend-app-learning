{"version":3,"sources":["../../../src/courseware/course/JumpNavMenuItem.jsx"],"names":["JumpNavMenuItem","title","courseId","currentSequence","currentUnit","sequences","isDefault","logEvent","targetUrl","eventName","payload","target_name","id","current_id","widget_placement","destinationUrl","handleClick","url","history","push","sequenceShape","PropTypes","shape","string","isRequired","propTypes","arrayOf","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAKe,SAASA,eAAT,OAOZ;AAAA,MAPqC;AACtCC,IAAAA,KADsC;AAEtCC,IAAAA,QAFsC;AAGtCC,IAAAA,eAHsC;AAItCC,IAAAA,WAJsC;AAKtCC,IAAAA,SALsC;AAMtCC,IAAAA;AANsC,GAOrC;;AACD,WAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC3B,UAAMC,SAAS,GAAG,8BAAlB;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,WAAW,EAAEV,KADC;AAEdW,MAAAA,EAAE,EAAEJ,SAFU;AAGdK,MAAAA,UAAU,EAAEX,QAHE;AAIdY,MAAAA,gBAAgB,EAAE;AAJJ,KAAhB;AAMA,mCAAeL,SAAf,EAA0BC,OAA1B;AACA,yCAAqBD,SAArB,EAAgCC,OAAhC;AACD;;AAED,WAASK,cAAT,GAA0B;AACxB,QAAIT,SAAJ,EAAe;AACb,aAAQ,WAAUJ,QAAS,IAAGC,eAAgB,IAAGC,WAAY,EAA7D;AACD;;AACD,WAAQ,WAAUF,QAAS,IAAGG,SAAS,CAAC,CAAD,CAAT,CAAaO,EAAG,EAA9C;AACD;;AACD,WAASI,WAAT,GAAuB;AACrB,UAAMC,GAAG,GAAGF,cAAc,EAA1B;AACAR,IAAAA,QAAQ,CAACU,GAAD,CAAR;;AACAC,8BAAQC,IAAR,CAAaF,GAAb;AACD;;AAED,sBACE,qBAAC,iBAAD;AACE,IAAA,eAAe,EAAEX,SADnB;AAEE,IAAA,OAAO,EAAE,MAAMU,WAAW,EAF5B;AAAA,cAIGf;AAJH,IADF;AAQD;;AAED,MAAMmB,aAAa,GAAGC,mBAAUC,KAAV,CAAgB;AACpCV,EAAAA,EAAE,EAAES,mBAAUE,MAAV,CAAiBC;AADe,CAAhB,CAAtB;;AAIAxB,eAAe,CAACyB,SAAhB,GAA4B;AAC1BxB,EAAAA,KAAK,EAAEoB,mBAAUE,MAAV,CAAiBC,UADE;AAE1BnB,EAAAA,SAAS,EAAEgB,mBAAUK,OAAV,CAAkBN,aAAlB,EAAiCI,UAFlB;AAG1BlB,EAAAA,SAAS,EAAEe,mBAAUM,IAAV,CAAeH,UAHA;AAI1BtB,EAAAA,QAAQ,EAAEmB,mBAAUE,MAAV,CAAiBC,UAJD;AAK1BrB,EAAAA,eAAe,EAAEkB,mBAAUE,MAAV,CAAiBC,UALR;AAM1BpB,EAAAA,WAAW,EAAEiB,mBAAUE,MAAV,CAAiBC;AANJ,CAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { history } from '@edx/frontend-platform';\nimport { MenuItem } from '@edx/paragon';\n\nimport {\n  sendTrackingLogEvent,\n  sendTrackEvent,\n} from '@edx/frontend-platform/analytics';\n\nexport default function JumpNavMenuItem({\n  title,\n  courseId,\n  currentSequence,\n  currentUnit,\n  sequences,\n  isDefault,\n}) {\n  function logEvent(targetUrl) {\n    const eventName = 'edx.ui.lms.jump_nav.selected';\n    const payload = {\n      target_name: title,\n      id: targetUrl,\n      current_id: courseId,\n      widget_placement: 'breadcrumb',\n    };\n    sendTrackEvent(eventName, payload);\n    sendTrackingLogEvent(eventName, payload);\n  }\n\n  function destinationUrl() {\n    if (isDefault) {\n      return `/course/${courseId}/${currentSequence}/${currentUnit}`;\n    }\n    return `/course/${courseId}/${sequences[0].id}`;\n  }\n  function handleClick() {\n    const url = destinationUrl();\n    logEvent(url);\n    history.push(url);\n  }\n\n  return (\n    <MenuItem\n      defaultSelected={isDefault}\n      onClick={() => handleClick()}\n    >\n      {title}\n    </MenuItem>\n  );\n}\n\nconst sequenceShape = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n});\n\nJumpNavMenuItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  sequences: PropTypes.arrayOf(sequenceShape).isRequired,\n  isDefault: PropTypes.bool.isRequired,\n  courseId: PropTypes.string.isRequired,\n  currentSequence: PropTypes.string.isRequired,\n  currentUnit: PropTypes.string.isRequired,\n};\n"],"file":"JumpNavMenuItem.js"}