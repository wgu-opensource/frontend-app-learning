{"version":3,"file":"useIFrameBehavior.js","names":["_frontendPlatform","require","_react","_interopRequireDefault","_reactRedux","_reactUnitTestUtils","_logging","_data","_thunks","_hooks","_constants","_useLoadBearingHook","obj","__esModule","default","stateKeys","StrictDict","iframeHeight","hasLoaded","showError","windowTopOffset","exports","useIFrameBehavior","_ref","elementId","id","iframeUrl","onLoaded","useLoadBearingHook","dispatch","useDispatch","setIframeHeight","useKeyedState","setHasLoaded","setShowError","setWindowTopOffset","React","useEffect","frame","document","getElementById","hash","window","location","contentWindow","postMessage","hashName","getConfig","LMS_BASE_URL","receiveMessage","useCallback","_ref2","data","type","payload","messageTypes","resize","height","scrollTo","Number","videoFullScreen","open","scrollY","offset","offsetTop","useEventListener","handleIFrameLoad","logError","onmessage","e","event_name","processEvent","fetchCourse","_default"],"sources":["../../../../../../src/courseware/course/sequence/Unit/hooks/useIFrameBehavior.js"],"sourcesContent":["import { getConfig } from '@edx/frontend-platform';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { StrictDict, useKeyedState } from '@edx/react-unit-test-utils';\nimport { logError } from '@edx/frontend-platform/logging';\n\nimport { fetchCourse } from '../../../../data';\nimport { processEvent } from '../../../../../course-home/data/thunks';\nimport { useEventListener } from '../../../../../generic/hooks';\nimport { messageTypes } from '../constants';\n\nimport useLoadBearingHook from './useLoadBearingHook';\n\nexport const stateKeys = StrictDict({\n  iframeHeight: 'iframeHeight',\n  hasLoaded: 'hasLoaded',\n  showError: 'showError',\n  windowTopOffset: 'windowTopOffset',\n});\n\nconst useIFrameBehavior = ({\n  elementId,\n  id,\n  iframeUrl,\n  onLoaded,\n}) => {\n  // Do not remove this hook.  See function description.\n  useLoadBearingHook(id);\n\n  const dispatch = useDispatch();\n\n  const [iframeHeight, setIframeHeight] = useKeyedState(stateKeys.iframeHeight, 0);\n  const [hasLoaded, setHasLoaded] = useKeyedState(stateKeys.hasLoaded, false);\n  const [showError, setShowError] = useKeyedState(stateKeys.showError, false);\n  const [windowTopOffset, setWindowTopOffset] = useKeyedState(stateKeys.windowTopOffset, null);\n\n  React.useEffect(() => {\n    const frame = document.getElementById(elementId);\n    const { hash } = window.location;\n    if (hash) {\n      // The url hash will be sent to LMS-served iframe in order to find the location of the\n      // hash within the iframe.\n      frame.contentWindow.postMessage({ hashName: hash }, `${getConfig().LMS_BASE_URL}`);\n    }\n  }, [id, onLoaded, iframeHeight, hasLoaded]);\n\n  const receiveMessage = React.useCallback(({ data }) => {\n    const { type, payload } = data;\n    if (type === messageTypes.resize) {\n      setIframeHeight(payload.height);\n\n      // We observe exit from the video xblock fullscreen mode\n      // and scroll to the previously saved scroll position\n      if (windowTopOffset !== null) {\n        window.scrollTo(0, Number(windowTopOffset));\n      }\n\n      if (!hasLoaded && iframeHeight === 0 && payload.height > 0) {\n        setHasLoaded(true);\n        if (onLoaded) {\n          onLoaded();\n        }\n      }\n    } else if (type === messageTypes.videoFullScreen) {\n      // We listen for this message from LMS to know when we need to\n      // save or reset scroll position on toggle video xblock fullscreen mode\n      setWindowTopOffset(payload.open ? window.scrollY : null);\n    } else if (data.offset) {\n      // We listen for this message from LMS to know when the page needs to\n      // be scrolled to another location on the page.\n      window.scrollTo(0, data.offset + document.getElementById('unit-iframe').offsetTop);\n    }\n  }, [\n    id,\n    onLoaded,\n    hasLoaded,\n    setHasLoaded,\n    iframeHeight,\n    setIframeHeight,\n    windowTopOffset,\n    setWindowTopOffset,\n  ]);\n\n  useEventListener('message', receiveMessage);\n\n  /**\n  * onLoad *should* only fire after everything in the iframe has finished its own load events.\n  * Which means that the plugin.resize message (which calls setHasLoaded above) will have fired already\n  * for a successful load. If it *has not fired*, we are in an error state. For example, the backend\n  * could have given us a 4xx or 5xx response.\n  */\n\n  const handleIFrameLoad = () => {\n    if (!hasLoaded) {\n      setShowError(true);\n      logError('Unit iframe failed to load. Server possibly returned 4xx or 5xx response.', {\n        iframeUrl,\n      });\n    }\n    window.onmessage = (e) => {\n      if (e.data.event_name) {\n        dispatch(processEvent(e.data, fetchCourse));\n      }\n    };\n  };\n\n  return {\n    iframeHeight,\n    handleIFrameLoad,\n    showError,\n    hasLoaded,\n  };\n};\n\nexport default useIFrameBehavior;\n"],"mappings":"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"}