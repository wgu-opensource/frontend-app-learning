{"version":3,"file":"useLoadBearingHook.js","names":["_react","_interopRequireDefault","require","obj","__esModule","default","useLoadBearingHook","id","setValue","React","useState","useLayoutEffect","currentValue","_default","exports"],"sources":["../../../../../../src/courseware/course/sequence/Unit/hooks/useLoadBearingHook.js"],"sourcesContent":["import React from 'react';\n\n/**\n * We discovered an error in Firefox where - upon iframe load - React would cease to call any\n * useEffect hooks until the user interacts with the page again.  This is particularly confusing\n * when navigating between sequences, as the UI partially updates leaving the user in a nebulous\n * state.\n *\n * We were able to solve this error by using a layout effect to update some component state, which\n * executes synchronously on render.  Somehow this forces React to continue it's lifecycle\n * immediately, rather than waiting for user interaction.  This layout effect could be anywhere in\n * the parent tree, as far as we can tell - we chose to add a conspicuously 'load bearing' (that's\n * a joke) one here so it wouldn't be accidentally removed elsewhere.\n *\n * If we remove this hook when one of these happens:\n * 1. React figures out that there's an issue here and fixes a bug.\n * 2. We cease to use an iframe for unit rendering.\n * 3. Firefox figures out that there's an issue in their iframe loading and fixes a bug.\n * 4. We stop supporting Firefox.\n * 5. An enterprising engineer decides to create a repo that reproduces the problem, submits it to\n *    Firefox/React for review, and they kindly help us figure out what in the world is happening\n *    so  we can fix it.\n *\n * This hook depends on the unit id just to make sure it re-evaluates whenever the ID changes.  If\n * we change whether or not the Unit component is re-mounted when the unit ID changes, this may\n * become important, as this hook will otherwise only evaluate the useLayoutEffect once.\n */\nconst useLoadBearingHook = (id) => {\n  const setValue = React.useState(0)[1];\n  React.useLayoutEffect(() => {\n    setValue(currentValue => currentValue + 1);\n  }, [id]);\n};\n\nexport default useLoadBearingHook;\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA0B,SAAAD,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,kBAAkB,GAAIC,EAAE,IAAK;EACjC,MAAMC,QAAQ,GAAGC,cAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrCD,cAAK,CAACE,eAAe,CAAC,MAAM;IAC1BH,QAAQ,CAACI,YAAY,IAAIA,YAAY,GAAG,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;AACV,CAAC;AAAC,IAAAM,QAAA,GAEaP,kBAAkB;AAAAQ,OAAA,CAAAT,OAAA,GAAAQ,QAAA"}