{"version":3,"file":"useExamAccess.test.js","names":["_react","_interopRequireDefault","require","_logging","_reactUnitTestUtils","_frontendLibSpecialExams","_lodash","_setupTest","_useExamAccess","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","getEffect","prereqs","calls","React","useEffect","mock","match","isEqual","jest","requireActual","fn","logError","getExamAccess","fetchExamAccess","isExam","state","mockUseKeyedState","stateKeys","id","mockFetchExamAccess","Promise","resolve","mockReturnValue","testAccessToken","describe","beforeEach","clearAllMocks","it","useExamAccess","expectInitializedWith","accessToken","blockAccess","mockReturnValueOnce","useEffectCb","expect","not","toHaveBeenCalled","waitFor","expectSetStateCalledWith","testError","reject","toHaveBeenCalledWith","testBlockAccess","mockVals","out","toEqual","resetVals"],"sources":["../../../../../../src/courseware/course/sequence/Unit/hooks/useExamAccess.test.js"],"sourcesContent":["import React from 'react';\nimport { logError } from '@edx/frontend-platform/logging';\nimport { mockUseKeyedState } from '@edx/react-unit-test-utils';\nimport { getExamAccess, fetchExamAccess, isExam } from '@edx/frontend-lib-special-exams';\nimport { isEqual } from 'lodash';\n\nimport { waitFor } from '../../../../../setupTest';\nimport useExamAccess, { stateKeys } from './useExamAccess';\n\nconst getEffect = (prereqs) => {\n  const { calls } = React.useEffect.mock;\n  const match = calls.filter(call => isEqual(call[1], prereqs));\n  return match.length ? match[0][0] : null;\n};\n\njest.mock('react', () => ({\n  ...jest.requireActual('react'),\n  useEffect: jest.fn(),\n}));\njest.mock('@edx/frontend-platform/logging', () => ({\n  logError: jest.fn(),\n}));\njest.mock('@edx/frontend-lib-special-exams', () => ({\n  getExamAccess: jest.fn(),\n  fetchExamAccess: jest.fn(),\n  isExam: jest.fn(() => false),\n}));\n\nconst state = mockUseKeyedState(stateKeys);\n\nconst id = 'test-id';\n\nconst mockFetchExamAccess = Promise.resolve();\nfetchExamAccess.mockReturnValue(mockFetchExamAccess);\n\nconst testAccessToken = 'test-access-token';\ngetExamAccess.mockReturnValue(testAccessToken);\n\ndescribe('useExamAccess hook', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    state.mock();\n  });\n  describe('behavior', () => {\n    it('initializes access token to empty string', () => {\n      useExamAccess({ id });\n      state.expectInitializedWith(stateKeys.accessToken, '');\n    });\n    it('initializes blockAccess to true if is an exam', () => {\n      useExamAccess({ id });\n      state.expectInitializedWith(stateKeys.blockAccess, false);\n    });\n    it('initializes blockAccess to false if is not an exam', () => {\n      isExam.mockReturnValueOnce(true);\n      useExamAccess({ id });\n      state.expectInitializedWith(stateKeys.blockAccess, true);\n    });\n    describe('effects - on id change', () => {\n      let useEffectCb;\n      beforeEach(() => {\n        useExamAccess({ id });\n        useEffectCb = getEffect([id], React);\n      });\n      it('does not call fetchExamAccess if not an exam', () => {\n        useEffectCb();\n        expect(fetchExamAccess).not.toHaveBeenCalled();\n      });\n      it('fetches and sets exam access if isExam', async () => {\n        isExam.mockReturnValueOnce(true);\n        useEffectCb();\n        await waitFor(() => expect(fetchExamAccess).toHaveBeenCalled());\n        state.expectSetStateCalledWith(stateKeys.accessToken, testAccessToken);\n        state.expectSetStateCalledWith(stateKeys.blockAccess, false);\n      });\n      const testError = 'test-error';\n      it('logs error if fetchExamAccess fails', async () => {\n        isExam.mockReturnValueOnce(true);\n        fetchExamAccess.mockReturnValueOnce(Promise.reject(testError));\n        useEffectCb();\n        await waitFor(() => expect(fetchExamAccess).toHaveBeenCalled());\n        expect(logError).toHaveBeenCalledWith(testError);\n      });\n    });\n  });\n  describe('output', () => {\n    it('forwards blockAccess and accessToken from state fields', () => {\n      const testBlockAccess = 'test-block-access';\n      state.mockVals({\n        blockAccess: testBlockAccess,\n        accessToken: testAccessToken,\n      });\n      const out = useExamAccess({ id });\n      expect(out.blockAccess).toEqual(testBlockAccess);\n      expect(out.accessToken).toEqual(testAccessToken);\n      state.resetVals();\n    });\n  });\n});\n"],"mappings":"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"}