{"version":3,"sources":["../../../../../src/courseware/course/sequence/sequence-navigation/SequenceNavigationTabs.jsx"],"names":["SequenceNavigationTabs","unitIds","unitId","showCompletion","onNavigate","indexOfLastVisibleChild","containerRef","invisibleStyle","shouldDisplayDropdown","flexBasis","minWidth","map","buttonUnitId","propTypes","PropTypes","string","isRequired","func","bool","arrayOf"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEe,SAASA,sBAAT,OAEZ;AAAA,MAF4C;AAC7CC,IAAAA,OAD6C;AACpCC,IAAAA,MADoC;AAC5BC,IAAAA,cAD4B;AACZC,IAAAA;AADY,GAE5C;AACD,QAAM,CACJC,uBADI,EAEJC,YAFI,EAGJC,cAHI,IAIF,0CAJJ;AAKA,QAAMC,qBAAqB,GAAGH,uBAAuB,KAAK,CAAC,CAA3D;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAAZ;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAoD,MAAA,GAAG,EAAEJ,YAAzD;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,6CADZ;AAEE,QAAA,KAAK,EAAEE,qBAAqB,GAAGD,cAAH,GAAoB,IAFlD;AAAA,kBAIGN,OAAO,CAACU,GAAR,CAAYC,YAAY,iBACvB,qBAAC,mBAAD;AAEE,UAAA,MAAM,EAAEA,YAFV;AAGE,UAAA,QAAQ,EAAEV,MAAM,KAAKU,YAHvB;AAIE,UAAA,cAAc,EAAET,cAJlB;AAKE,UAAA,OAAO,EAAEC;AALX,WACOQ,YADP,CADD;AAJH;AADF,MADF,EAiBGJ,qBAAqB,iBACpB,qBAAC,mCAAD;AACE,MAAA,MAAM,EAAEN,MADV;AAEE,MAAA,UAAU,EAAEE,UAFd;AAGE,MAAA,cAAc,EAAED,cAHlB;AAIE,MAAA,OAAO,EAAEF;AAJX,MAlBJ;AAAA,IADF;AA4BD;;AAEDD,sBAAsB,CAACa,SAAvB,GAAmC;AACjCX,EAAAA,MAAM,EAAEY,mBAAUC,MAAV,CAAiBC,UADQ;AAEjCZ,EAAAA,UAAU,EAAEU,mBAAUG,IAAV,CAAeD,UAFM;AAGjCb,EAAAA,cAAc,EAAEW,mBAAUI,IAAV,CAAeF,UAHE;AAIjCf,EAAAA,OAAO,EAAEa,mBAAUK,OAAV,CAAkBL,mBAAUC,MAA5B,EAAoCC;AAJZ,CAAnC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport UnitButton from './UnitButton';\nimport SequenceNavigationDropdown from './SequenceNavigationDropdown';\nimport useIndexOfLastVisibleChild from '../../../../generic/tabs/useIndexOfLastVisibleChild';\n\nexport default function SequenceNavigationTabs({\n  unitIds, unitId, showCompletion, onNavigate,\n}) {\n  const [\n    indexOfLastVisibleChild,\n    containerRef,\n    invisibleStyle,\n  ] = useIndexOfLastVisibleChild();\n  const shouldDisplayDropdown = indexOfLastVisibleChild === -1;\n\n  return (\n    <div style={{ flexBasis: '100%', minWidth: 0 }}>\n      <div className=\"sequence-navigation-tabs-container\" ref={containerRef}>\n        <div\n          className=\"sequence-navigation-tabs d-flex flex-grow-1\"\n          style={shouldDisplayDropdown ? invisibleStyle : null}\n        >\n          {unitIds.map(buttonUnitId => (\n            <UnitButton\n              key={buttonUnitId}\n              unitId={buttonUnitId}\n              isActive={unitId === buttonUnitId}\n              showCompletion={showCompletion}\n              onClick={onNavigate}\n            />\n          ))}\n        </div>\n      </div>\n      {shouldDisplayDropdown && (\n        <SequenceNavigationDropdown\n          unitId={unitId}\n          onNavigate={onNavigate}\n          showCompletion={showCompletion}\n          unitIds={unitIds}\n        />\n      )}\n    </div>\n  );\n}\n\nSequenceNavigationTabs.propTypes = {\n  unitId: PropTypes.string.isRequired,\n  onNavigate: PropTypes.func.isRequired,\n  showCompletion: PropTypes.bool.isRequired,\n  unitIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n"],"file":"SequenceNavigationTabs.js"}