{"version":3,"sources":["../../../../../src/courseware/course/sequence/sequence-navigation/UnitButton.jsx"],"names":["UnitButton","onClick","title","contentType","isActive","bookmarked","complete","showCompletion","unitId","className","showTitle","handleClick","active","top","right","propTypes","PropTypes","bool","string","isRequired","func","defaultProps","undefined","mapStateToProps","state","props","models","units"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,SAASA,UAAT,OAWG;AAAA,MAXiB;AAClBC,IAAAA,OADkB;AAElBC,IAAAA,KAFkB;AAGlBC,IAAAA,WAHkB;AAIlBC,IAAAA,QAJkB;AAKlBC,IAAAA,UALkB;AAMlBC,IAAAA,QANkB;AAOlBC,IAAAA,cAPkB;AAQlBC,IAAAA,MARkB;AASlBC,IAAAA,SATkB;AAUlBC,IAAAA;AAVkB,GAWjB;AACD,QAAMC,WAAW,GAAG,wBAAY,MAAM;AACpCV,IAAAA,OAAO,CAACO,MAAD,CAAP;AACD,GAFmB,CAApB;AAIA,sBACE,sBAAC,eAAD;AACE,IAAA,SAAS,EAAE,yBAAW;AACpBI,MAAAA,MAAM,EAAER,QADY;AAEpBE,MAAAA,QAAQ,EAAEC,cAAc,IAAID;AAFR,KAAX,EAGRG,SAHQ,CADb;AAKE,IAAA,OAAO,EAAC,MALV;AAME,IAAA,OAAO,EAAEE,WANX;AAOE,IAAA,KAAK,EAAET,KAPT;AAAA,4BASE,qBAAC,iBAAD;AAAU,MAAA,IAAI,EAAEC;AAAhB,MATF,EAUGO,SAAS,iBAAI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,gBAA8BR;AAA9B,MAVhB,EAWGK,cAAc,IAAID,QAAlB,gBAA6B,qBAAC,qBAAD;AAAc,MAAA,IAAI,EAAC,IAAnB;AAAwB,MAAA,SAAS,EAAC;AAAlC,MAA7B,GAAwF,IAX3F,EAYGD,UAAU,gBACT,qBAAC,2BAAD;AACE,MAAA,SAAS,EAAC,sCADZ;AAEE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,GAAG,EAAE,MAAP;AAAeC,QAAAA,KAAK,EAAE;AAAtB;AAFT,MADS,GAKP,IAjBN;AAAA,IADF;AAqBD;;AAEDd,UAAU,CAACe,SAAX,GAAuB;AACrBV,EAAAA,UAAU,EAAEW,mBAAUC,IADD;AAErBR,EAAAA,SAAS,EAAEO,mBAAUE,MAFA;AAGrBZ,EAAAA,QAAQ,EAAEU,mBAAUC,IAHC;AAIrBd,EAAAA,WAAW,EAAEa,mBAAUE,MAAV,CAAiBC,UAJT;AAKrBf,EAAAA,QAAQ,EAAEY,mBAAUC,IALC;AAMrBhB,EAAAA,OAAO,EAAEe,mBAAUI,IAAV,CAAeD,UANH;AAOrBZ,EAAAA,cAAc,EAAES,mBAAUC,IAPL;AAQrBP,EAAAA,SAAS,EAAEM,mBAAUC,IARA;AASrBf,EAAAA,KAAK,EAAEc,mBAAUE,MAAV,CAAiBC,UATH;AAUrBX,EAAAA,MAAM,EAAEQ,mBAAUE,MAAV,CAAiBC;AAVJ,CAAvB;AAaAnB,UAAU,CAACqB,YAAX,GAA0B;AACxBZ,EAAAA,SAAS,EAAEa,SADa;AAExBlB,EAAAA,QAAQ,EAAE,KAFc;AAGxBC,EAAAA,UAAU,EAAE,KAHY;AAIxBC,EAAAA,QAAQ,EAAE,KAJc;AAKxBI,EAAAA,SAAS,EAAE,KALa;AAMxBH,EAAAA,cAAc,EAAE;AANQ,CAA1B;;AASA,MAAMgB,eAAe,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACxC,MAAIA,KAAK,CAACjB,MAAV,EAAkB;AAChB,6BACKgB,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBF,KAAK,CAACjB,MAAzB,CADL;AAGD;;AACD,SAAO,EAAP;AACD,CAPD;;eASe,yBAAQe,eAAR,EAAyBvB,UAAzB,C","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { Button } from '@edx/paragon';\n\nimport UnitIcon from './UnitIcon';\nimport CompleteIcon from './CompleteIcon';\nimport BookmarkFilledIcon from '../../bookmark/BookmarkFilledIcon';\n\nfunction UnitButton({\n  onClick,\n  title,\n  contentType,\n  isActive,\n  bookmarked,\n  complete,\n  showCompletion,\n  unitId,\n  className,\n  showTitle,\n}) {\n  const handleClick = useCallback(() => {\n    onClick(unitId);\n  });\n\n  return (\n    <Button\n      className={classNames({\n        active: isActive,\n        complete: showCompletion && complete,\n      }, className)}\n      variant=\"link\"\n      onClick={handleClick}\n      title={title}\n    >\n      <UnitIcon type={contentType} />\n      {showTitle && <span className=\"unit-title\">{title}</span>}\n      {showCompletion && complete ? <CompleteIcon size=\"sm\" className=\"text-success ml-2\" /> : null}\n      {bookmarked ? (\n        <BookmarkFilledIcon\n          className=\"text-primary small position-absolute\"\n          style={{ top: '-3px', right: '5px' }}\n        />\n      ) : null}\n    </Button>\n  );\n}\n\nUnitButton.propTypes = {\n  bookmarked: PropTypes.bool,\n  className: PropTypes.string,\n  complete: PropTypes.bool,\n  contentType: PropTypes.string.isRequired,\n  isActive: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  showCompletion: PropTypes.bool,\n  showTitle: PropTypes.bool,\n  title: PropTypes.string.isRequired,\n  unitId: PropTypes.string.isRequired,\n};\n\nUnitButton.defaultProps = {\n  className: undefined,\n  isActive: false,\n  bookmarked: false,\n  complete: false,\n  showTitle: false,\n  showCompletion: true,\n};\n\nconst mapStateToProps = (state, props) => {\n  if (props.unitId) {\n    return {\n      ...state.models.units[props.unitId],\n    };\n  }\n  return {};\n};\n\nexport default connect(mapStateToProps)(UnitButton);\n"],"file":"UnitButton.js"}