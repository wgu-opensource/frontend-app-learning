{"version":3,"file":"SequenceNavigation.js","names":["_react","_interopRequireDefault","require","_reactRouterDom","_propTypes","_paragon","_icons","_classnames","_i18n","_reactRedux","_courseExit","_UnitButton","_SequenceNavigationTabs","_hooks","_modelStore","_slice","_messages","_jsxRuntime","obj","__esModule","default","SequenceNavigation","_ref","intl","unitId","sequenceId","className","onNavigate","nextHandler","previousHandler","sequence","useModel","isFirstUnit","isLastUnit","nextLink","previousLink","useSequenceNavigationMetadata","courseId","sequenceStatus","useSelector","state","courseware","isLocked","LOADED","gatedContent","undefined","gated","shouldDisplayNotificationTriggerInSequence","useWindowSize","width","breakpoints","small","minWidth","renderUnitButtons","jsx","title","contentType","isActive","onClick","unitIds","length","style","flexBasis","borderBottom","showCompletion","renderPreviousButton","disabled","prevArrow","isRtl","getLocale","ChevronRight","ChevronLeft","Button","variant","iconBefore","as","Link","to","children","formatMessage","messages","previousButton","renderNextButton","exitActive","exitText","GetCourseExitNavigation","buttonText","nextButton","nextArrow","iconAfter","jsxs","id","classNames","propTypes","intlShape","isRequired","PropTypes","string","func","defaultProps","_default","injectIntl","exports"],"sources":["../../../../../src/courseware/course/sequence/sequence-navigation/SequenceNavigation.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { breakpoints, Button, useWindowSize } from '@edx/paragon';\nimport { ChevronLeft, ChevronRight } from '@edx/paragon/icons';\nimport classNames from 'classnames';\nimport {\n  injectIntl,\n  intlShape,\n  isRtl,\n  getLocale,\n} from '@edx/frontend-platform/i18n';\n\nimport { useSelector } from 'react-redux';\nimport { GetCourseExitNavigation } from '../../course-exit';\nimport UnitButton from './UnitButton';\nimport SequenceNavigationTabs from './SequenceNavigationTabs';\nimport { useSequenceNavigationMetadata } from './hooks';\nimport { useModel } from '../../../../generic/model-store';\nimport { LOADED } from '../../../data/slice';\n\nimport messages from './messages';\n\nconst SequenceNavigation = ({\n  intl,\n  unitId,\n  sequenceId,\n  className,\n  onNavigate,\n  nextHandler,\n  previousHandler,\n}) => {\n  const sequence = useModel('sequences', sequenceId);\n  const {\n    isFirstUnit, isLastUnit, nextLink, previousLink,\n  } = useSequenceNavigationMetadata(sequenceId, unitId);\n  const {\n    courseId,\n    sequenceStatus,\n  } = useSelector(state => state.courseware);\n  const isLocked = sequenceStatus === LOADED ? (\n    sequence.gatedContent !== undefined && sequence.gatedContent.gated\n  ) : undefined;\n\n  const shouldDisplayNotificationTriggerInSequence = useWindowSize().width < breakpoints.small.minWidth;\n\n  const renderUnitButtons = () => {\n    if (isLocked) {\n      return (\n        <UnitButton unitId={unitId} title=\"\" contentType=\"lock\" isActive onClick={() => {}} />\n      );\n    }\n    if (sequence.unitIds.length === 0 || unitId === null) {\n      return (\n        <div style={{ flexBasis: '100%', minWidth: 0, borderBottom: 'solid 1px #EAEAEA' }} />\n      );\n    }\n    return (\n      <SequenceNavigationTabs\n        unitIds={sequence.unitIds}\n        unitId={unitId}\n        showCompletion={sequence.showCompletion}\n        onNavigate={onNavigate}\n      />\n    );\n  };\n\n  const renderPreviousButton = () => {\n    const disabled = isFirstUnit;\n    const prevArrow = isRtl(getLocale()) ? ChevronRight : ChevronLeft;\n\n    return (\n      <Button\n        variant=\"link\"\n        className=\"previous-btn\"\n        onClick={previousHandler}\n        disabled={disabled}\n        iconBefore={prevArrow}\n        as={disabled ? undefined : Link}\n        to={disabled ? undefined : previousLink}\n      >\n        {shouldDisplayNotificationTriggerInSequence ? null : intl.formatMessage(messages.previousButton)}\n      </Button>\n    );\n  };\n\n  const renderNextButton = () => {\n    const { exitActive, exitText } = GetCourseExitNavigation(courseId, intl);\n    const buttonText = (isLastUnit && exitText) ? exitText : intl.formatMessage(messages.nextButton);\n    const disabled = isLastUnit && !exitActive;\n    const nextArrow = isRtl(getLocale()) ? ChevronLeft : ChevronRight;\n\n    return (\n      <Button\n        variant=\"link\"\n        className=\"next-btn\"\n        onClick={nextHandler}\n        disabled={disabled}\n        iconAfter={nextArrow}\n        as={disabled ? undefined : Link}\n        to={disabled ? undefined : nextLink}\n      >\n        {shouldDisplayNotificationTriggerInSequence ? null : buttonText}\n      </Button>\n    );\n  };\n\n  return sequenceStatus === LOADED && (\n    <nav id=\"courseware-sequenceNavigation\" className={classNames('sequence-navigation', className, { 'mr-2': shouldDisplayNotificationTriggerInSequence })}>\n      {renderPreviousButton()}\n      {renderUnitButtons()}\n      {renderNextButton()}\n    </nav>\n  );\n};\n\nSequenceNavigation.propTypes = {\n  intl: intlShape.isRequired,\n  sequenceId: PropTypes.string.isRequired,\n  unitId: PropTypes.string,\n  className: PropTypes.string,\n  onNavigate: PropTypes.func.isRequired,\n  nextHandler: PropTypes.func.isRequired,\n  previousHandler: PropTypes.func.isRequired,\n};\n\nSequenceNavigation.defaultProps = {\n  className: null,\n  unitId: null,\n};\n\nexport default injectIntl(SequenceNavigation);\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AACA,IAAAE,UAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AACA,IAAAI,MAAA,GAAAJ,OAAA;AACA,IAAAK,WAAA,GAAAN,sBAAA,CAAAC,OAAA;AACA,IAAAM,KAAA,GAAAN,OAAA;AAOA,IAAAO,WAAA,GAAAP,OAAA;AACA,IAAAQ,WAAA,GAAAR,OAAA;AACA,IAAAS,WAAA,GAAAV,sBAAA,CAAAC,OAAA;AACA,IAAAU,uBAAA,GAAAX,sBAAA,CAAAC,OAAA;AACA,IAAAW,MAAA,GAAAX,OAAA;AACA,IAAAY,WAAA,GAAAZ,OAAA;AACA,IAAAa,MAAA,GAAAb,OAAA;AAEA,IAAAc,SAAA,GAAAf,sBAAA,CAAAC,OAAA;AAAkC,IAAAe,WAAA,GAAAf,OAAA;AAAA,SAAAD,uBAAAiB,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAElC,MAAMG,kBAAkB,GAAGC,IAAA,IAQrB;EAAA,IARsB;IAC1BC,IAAI;IACJC,MAAM;IACNC,UAAU;IACVC,SAAS;IACTC,UAAU;IACVC,WAAW;IACXC;EACF,CAAC,GAAAP,IAAA;EACC,MAAMQ,QAAQ,GAAG,IAAAC,oBAAQ,EAAC,WAAW,EAAEN,UAAU,CAAC;EAClD,MAAM;IACJO,WAAW;IAAEC,UAAU;IAAEC,QAAQ;IAAEC;EACrC,CAAC,GAAG,IAAAC,oCAA6B,EAACX,UAAU,EAAED,MAAM,CAAC;EACrD,MAAM;IACJa,QAAQ;IACRC;EACF,CAAC,GAAG,IAAAC,uBAAW,EAACC,KAAK,IAAIA,KAAK,CAACC,UAAU,CAAC;EAC1C,MAAMC,QAAQ,GAAGJ,cAAc,KAAKK,aAAM,GACxCb,QAAQ,CAACc,YAAY,KAAKC,SAAS,IAAIf,QAAQ,CAACc,YAAY,CAACE,KAAK,GAChED,SAAS;EAEb,MAAME,0CAA0C,GAAG,IAAAC,sBAAa,EAAC,CAAC,CAACC,KAAK,GAAGC,oBAAW,CAACC,KAAK,CAACC,QAAQ;EAErG,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIX,QAAQ,EAAE;MACZ,oBACE,IAAAzB,WAAA,CAAAqC,GAAA,EAAC3C,WAAA,CAAAS,OAAU;QAACI,MAAM,EAAEA,MAAO;QAAC+B,KAAK,EAAC,EAAE;QAACC,WAAW,EAAC,MAAM;QAACC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAM,CAAC;MAAE,CAAE,CAAC;IAE1F;IACA,IAAI5B,QAAQ,CAAC6B,OAAO,CAACC,MAAM,KAAK,CAAC,IAAIpC,MAAM,KAAK,IAAI,EAAE;MACpD,oBACE,IAAAP,WAAA,CAAAqC,GAAA;QAAKO,KAAK,EAAE;UAAEC,SAAS,EAAE,MAAM;UAAEV,QAAQ,EAAE,CAAC;UAAEW,YAAY,EAAE;QAAoB;MAAE,CAAE,CAAC;IAEzF;IACA,oBACE,IAAA9C,WAAA,CAAAqC,GAAA,EAAC1C,uBAAA,CAAAQ,OAAsB;MACrBuC,OAAO,EAAE7B,QAAQ,CAAC6B,OAAQ;MAC1BnC,MAAM,EAAEA,MAAO;MACfwC,cAAc,EAAElC,QAAQ,CAACkC,cAAe;MACxCrC,UAAU,EAAEA;IAAW,CACxB,CAAC;EAEN,CAAC;EAED,MAAMsC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,QAAQ,GAAGlC,WAAW;IAC5B,MAAMmC,SAAS,GAAG,IAAAC,WAAK,EAAC,IAAAC,eAAS,EAAC,CAAC,CAAC,GAAGC,mBAAY,GAAGC,kBAAW;IAEjE,oBACE,IAAAtD,WAAA,CAAAqC,GAAA,EAACjD,QAAA,CAAAmE,MAAM;MACLC,OAAO,EAAC,MAAM;MACd/C,SAAS,EAAC,cAAc;MACxBgC,OAAO,EAAE7B,eAAgB;MACzBqC,QAAQ,EAAEA,QAAS;MACnBQ,UAAU,EAAEP,SAAU;MACtBQ,EAAE,EAAET,QAAQ,GAAGrB,SAAS,GAAG+B,oBAAK;MAChCC,EAAE,EAAEX,QAAQ,GAAGrB,SAAS,GAAGV,YAAa;MAAA2C,QAAA,EAEvC/B,0CAA0C,GAAG,IAAI,GAAGxB,IAAI,CAACwD,aAAa,CAACC,iBAAQ,CAACC,cAAc;IAAC,CAC1F,CAAC;EAEb,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAM;MAAEC,UAAU;MAAEC;IAAS,CAAC,GAAG,IAAAC,mCAAuB,EAAChD,QAAQ,EAAEd,IAAI,CAAC;IACxE,MAAM+D,UAAU,GAAIrD,UAAU,IAAImD,QAAQ,GAAIA,QAAQ,GAAG7D,IAAI,CAACwD,aAAa,CAACC,iBAAQ,CAACO,UAAU,CAAC;IAChG,MAAMrB,QAAQ,GAAGjC,UAAU,IAAI,CAACkD,UAAU;IAC1C,MAAMK,SAAS,GAAG,IAAApB,WAAK,EAAC,IAAAC,eAAS,EAAC,CAAC,CAAC,GAAGE,kBAAW,GAAGD,mBAAY;IAEjE,oBACE,IAAArD,WAAA,CAAAqC,GAAA,EAACjD,QAAA,CAAAmE,MAAM;MACLC,OAAO,EAAC,MAAM;MACd/C,SAAS,EAAC,UAAU;MACpBgC,OAAO,EAAE9B,WAAY;MACrBsC,QAAQ,EAAEA,QAAS;MACnBuB,SAAS,EAAED,SAAU;MACrBb,EAAE,EAAET,QAAQ,GAAGrB,SAAS,GAAG+B,oBAAK;MAChCC,EAAE,EAAEX,QAAQ,GAAGrB,SAAS,GAAGX,QAAS;MAAA4C,QAAA,EAEnC/B,0CAA0C,GAAG,IAAI,GAAGuC;IAAU,CACzD,CAAC;EAEb,CAAC;EAED,OAAOhD,cAAc,KAAKK,aAAM,iBAC9B,IAAA1B,WAAA,CAAAyE,IAAA;IAAKC,EAAE,EAAC,+BAA+B;IAACjE,SAAS,EAAE,IAAAkE,mBAAU,EAAC,qBAAqB,EAAElE,SAAS,EAAE;MAAE,MAAM,EAAEqB;IAA2C,CAAC,CAAE;IAAA+B,QAAA,GACrJb,oBAAoB,CAAC,CAAC,EACtBZ,iBAAiB,CAAC,CAAC,EACnB6B,gBAAgB,CAAC,CAAC;EAAA,CAChB,CACN;AACH,CAAC;AAED7D,kBAAkB,CAACwE,SAAS,GAAG;EAC7BtE,IAAI,EAAEuE,eAAS,CAACC,UAAU;EAC1BtE,UAAU,EAAEuE,kBAAS,CAACC,MAAM,CAACF,UAAU;EACvCvE,MAAM,EAAEwE,kBAAS,CAACC,MAAM;EACxBvE,SAAS,EAAEsE,kBAAS,CAACC,MAAM;EAC3BtE,UAAU,EAAEqE,kBAAS,CAACE,IAAI,CAACH,UAAU;EACrCnE,WAAW,EAAEoE,kBAAS,CAACE,IAAI,CAACH,UAAU;EACtClE,eAAe,EAAEmE,kBAAS,CAACE,IAAI,CAACH;AAClC,CAAC;AAED1E,kBAAkB,CAAC8E,YAAY,GAAG;EAChCzE,SAAS,EAAE,IAAI;EACfF,MAAM,EAAE;AACV,CAAC;AAAC,IAAA4E,QAAA,GAEa,IAAAC,gBAAU,EAAChF,kBAAkB,CAAC;AAAAiF,OAAA,CAAAlF,OAAA,GAAAgF,QAAA"}