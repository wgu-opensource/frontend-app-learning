{"version":3,"sources":["../../../../../src/courseware/course/sequence/sequence-navigation/UnitNavigation.jsx"],"names":["UnitNavigation","intl","sequenceId","unitId","onClickPrevious","onClickNext","goToCourseExitPage","isFirstUnit","isLastUnit","courseId","state","courseware","renderNextButton","exitActive","exitText","buttonOnClick","buttonText","formatMessage","messages","nextButton","disabled","nextArrow","faChevronLeft","faChevronRight","prevArrow","previousButton","propTypes","intlShape","isRequired","PropTypes","string","func","defaultProps"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEA;;AAGA;;AAEA;;AAEA;;AACA;;AACA;;;;;;AAEA,SAASA,cAAT,OAOG;AAAA,MAPqB;AACtBC,IAAAA,IADsB;AAEtBC,IAAAA,UAFsB;AAGtBC,IAAAA,MAHsB;AAItBC,IAAAA,eAJsB;AAKtBC,IAAAA,WALsB;AAMtBC,IAAAA;AANsB,GAOrB;AACD,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA8B,0CAA8BN,UAA9B,EAA0CC,MAA1C,CAApC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAe,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAArB;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA2B,yCAAwBL,QAAxB,EAAkCR,IAAlC,CAAjC;AACA,UAAMc,aAAa,GAAGP,UAAU,GAAGF,kBAAH,GAAwBD,WAAxD;AACA,UAAMW,UAAU,GAAIR,UAAU,IAAIM,QAAf,GAA2BA,QAA3B,GAAsCb,IAAI,CAACgB,aAAL,CAAmBC,kBAASC,UAA5B,CAAzD;AACA,UAAMC,QAAQ,GAAGZ,UAAU,IAAI,CAACK,UAAhC;AACA,UAAMQ,SAAS,GAAG,iBAAM,sBAAN,IAAqBC,4BAArB,GAAqCC,8BAAvD;AACA,wBACE,sBAAC,eAAD;AACE,MAAA,OAAO,EAAC,iBADV;AAEE,MAAA,SAAS,EAAC,8DAFZ;AAGE,MAAA,OAAO,EAAER,aAHX;AAIE,MAAA,QAAQ,EAAEK,QAJZ;AAAA,8BAME,qBAAC,qCAAD;AAA8B,QAAA,UAAU,EAAElB,UAA1C;AAAsD,QAAA,MAAM,EAAEC,MAA9D;AAAA,kBACGa;AADH,QANF,eASE,qBAAC,iCAAD;AAAiB,QAAA,IAAI,EAAEK,SAAvB;AAAkC,QAAA,SAAS,EAAC,MAA5C;AAAmD,QAAA,IAAI,EAAC;AAAxD,QATF;AAAA,MADF;AAaD,GAnBD;;AAqBA,QAAMG,SAAS,GAAG,iBAAM,sBAAN,IAAqBD,8BAArB,GAAsCD,4BAAxD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACE,sBAAC,eAAD;AACE,MAAA,OAAO,EAAC,mBADV;AAEE,MAAA,SAAS,EAAC,uEAFZ;AAGE,MAAA,QAAQ,EAAEf,WAHZ;AAIE,MAAA,OAAO,EAAEH,eAJX;AAAA,8BAME,qBAAC,iCAAD;AAAiB,QAAA,IAAI,EAAEoB,SAAvB;AAAkC,QAAA,SAAS,EAAC,MAA5C;AAAmD,QAAA,IAAI,EAAC;AAAxD,QANF,EAOGvB,IAAI,CAACgB,aAAL,CAAmBC,kBAASO,cAA5B,CAPH;AAAA,MADF,EAUGb,gBAAgB,EAVnB;AAAA,IADF;AAcD;;AAEDZ,cAAc,CAAC0B,SAAf,GAA2B;AACzBzB,EAAAA,IAAI,EAAE0B,gBAAUC,UADS;AAEzB1B,EAAAA,UAAU,EAAE2B,mBAAUC,MAAV,CAAiBF,UAFJ;AAGzBzB,EAAAA,MAAM,EAAE0B,mBAAUC,MAHO;AAIzB1B,EAAAA,eAAe,EAAEyB,mBAAUE,IAAV,CAAeH,UAJP;AAKzBvB,EAAAA,WAAW,EAAEwB,mBAAUE,IAAV,CAAeH,UALH;AAMzBtB,EAAAA,kBAAkB,EAAEuB,mBAAUE,IAAV,CAAeH;AANV,CAA3B;AASA5B,cAAc,CAACgC,YAAf,GAA8B;AAC5B7B,EAAAA,MAAM,EAAE;AADoB,CAA9B;;eAIe,sBAAWH,cAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@edx/paragon';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport {\n  injectIntl, intlShape, isRtl, getLocale,\n} from '@edx/frontend-platform/i18n';\nimport { useSelector } from 'react-redux';\n\nimport { getCourseExitNavigation } from '../../course-exit';\n\nimport UnitNavigationEffortEstimate from './UnitNavigationEffortEstimate';\nimport { useSequenceNavigationMetadata } from './hooks';\nimport messages from './messages';\n\nfunction UnitNavigation({\n  intl,\n  sequenceId,\n  unitId,\n  onClickPrevious,\n  onClickNext,\n  goToCourseExitPage,\n}) {\n  const { isFirstUnit, isLastUnit } = useSequenceNavigationMetadata(sequenceId, unitId);\n  const { courseId } = useSelector(state => state.courseware);\n\n  const renderNextButton = () => {\n    const { exitActive, exitText } = getCourseExitNavigation(courseId, intl);\n    const buttonOnClick = isLastUnit ? goToCourseExitPage : onClickNext;\n    const buttonText = (isLastUnit && exitText) ? exitText : intl.formatMessage(messages.nextButton);\n    const disabled = isLastUnit && !exitActive;\n    const nextArrow = isRtl(getLocale()) ? faChevronLeft : faChevronRight;\n    return (\n      <Button\n        variant=\"outline-primary\"\n        className=\"next-button d-flex align-items-center justify-content-center\"\n        onClick={buttonOnClick}\n        disabled={disabled}\n      >\n        <UnitNavigationEffortEstimate sequenceId={sequenceId} unitId={unitId}>\n          {buttonText}\n        </UnitNavigationEffortEstimate>\n        <FontAwesomeIcon icon={nextArrow} className=\"ml-2\" size=\"sm\" />\n      </Button>\n    );\n  };\n\n  const prevArrow = isRtl(getLocale()) ? faChevronRight : faChevronLeft;\n  return (\n    <div className=\"unit-navigation d-flex\">\n      <Button\n        variant=\"outline-secondary\"\n        className=\"previous-button mr-2 d-flex align-items-center justify-content-center\"\n        disabled={isFirstUnit}\n        onClick={onClickPrevious}\n      >\n        <FontAwesomeIcon icon={prevArrow} className=\"mr-2\" size=\"sm\" />\n        {intl.formatMessage(messages.previousButton)}\n      </Button>\n      {renderNextButton()}\n    </div>\n  );\n}\n\nUnitNavigation.propTypes = {\n  intl: intlShape.isRequired,\n  sequenceId: PropTypes.string.isRequired,\n  unitId: PropTypes.string,\n  onClickPrevious: PropTypes.func.isRequired,\n  onClickNext: PropTypes.func.isRequired,\n  goToCourseExitPage: PropTypes.func.isRequired,\n};\n\nUnitNavigation.defaultProps = {\n  unitId: null,\n};\n\nexport default injectIntl(UnitNavigation);\n"],"file":"UnitNavigation.js"}