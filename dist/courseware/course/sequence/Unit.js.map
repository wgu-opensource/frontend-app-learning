{"version":3,"sources":["../../../../src/courseware/course/sequence/Unit.jsx"],"names":["HonorCode","React","lazy","LockPaywall","IFRAME_FEATURE_POLICY","useLoadBearingHook","id","setValue","currentValue","sendUrlHashToFrame","frame","hash","window","location","contentWindow","postMessage","hashName","LMS_BASE_URL","Unit","courseId","format","onLoaded","intl","mmp2p","authenticatedUser","AppContext","view","iframeUrl","iframeHeight","setIframeHeight","hasLoaded","setHasLoaded","showError","setShowError","modalOptions","setModalOptions","open","shouldDisplayHonorCode","setShouldDisplayHonorCode","unit","course","contentTypeGatingEnabled","userNeedsIntegritySignature","dispatch","graded","receiveMessage","data","type","payload","height","offset","scrollTo","document","getElementById","offsetTop","title","formatMessage","messages","headerPlaceholder","bookmarked","bookmarkedUpdateState","state","isEnabled","containsContentTypeGatedContent","loadingLockedContent","meta","showLock","blockContent","loadingHonorCode","loadingSequence","body","url","width","onmessage","e","event_name","fetchCourse","propTypes","PropTypes","string","isRequired","intlShape","func","shape","bool","defaultProps","undefined"],"mappings":"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","sourcesContent":["import { getConfig } from '@edx/frontend-platform';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { AppContext, ErrorPage } from '@edx/frontend-platform/react';\nimport { Modal } from '@edx/paragon';\nimport PropTypes from 'prop-types';\nimport React, {\n  Suspense, useCallback, useContext, useEffect, useLayoutEffect, useState,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { processEvent } from '../../../course-home/data/thunks';\n/** [MM-P2P] Experiment */\nimport { MMP2PLockPaywall } from '../../../experiments/mm-p2p';\nimport { useEventListener } from '../../../generic/hooks';\nimport { useModel } from '../../../generic/model-store';\nimport PageLoading from '../../../generic/PageLoading';\nimport { fetchCourse } from '../../data';\nimport BookmarkButton from '../bookmark/BookmarkButton';\nimport messages from './messages';\n\nconst HonorCode = React.lazy(() => import('./honor-code'));\nconst LockPaywall = React.lazy(() => import('./lock-paywall'));\n\n/**\n * Feature policy for iframe, allowing access to certain courseware-related media.\n *\n * We must use the wildcard (*) origin for each feature, as courseware content\n * may be embedded in external iframes. Notably, xblock-lti-consumer is a popular\n * block that iframes external course content.\n\n * This policy was selected in conference with the edX Security Working Group.\n * Changes to it should be vetted by them (security@edx.org).\n */\nconst IFRAME_FEATURE_POLICY = (\n  'microphone *; camera *; midi *; geolocation *; encrypted-media *'\n);\n\n/**\n * We discovered an error in Firefox where - upon iframe load - React would cease to call any\n * useEffect hooks until the user interacts with the page again.  This is particularly confusing\n * when navigating between sequences, as the UI partially updates leaving the user in a nebulous\n * state.\n *\n * We were able to solve this error by using a layout effect to update some component state, which\n * executes synchronously on render.  Somehow this forces React to continue it's lifecycle\n * immediately, rather than waiting for user interaction.  This layout effect could be anywhere in\n * the parent tree, as far as we can tell - we chose to add a conspicuously 'load bearing' (that's\n * a joke) one here so it wouldn't be accidentally removed elsewhere.\n *\n * If we remove this hook when one of these happens:\n * 1. React figures out that there's an issue here and fixes a bug.\n * 2. We cease to use an iframe for unit rendering.\n * 3. Firefox figures out that there's an issue in their iframe loading and fixes a bug.\n * 4. We stop supporting Firefox.\n * 5. An enterprising engineer decides to create a repo that reproduces the problem, submits it to\n *    Firefox/React for review, and they kindly help us figure out what in the world is happening\n *    so  we can fix it.\n *\n * This hook depends on the unit id just to make sure it re-evaluates whenever the ID changes.  If\n * we change whether or not the Unit component is re-mounted when the unit ID changes, this may\n * become important, as this hook will otherwise only evaluate the useLayoutEffect once.\n */\nfunction useLoadBearingHook(id) {\n  const setValue = useState(0)[1];\n  useLayoutEffect(() => {\n    setValue(currentValue => currentValue + 1);\n  }, [id]);\n}\n\nexport function sendUrlHashToFrame(frame) {\n  const { hash } = window.location;\n  if (hash) {\n    // The url hash will be sent to LMS-served iframe in order to find the location of the\n    // hash within the iframe.\n    frame.contentWindow.postMessage({ hashName: hash }, `${getConfig().LMS_BASE_URL}`);\n  }\n}\n\nfunction Unit({\n  courseId,\n  format,\n  onLoaded,\n  id,\n  intl,\n  /** [MM-P2P] Experiment */\n  mmp2p,\n}) {\n  const { authenticatedUser } = useContext(AppContext);\n  const view = authenticatedUser ? 'student_view' : 'public_view';\n  let iframeUrl = `${getConfig().LMS_BASE_URL}/xblock/${id}?show_title=0&show_bookmark_button=0&recheck_access=1&view=${view}`;\n  if (format) {\n    iframeUrl += `&format=${format}`;\n  }\n\n  const [iframeHeight, setIframeHeight] = useState(0);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [modalOptions, setModalOptions] = useState({ open: false });\n  const [shouldDisplayHonorCode, setShouldDisplayHonorCode] = useState(false);\n\n  const unit = useModel('units', id);\n  const course = useModel('coursewareMeta', courseId);\n  const {\n    contentTypeGatingEnabled,\n    userNeedsIntegritySignature,\n  } = course;\n\n  const dispatch = useDispatch();\n  // Do not remove this hook.  See function description.\n  useLoadBearingHook(id);\n\n  useEffect(() => {\n    if (userNeedsIntegritySignature && unit.graded) {\n      setShouldDisplayHonorCode(true);\n    } else {\n      setShouldDisplayHonorCode(false);\n    }\n  }, [userNeedsIntegritySignature]);\n\n  const receiveMessage = useCallback(({ data }) => {\n    const {\n      type,\n      payload,\n    } = data;\n    if (type === 'plugin.resize') {\n      setIframeHeight(payload.height);\n      if (!hasLoaded && iframeHeight === 0 && payload.height > 0) {\n        setHasLoaded(true);\n        if (onLoaded) {\n          onLoaded();\n        }\n      }\n    } else if (type === 'plugin.modal') {\n      payload.open = true;\n      setModalOptions(payload);\n    } else if (data.offset) {\n      // We listen for this message from LMS to know when the page needs to\n      // be scrolled to another location on the page.\n      window.scrollTo(0, data.offset + document.getElementById('unit-iframe').offsetTop);\n    }\n  }, [id, setIframeHeight, hasLoaded, iframeHeight, setHasLoaded, onLoaded]);\n  useEventListener('message', receiveMessage);\n  useEffect(() => {\n    sendUrlHashToFrame(document.getElementById('unit-iframe'));\n  }, [id, setIframeHeight, hasLoaded, iframeHeight, setHasLoaded, onLoaded]);\n\n  return (\n    <div className=\"unit\">\n      <h1 className=\"mb-0 h3\">{unit.title}</h1>\n      <h2 className=\"sr-only\">{intl.formatMessage(messages.headerPlaceholder)}</h2>\n      <BookmarkButton\n        unitId={unit.id}\n        isBookmarked={unit.bookmarked}\n        isProcessing={unit.bookmarkedUpdateState === 'loading'}\n      />\n      { !mmp2p.state.isEnabled && contentTypeGatingEnabled && unit.containsContentTypeGatedContent && (\n        <Suspense\n          fallback={(\n            <PageLoading\n              srMessage={intl.formatMessage(messages.loadingLockedContent)}\n            />\n          )}\n        >\n          <LockPaywall courseId={courseId} />\n        </Suspense>\n      )}\n      { /** [MM-P2P] Experiment */ }\n      { mmp2p.meta.showLock && (\n        <MMP2PLockPaywall options={mmp2p} />\n      )}\n      {!mmp2p.meta.blockContent && shouldDisplayHonorCode && (\n        <Suspense\n          fallback={(\n            <PageLoading\n              srMessage={intl.formatMessage(messages.loadingHonorCode)}\n            />\n          )}\n        >\n          <HonorCode courseId={courseId} />\n        </Suspense>\n      )}\n      { /** [MM-P2P] Experiment (conditional) */ }\n      {!mmp2p.meta.blockContent && !shouldDisplayHonorCode && !hasLoaded && !showError && (\n        <PageLoading\n          srMessage={intl.formatMessage(messages.loadingSequence)}\n        />\n      )}\n      {!mmp2p.meta.blockContent && !shouldDisplayHonorCode && !hasLoaded && showError && (\n        <ErrorPage />\n      )}\n      {modalOptions.open && (\n        <Modal\n          body={(\n            <>\n              {modalOptions.body\n                ? <div className=\"unit-modal\">{ modalOptions.body }</div>\n                : (\n                  <iframe\n                    title={modalOptions.title}\n                    allow={IFRAME_FEATURE_POLICY}\n                    frameBorder=\"0\"\n                    src={modalOptions.url}\n                    style={{\n                      width: '100%',\n                      height: '100vh',\n                    }}\n                  />\n                )}\n            </>\n          )}\n          onClose={() => { setModalOptions({ open: false }); }}\n          open\n          dialogClassName=\"modal-lti\"\n        />\n      )}\n      { /** [MM-P2P] Experiment (conditional) */ }\n      { !mmp2p.meta.blockContent && !shouldDisplayHonorCode && (\n        <div className=\"unit-iframe-wrapper\">\n          <iframe\n            id=\"unit-iframe\"\n            title={unit.title}\n            src={iframeUrl}\n            allow={IFRAME_FEATURE_POLICY}\n            allowFullScreen\n            height={iframeHeight}\n            scrolling=\"no\"\n            referrerPolicy=\"origin\"\n            onLoad={() => {\n              // onLoad *should* only fire after everything in the iframe has finished its own load events.\n              // Which means that the plugin.resize message (which calls setHasLoaded above) will have fired already\n              // for a successful load. If it *has not fired*, we are in an error state. For example, the backend\n              // could have given us a 4xx or 5xx response.\n              if (!hasLoaded) {\n                setShowError(true);\n              }\n\n              window.onmessage = (e) => {\n                if (e.data.event_name) {\n                  dispatch(processEvent(e.data, fetchCourse));\n                }\n              };\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nUnit.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  format: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  intl: intlShape.isRequired,\n  onLoaded: PropTypes.func,\n  /** [MM-P2P] Experiment */\n  mmp2p: PropTypes.shape({\n    state: PropTypes.shape({\n      isEnabled: PropTypes.bool.isRequired,\n    }),\n    meta: PropTypes.shape({\n      showLock: PropTypes.bool,\n      blockContent: PropTypes.bool,\n    }),\n  }),\n};\n\nUnit.defaultProps = {\n  format: null,\n  onLoaded: undefined,\n  /** [MM-P2P] Experiment */\n  mmp2p: {\n    state: {\n      isEnabled: false,\n    },\n    meta: {\n      showLock: false,\n      blockContent: false,\n    },\n  },\n};\n\nexport default injectIntl(Unit);\n"],"file":"Unit.js"}