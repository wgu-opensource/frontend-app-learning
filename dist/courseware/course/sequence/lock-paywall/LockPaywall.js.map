{"version":3,"sources":["../../../../../src/courseware/course/sequence/lock-paywall/LockPaywall.jsx"],"names":["LockPaywall","intl","courseId","notificationTrayVisible","SidebarContext","course","accessExpiration","marketingUrl","offer","org","verifiedMode","shouldDisplayBulletPointsBelowCertificate","width","breakpoints","large","minWidth","shouldDisplayGatedContentOneColumn","extraLarge","shouldDisplayGatedContentTwoColumns","shouldDisplayGatedContentTwoColumnsHalf","shouldWrapTextOnButton","extraSmall","accessExpirationDate","Date","expirationDate","pastExpirationDeadline","now","eventProperties","org_key","courserun_key","logClick","linkCategory","linkName","linkType","pageName","logClickPastExpiration","Locked","formatMessage","messages","float","certificateLocked","height","whiteSpace","propTypes","intlShape","isRequired","PropTypes","string"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport {\n  Alert, Hyperlink, breakpoints, useWindowSize,\n} from '@edx/paragon';\nimport { Locked } from '@edx/paragon/icons';\nimport SidebarContext from '../../sidebar/SidebarContext';\nimport messages from './messages';\nimport certificateLocked from '../../../../generic/assets/edX_locked_certificate.png';\nimport { useModel } from '../../../../generic/model-store';\nimport { UpgradeButton } from '../../../../generic/upgrade-button';\nimport {\n  VerifiedCertBullet,\n  UnlockGradedBullet,\n  FullAccessBullet,\n  SupportMissionBullet,\n} from '../../../../generic/upsell-bullets/UpsellBullets';\n\nfunction LockPaywall({\n  intl,\n  courseId,\n}) {\n  const { notificationTrayVisible } = useContext(SidebarContext);\n  const course = useModel('coursewareMeta', courseId);\n  const {\n    accessExpiration,\n    marketingUrl,\n    offer,\n  } = course;\n\n  const {\n    org, verifiedMode,\n  } = useModel('courseHomeMeta', courseId);\n\n  // the following variables are set and used for resposive layout to work with\n  // whether the NotificationTray is open or not and if there's an offer with longer text\n  const shouldDisplayBulletPointsBelowCertificate = useWindowSize().width <= breakpoints.large.minWidth;\n  const shouldDisplayGatedContentOneColumn = useWindowSize().width <= breakpoints.extraLarge.minWidth\n    && notificationTrayVisible;\n  const shouldDisplayGatedContentTwoColumns = useWindowSize().width < breakpoints.large.minWidth\n    && notificationTrayVisible;\n  const shouldDisplayGatedContentTwoColumnsHalf = useWindowSize().width <= breakpoints.large.minWidth\n    && !notificationTrayVisible;\n  const shouldWrapTextOnButton = useWindowSize().width > breakpoints.extraSmall.minWidth;\n\n  const accessExpirationDate = accessExpiration ? new Date(accessExpiration.expirationDate) : null;\n  const pastExpirationDeadline = accessExpiration ? new Date(Date.now()) > accessExpirationDate : false;\n\n  if (!verifiedMode) {\n    return null;\n  }\n\n  const eventProperties = {\n    org_key: org,\n    courserun_key: courseId,\n  };\n\n  const logClick = () => {\n    sendTrackEvent('edx.bi.ecommerce.upsell_links_clicked', {\n      ...eventProperties,\n      linkCategory: '(none)',\n      linkName: 'in_course_upgrade',\n      linkType: 'link',\n      pageName: 'in_course',\n    });\n  };\n\n  const logClickPastExpiration = () => {\n    sendTrackEvent('edx.bi.ecommerce.gated_content.past_expiration.link_clicked', {\n      ...eventProperties,\n      linkCategory: 'gated_content',\n      linkName: 'course_details',\n      linkType: 'link',\n      pageName: 'in_course',\n    });\n  };\n\n  return (\n    <Alert variant=\"light\" aria-live=\"off\" icon={Locked} className=\"lock-paywall-container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <h4 aria-level=\"3\">\n            <span>{intl.formatMessage(messages['learn.lockPaywall.title'])}</span>\n          </h4>\n          {pastExpirationDeadline ? (\n            <div className=\"mb-2 upgrade-intro\">\n              {intl.formatMessage(messages['learn.lockPaywall.content.pastExpiration'])}\n              <Hyperlink destination={marketingUrl} onClick={logClickPastExpiration} target=\"_blank\">{intl.formatMessage(messages['learn.lockPaywall.courseDetails'])}</Hyperlink>\n            </div>\n          ) : (\n            <div className=\"mb-2 upgrade-intro\">\n              {intl.formatMessage(messages['learn.lockPaywall.content'])}\n            </div>\n          )}\n\n          <div className={classNames('d-inline-flex flex-row', { 'flex-wrap': notificationTrayVisible || shouldDisplayBulletPointsBelowCertificate })}>\n            <div style={{ float: 'left' }} className=\"mr-3 mb-2\">\n              <img\n                alt={intl.formatMessage(messages['learn.lockPaywall.example.alt'])}\n                src={certificateLocked}\n                className=\"border-0 certificate-image-banner\"\n                style={{ height: '128px', width: '175px' }}\n              />\n            </div>\n\n            <div className=\"mw-xs list-div\">\n              <div className=\"mb-2\">\n                {intl.formatMessage(messages['learn.lockPaywall.list.intro'])}\n              </div>\n              <ul className=\"fa-ul ml-4 pl-2\">\n                <VerifiedCertBullet />\n                <UnlockGradedBullet />\n                <FullAccessBullet />\n                <SupportMissionBullet />\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {pastExpirationDeadline\n          ? null\n          : (\n            <div\n              className={\n                classNames('d-md-flex align-items-md-center text-right', {\n                  'col-md-5 mx-md-0': notificationTrayVisible, 'col-md-4 mx-md-3 justify-content-center': !notificationTrayVisible && !shouldDisplayGatedContentTwoColumnsHalf, 'col-md-11 justify-content-end': shouldDisplayGatedContentOneColumn && !shouldDisplayGatedContentTwoColumns, 'col-md-6 justify-content-center': shouldDisplayGatedContentTwoColumnsHalf,\n                })\n              }\n            >\n              <UpgradeButton\n                offer={offer}\n                onClick={logClick}\n                verifiedMode={verifiedMode}\n                style={{ whiteSpace: shouldWrapTextOnButton ? 'nowrap' : null }}\n              />\n            </div>\n          )}\n      </div>\n    </Alert>\n  );\n}\nLockPaywall.propTypes = {\n  intl: intlShape.isRequired,\n  courseId: PropTypes.string.isRequired,\n};\nexport default injectIntl(LockPaywall);\n"],"file":"LockPaywall.js"}