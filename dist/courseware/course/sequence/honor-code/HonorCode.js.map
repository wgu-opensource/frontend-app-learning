{"version":3,"sources":["../../../../../src/courseware/course/sequence/honor-code/HonorCode.jsx"],"names":["HonorCode","intl","courseId","dispatch","isMasquerading","username","authUser","siteName","SITE_NAME","honorCodeUrl","TERMS_OF_SERVICE_URL","handleCancel","history","push","handleAgree","formatMessage","messages","link","propTypes","intlShape","isRequired","PropTypes","string"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA,SAASA,SAAT,OAAuC;AAAA,MAApB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAoB;AACrC,QAAMC,QAAQ,GAAG,8BAAjB;AACA,QAAM;AACJC,IAAAA,cADI;AAEJC,IAAAA;AAFI,MAGF,0BAAS,gBAAT,EAA2BH,QAA3B,CAHJ;AAIA,QAAMI,QAAQ,GAAG,iCAAjB;AACA,QAAMC,QAAQ,GAAG,mCAAYC,SAA7B;AACA,QAAMC,YAAY,GAAI,GAAE,mCAAYC,oBAAqB,aAAzD;;AAEA,QAAMC,YAAY,GAAG,MAAMC,0BAAQC,IAAR,CAAc,WAAUX,QAAS,OAAjC,CAA3B;;AAEA,QAAMY,WAAW,GAAG,MAAMX,QAAQ,EAChC;AACA;AACA;AACA;AACA,oCACED,QADF,EAEEE,cAAc,IAAIC,QAAQ,KAAKC,QAAQ,CAACD,QAF1C,CALgC,CAAlC;;AAWA,sBACE,sBAAC,cAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,iBAAU,KAAjC;AAAA,4BACE;AAAI,oBAAW,GAAf;AAAA,iBACGE,QADH,EACa,GADb,EAEGN,IAAI,CAACc,aAAL,CAAmBC,kBAAS,sBAAT,CAAnB,CAFH;AAAA,MADF,eAME;AAAA,6BACE,qBAAC,sBAAD;AACE,QAAA,EAAE,EAAC,yBADL;AAEE,QAAA,cAAc,EAAC,6QAFjB;AAGE,QAAA,MAAM,EAAE;AACNT,UAAAA,QADM;AAENU,UAAAA,IAAI,eAAE;AAAG,YAAA,IAAI,EAAER,YAAT;AAAA,sBAAwBR,IAAI,CAACc,aAAL,CAAmBC,kBAAS,sBAAT,CAAnB;AAAxB;AAFA,SAHV;AAOE,QAAA,WAAW,EAAC;AAPd;AADF,MANF,eAkBE,sBAAC,kBAAD;AAAA,8BACE,qBAAC,kBAAD,CAAW,MAAX,KADF,eAEE,qBAAC,eAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAA2B,QAAA,OAAO,EAAEL,YAApC;AAAA,kBACGV,IAAI,CAACc,aAAL,CAAmBC,kBAAS,wBAAT,CAAnB;AADH,QAFF,eAKE,qBAAC,eAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEF,WAAnC;AAAA,kBACGb,IAAI,CAACc,aAAL,CAAmBC,kBAAS,uBAAT,CAAnB;AADH,QALF;AAAA,MAlBF;AAAA,IADF;AA8BD;;AAEDhB,SAAS,CAACkB,SAAV,GAAsB;AACpBjB,EAAAA,IAAI,EAAEkB,gBAAUC,UADI;AAEpBlB,EAAAA,QAAQ,EAAEmB,mBAAUC,MAAV,CAAiBF;AAFP,CAAtB;;eAKe,sBAAWpB,SAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { getConfig, history } from '@edx/frontend-platform';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { ActionRow, Alert, Button } from '@edx/paragon';\n\nimport { useModel } from '../../../../generic/model-store';\nimport { saveIntegritySignature } from '../../../data';\nimport messages from './messages';\n\nfunction HonorCode({ intl, courseId }) {\n  const dispatch = useDispatch();\n  const {\n    isMasquerading,\n    username,\n  } = useModel('courseHomeMeta', courseId);\n  const authUser = getAuthenticatedUser();\n  const siteName = getConfig().SITE_NAME;\n  const honorCodeUrl = `${getConfig().TERMS_OF_SERVICE_URL}#honor-code`;\n\n  const handleCancel = () => history.push(`/course/${courseId}/home`);\n\n  const handleAgree = () => dispatch(\n    // If the request is made by a staff user masquerading as a specific learner,\n    // don't actually create a signature for them on the backend.\n    // Only the modal dialog will be dismissed.\n    // Otherwise, even for staff users, we want to record the signature.\n    saveIntegritySignature(\n      courseId,\n      isMasquerading && username !== authUser.username,\n    ),\n  );\n\n  return (\n    <Alert variant=\"light\" aria-live=\"off\">\n      <h4 aria-level=\"3\">\n        {siteName}{' '}\n        {intl.formatMessage(messages['learn.honorCode.name'])}\n      </h4>\n\n      <p>\n        <FormattedMessage\n          id=\"learn.honorCode.content\"\n          defaultMessage=\"Honesty and academic integrity are important to {siteName} and the institutions providing courses and programs on the {siteName} site. By clicking “I agree” below, I confirm that I have read, understand, and will abide by the {link} for the {siteName} Site.\"\n          values={{\n            siteName,\n            link: <a href={honorCodeUrl}>{intl.formatMessage(messages['learn.honorCode.name'])}</a>,\n          }}\n          description=\"This is shown to learner, when course author wants to learners to explicity agree on their (Term of use or conduct), hence it links honor code page. \"\n        />\n      </p>\n\n      <ActionRow>\n        <ActionRow.Spacer />\n        <Button variant=\"tertiary\" onClick={handleCancel}>\n          {intl.formatMessage(messages['learn.honorCode.cancel'])}\n        </Button>\n        <Button variant=\"primary\" onClick={handleAgree}>\n          {intl.formatMessage(messages['learn.honorCode.agree'])}\n        </Button>\n      </ActionRow>\n    </Alert>\n  );\n}\n\nHonorCode.propTypes = {\n  intl: intlShape.isRequired,\n  courseId: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(HonorCode);\n"],"file":"HonorCode.js"}