{"version":3,"file":"Sequence.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_classnames","_analytics","_i18n","_reactRedux","_frontendLibSpecialExams","_paragon","_PageLoading","_modelStore","_hooks","_courseLicense","_Sidebar","_SidebarTriggers","_messages","_hiddenAfterDue","_sequenceNavigation","_SequenceContent","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Sequence","_ref","unitId","sequenceId","courseId","unitNavigationHandler","nextSequenceHandler","previousSequenceHandler","intl","course","useModel","isStaff","originalUserIsStaff","sequence","unit","sequenceStatus","useSelector","state","courseware","sequenceMightBeUnit","shouldDisplayNotificationTriggerInSequence","useWindowSize","width","breakpoints","small","minWidth","handleNext","nextIndex","unitIds","indexOf","length","newUnitId","handleNavigate","handlePrevious","previousIndex","destinationUnitId","logEvent","eventName","widgetPlacement","targetUnitId","currentIndex","payload","current_tab","id","tab_count","widget_placement","targetIndex","target_tab","sendTrackEvent","sendTrackingLogEvent","useSequenceBannerTextAlert","useSequenceEntranceExamAlert","useEffect","receiveMessage","event","type","data","global","location","reload","addEventListener","unitHasLoaded","setUnitHasLoaded","useState","handleUnitLoaded","loading","jsxs","children","formatMessage","messages","noContent","jsx","srMessage","loadingSequence","isHiddenAfterDue","gated","gatedContent","undefined","defaultContent","className","classNames","SequenceNavigation","nextHandler","onNavigate","previousHandler","unitLoadedHandler","UnitNavigation","onClickPrevious","onClickNext","canAccessProctoredExams","license","style","maxWidth","loadFailure","propTypes","PropTypes","string","isRequired","func","intlShape","defaultProps","_default","injectIntl","exports"],"sources":["../../../../src/courseware/course/sequence/Sequence.jsx"],"sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, {\n  useEffect, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {\n  sendTrackEvent,\n  sendTrackingLogEvent,\n} from '@edx/frontend-platform/analytics';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { useSelector } from 'react-redux';\nimport SequenceExamWrapper from '@edx/frontend-lib-special-exams';\nimport { breakpoints, useWindowSize } from '@edx/paragon';\n\nimport PageLoading from '../../../generic/PageLoading';\nimport { useModel } from '../../../generic/model-store';\nimport { useSequenceBannerTextAlert, useSequenceEntranceExamAlert } from '../../../alerts/sequence-alerts/hooks';\n\nimport CourseLicense from '../course-license';\nimport Sidebar from '../sidebar/Sidebar';\nimport SidebarTriggers from '../sidebar/SidebarTriggers';\nimport messages from './messages';\nimport HiddenAfterDue from './hidden-after-due';\nimport { SequenceNavigation, UnitNavigation } from './sequence-navigation';\nimport SequenceContent from './SequenceContent';\n\nconst Sequence = ({\n  unitId,\n  sequenceId,\n  courseId,\n  unitNavigationHandler,\n  nextSequenceHandler,\n  previousSequenceHandler,\n  intl,\n}) => {\n  const course = useModel('coursewareMeta', courseId);\n  const {\n    isStaff,\n    originalUserIsStaff,\n  } = useModel('courseHomeMeta', courseId);\n  const sequence = useModel('sequences', sequenceId);\n  const unit = useModel('units', unitId);\n  const sequenceStatus = useSelector(state => state.courseware.sequenceStatus);\n  const sequenceMightBeUnit = useSelector(state => state.courseware.sequenceMightBeUnit);\n  const shouldDisplayNotificationTriggerInSequence = useWindowSize().width < breakpoints.small.minWidth;\n\n  const handleNext = () => {\n    const nextIndex = sequence.unitIds.indexOf(unitId) + 1;\n    if (nextIndex < sequence.unitIds.length) {\n      const newUnitId = sequence.unitIds[nextIndex];\n      handleNavigate(newUnitId);\n    } else {\n      nextSequenceHandler();\n    }\n  };\n\n  const handlePrevious = () => {\n    const previousIndex = sequence.unitIds.indexOf(unitId) - 1;\n    if (previousIndex >= 0) {\n      const newUnitId = sequence.unitIds[previousIndex];\n      handleNavigate(newUnitId);\n    } else {\n      previousSequenceHandler();\n    }\n  };\n\n  const handleNavigate = (destinationUnitId) => {\n    unitNavigationHandler(destinationUnitId);\n  };\n\n  const logEvent = (eventName, widgetPlacement, targetUnitId) => {\n    // Note: tabs are tracked with a 1-indexed position\n    // as opposed to a 0-index used throughout this MFE\n    const currentIndex = sequence.unitIds.length > 0 ? sequence.unitIds.indexOf(unitId) : 0;\n    const payload = {\n      current_tab: currentIndex + 1,\n      id: unitId,\n      tab_count: sequence.unitIds.length,\n      widget_placement: widgetPlacement,\n    };\n    if (targetUnitId) {\n      const targetIndex = sequence.unitIds.indexOf(targetUnitId);\n      payload.target_tab = targetIndex + 1;\n    }\n    sendTrackEvent(eventName, payload);\n    sendTrackingLogEvent(eventName, payload);\n  };\n\n  useSequenceBannerTextAlert(sequenceId);\n  useSequenceEntranceExamAlert(courseId, sequenceId, intl);\n\n  useEffect(() => {\n    function receiveMessage(event) {\n      const { type } = event.data;\n      if (type === 'entranceExam.passed') {\n        // I know this seems (is) intense. It is implemented this way since we need to refetch the underlying\n        // course blocks that were originally hidden because the Entrance Exam was not passed.\n        global.location.reload();\n      }\n    }\n    global.addEventListener('message', receiveMessage);\n  }, []);\n\n  const [unitHasLoaded, setUnitHasLoaded] = useState(false);\n  const handleUnitLoaded = () => {\n    setUnitHasLoaded(true);\n  };\n\n  // We want hide the unit navigation if we're in the middle of navigating to another unit\n  // but not if other things about the unit change, like the bookmark status.\n  // The array property of this useEffect ensures that we only hide the unit navigation\n  // while navigating to another unit.\n  useEffect(() => {\n    if (unit) {\n      setUnitHasLoaded(false);\n    }\n  }, [(unit || {}).id]);\n\n  // If sequence might be a unit, we want to keep showing a spinner - the courseware container will redirect us when\n  // it knows which sequence to actually go to.\n  const loading = sequenceStatus === 'loading' || (sequenceStatus === 'failed' && sequenceMightBeUnit);\n  if (loading) {\n    if (!sequenceId) {\n      return (<div> {intl.formatMessage(messages.noContent)} </div>);\n    }\n    return (\n      <PageLoading\n        srMessage={intl.formatMessage(messages.loadingSequence)}\n      />\n    );\n  }\n\n  if (sequenceStatus === 'loaded' && sequence.isHiddenAfterDue) {\n    // Shouldn't even be here - these sequences are normally stripped out of the navigation.\n    // But we are here, so render a notice instead of the normal content.\n    return <HiddenAfterDue courseId={courseId} />;\n  }\n\n  const gated = sequence && sequence.gatedContent !== undefined && sequence.gatedContent.gated;\n\n  const defaultContent = (\n    <div className=\"sequence-container d-inline-flex flex-row w-100\">\n      <div className={classNames('sequence w-100', { 'position-relative': shouldDisplayNotificationTriggerInSequence })}>\n        <div className=\"sequence-navigation-container\">\n          <SequenceNavigation\n            sequenceId={sequenceId}\n            unitId={unitId}\n            className=\"mb-4\"\n            nextHandler={() => {\n              logEvent('edx.ui.lms.sequence.next_selected', 'top');\n              handleNext();\n            }}\n            onNavigate={(destinationUnitId) => {\n              logEvent('edx.ui.lms.sequence.tab_selected', 'top', destinationUnitId);\n              handleNavigate(destinationUnitId);\n            }}\n            previousHandler={() => {\n              logEvent('edx.ui.lms.sequence.previous_selected', 'top');\n              handlePrevious();\n            }}\n          />\n          {shouldDisplayNotificationTriggerInSequence && <SidebarTriggers />}\n        </div>\n\n        <div className=\"unit-container flex-grow-1\">\n          <SequenceContent\n            courseId={courseId}\n            gated={gated}\n            sequenceId={sequenceId}\n            unitId={unitId}\n            unitLoadedHandler={handleUnitLoaded}\n          />\n          {unitHasLoaded && (\n          <UnitNavigation\n            sequenceId={sequenceId}\n            unitId={unitId}\n            onClickPrevious={() => {\n              logEvent('edx.ui.lms.sequence.previous_selected', 'bottom');\n              handlePrevious();\n            }}\n            onClickNext={() => {\n              logEvent('edx.ui.lms.sequence.next_selected', 'bottom');\n              handleNext();\n            }}\n          />\n          )}\n        </div>\n      </div>\n      <Sidebar />\n    </div>\n  );\n\n  if (sequenceStatus === 'loaded') {\n    return (\n      <div>\n        <SequenceExamWrapper\n          sequence={sequence}\n          courseId={courseId}\n          isStaff={isStaff}\n          originalUserIsStaff={originalUserIsStaff}\n          canAccessProctoredExams={course.canAccessProctoredExams}\n        >\n          {defaultContent}\n        </SequenceExamWrapper>\n        <CourseLicense license={course.license || undefined} />\n      </div>\n    );\n  }\n\n  // sequence status 'failed' and any other unexpected sequence status.\n  return (\n    <p className=\"text-center py-5 mx-auto\" style={{ maxWidth: '30em' }}>\n      {intl.formatMessage(messages.loadFailure)}\n    </p>\n  );\n};\n\nSequence.propTypes = {\n  unitId: PropTypes.string,\n  sequenceId: PropTypes.string,\n  courseId: PropTypes.string.isRequired,\n  unitNavigationHandler: PropTypes.func.isRequired,\n  nextSequenceHandler: PropTypes.func.isRequired,\n  previousSequenceHandler: PropTypes.func.isRequired,\n  intl: intlShape.isRequired,\n};\n\nSequence.defaultProps = {\n  sequenceId: null,\n  unitId: null,\n};\n\nexport default injectIntl(Sequence);\n"],"mappings":"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"}