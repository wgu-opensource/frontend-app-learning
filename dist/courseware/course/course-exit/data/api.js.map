{"version":3,"file":"api.js","names":["_frontendPlatform","require","_auth","filterRecommendationsList","_ref","_ref2","data","uuid","recommendations","enrollments","enrollmentRunIds","map","_ref3","courseDetails","courseId","filter","_ref4","recUuid","courseRunKeys","every","key","includes","getCourseRecommendations","courseKey","discoveryApiUrl","getConfig","DISCOVERY_API_BASE_URL","recommendationsUrl","URL","enrollmentsUrl","LMS_BASE_URL","recommendationsResponse","enrollmentsResponse","Promise","all","getAuthenticatedHttpClient","get","camelCaseObject","postUnsubscribeFromGoalReminders","url","post","href","course_id","subscribed_to_reminders"],"sources":["../../../../../src/courseware/course/course-exit/data/api.js"],"sourcesContent":["import { getConfig, camelCaseObject } from '@edx/frontend-platform';\nimport { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\n\nfunction filterRecommendationsList(\n  {\n    data: {\n      uuid,\n      recommendations,\n    },\n  },\n  {\n    data: enrollments,\n  },\n) {\n  const enrollmentRunIds = enrollments.map(({\n    courseDetails: {\n      courseId,\n    },\n  }) => courseId);\n\n  return recommendations.filter(({ uuid: recUuid, courseRunKeys }) => (\n    recUuid !== uuid && courseRunKeys.every((key) => !enrollmentRunIds.includes(key))\n  ));\n}\n\nexport async function getCourseRecommendations(courseKey) {\n  const discoveryApiUrl = getConfig().DISCOVERY_API_BASE_URL;\n  if (!discoveryApiUrl) {\n    return [];\n  }\n  const recommendationsUrl = new URL(`${discoveryApiUrl}/api/v1/course_recommendations/${courseKey}?exclude_utm=true`);\n  const enrollmentsUrl = new URL(`${getConfig().LMS_BASE_URL}/api/enrollment/v1/enrollment`);\n  const [recommendationsResponse, enrollmentsResponse] = await Promise.all([\n    getAuthenticatedHttpClient().get(recommendationsUrl),\n    getAuthenticatedHttpClient().get(enrollmentsUrl),\n  ]);\n  return filterRecommendationsList(camelCaseObject(recommendationsResponse), camelCaseObject(enrollmentsResponse));\n}\n\nexport async function postUnsubscribeFromGoalReminders(courseId) {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/course_home/save_course_goal`);\n  return getAuthenticatedHttpClient().post(url.href, {\n    course_id: courseId,\n    subscribed_to_reminders: false,\n  });\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AAEA,SAASE,yBAAyBA,CAAAC,IAAA,EAAAC,KAAA,EAUhC;EAAA,IATA;IACEC,IAAI,EAAE;MACJC,IAAI;MACJC;IACF;EACF,CAAC,GAAAJ,IAAA;EAAA,IACD;IACEE,IAAI,EAAEG;EACR,CAAC,GAAAJ,KAAA;EAED,MAAMK,gBAAgB,GAAGD,WAAW,CAACE,GAAG,CAACC,KAAA;IAAA,IAAC;MACxCC,aAAa,EAAE;QACbC;MACF;IACF,CAAC,GAAAF,KAAA;IAAA,OAAKE,QAAQ;EAAA,EAAC;EAEf,OAAON,eAAe,CAACO,MAAM,CAACC,KAAA;IAAA,IAAC;MAAET,IAAI,EAAEU,OAAO;MAAEC;IAAc,CAAC,GAAAF,KAAA;IAAA,OAC7DC,OAAO,KAAKV,IAAI,IAAIW,aAAa,CAACC,KAAK,CAAEC,GAAG,IAAK,CAACV,gBAAgB,CAACW,QAAQ,CAACD,GAAG,CAAC,CAAC;EAAA,CAClF,CAAC;AACJ;AAEO,eAAeE,wBAAwBA,CAACC,SAAS,EAAE;EACxD,MAAMC,eAAe,GAAG,IAAAC,2BAAS,EAAC,CAAC,CAACC,sBAAsB;EAC1D,IAAI,CAACF,eAAe,EAAE;IACpB,OAAO,EAAE;EACX;EACA,MAAMG,kBAAkB,GAAG,IAAIC,GAAG,CAAE,GAAEJ,eAAgB,kCAAiCD,SAAU,mBAAkB,CAAC;EACpH,MAAMM,cAAc,GAAG,IAAID,GAAG,CAAE,GAAE,IAAAH,2BAAS,EAAC,CAAC,CAACK,YAAa,+BAA8B,CAAC;EAC1F,MAAM,CAACC,uBAAuB,EAAEC,mBAAmB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACvE,IAAAC,gCAA0B,EAAC,CAAC,CAACC,GAAG,CAACT,kBAAkB,CAAC,EACpD,IAAAQ,gCAA0B,EAAC,CAAC,CAACC,GAAG,CAACP,cAAc,CAAC,CACjD,CAAC;EACF,OAAO1B,yBAAyB,CAAC,IAAAkC,iCAAe,EAACN,uBAAuB,CAAC,EAAE,IAAAM,iCAAe,EAACL,mBAAmB,CAAC,CAAC;AAClH;AAEO,eAAeM,gCAAgCA,CAACxB,QAAQ,EAAE;EAC/D,MAAMyB,GAAG,GAAG,IAAIX,GAAG,CAAE,GAAE,IAAAH,2BAAS,EAAC,CAAC,CAACK,YAAa,mCAAkC,CAAC;EACnF,OAAO,IAAAK,gCAA0B,EAAC,CAAC,CAACK,IAAI,CAACD,GAAG,CAACE,IAAI,EAAE;IACjDC,SAAS,EAAE5B,QAAQ;IACnB6B,uBAAuB,EAAE;EAC3B,CAAC,CAAC;AACJ"}