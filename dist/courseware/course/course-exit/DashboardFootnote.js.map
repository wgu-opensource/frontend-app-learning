{"version":3,"sources":["../../../../src/courseware/course/course-exit/DashboardFootnote.jsx"],"names":["DashboardFootnote","intl","variant","courseId","state","courseware","org","administrator","dashboardLink","textDecoration","LMS_BASE_URL","formatMessage","messages","faCalendarAlt","propTypes","intlShape","isRequired","PropTypes","string"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAGA;;;;AAEA;;AAEA;;AAEA;;AACA;;AACA;;;;;;AAEA,SAASA,iBAAT,OAA8C;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAe,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAArB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAU,0BAAS,gBAAT,EAA2BH,QAA3B,CAAhB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAoB,iCAA1B;AAEA,QAAMC,aAAa,gBACjB,qBAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KADT;AAEE,IAAA,WAAW,EAAG,GAAE,mCAAYC,YAAa,YAF3C;AAGE,IAAA,SAAS,EAAC,YAHZ;AAIE,IAAA,OAAO,EAAE,MAAM,qBAASJ,GAAT,EAAcH,QAAd,EAAwBI,aAAxB,EAAuC,oBAAvC,EAA6D;AAAEL,MAAAA;AAAF,KAA7D,CAJjB;AAAA,cAMGD,IAAI,CAACU,aAAL,CAAmBC,kBAASJ,aAA5B;AANH,IADF;AAWA,sBACE,qBAAC,iBAAD;AACE,IAAA,IAAI,EAAEK,4BADR;AAEE,IAAA,IAAI,eACF,qBAAC,sBAAD;AACE,MAAA,EAAE,EAAC,iCADL,CACuC;AADvC;AAEE,MAAA,cAAc,EAAC,uEAFjB;AAGE,MAAA,WAAW,EAAC,gDAHd;AAIE,MAAA,MAAM,EAAE;AAAEL,QAAAA;AAAF;AAJV;AAHJ,IADF;AAaD;;AAEDR,iBAAiB,CAACc,SAAlB,GAA8B;AAC5Bb,EAAAA,IAAI,EAAEc,gBAAUC,UADY;AAE5Bd,EAAAA,OAAO,EAAEe,mBAAUC,MAAV,CAAiBF;AAFE,CAA9B;;eAKe,sBAAWhB,iBAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport {\n  FormattedMessage, injectIntl, intlShape,\n} from '@edx/frontend-platform/i18n';\nimport { Hyperlink } from '@edx/paragon';\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\nimport { getConfig } from '@edx/frontend-platform';\n\nimport { useModel } from '../../../generic/model-store';\n\nimport Footnote from './Footnote';\nimport messages from './messages';\nimport { logClick } from './utils';\n\nfunction DashboardFootnote({ intl, variant }) {\n  const { courseId } = useSelector(state => state.courseware);\n  const { org } = useModel('courseHomeMeta', courseId);\n  const { administrator } = getAuthenticatedUser();\n\n  const dashboardLink = (\n    <Hyperlink\n      style={{ textDecoration: 'underline' }}\n      destination={`${getConfig().LMS_BASE_URL}/dashboard`}\n      className=\"text-reset\"\n      onClick={() => logClick(org, courseId, administrator, 'dashboard_footnote', { variant })}\n    >\n      {intl.formatMessage(messages.dashboardLink)}\n    </Hyperlink>\n  );\n\n  return (\n    <Footnote\n      icon={faCalendarAlt}\n      text={(\n        <FormattedMessage\n          id=\"courseCelebration.dashboardInfo\" // for historical reasons\n          defaultMessage=\"You can access this course and its materials on your {dashboardLink}.\"\n          description=\"Text that precedes link to learner's dashboard\"\n          values={{ dashboardLink }}\n        />\n      )}\n    />\n  );\n}\n\nDashboardFootnote.propTypes = {\n  intl: intlShape.isRequired,\n  variant: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(DashboardFootnote);\n"],"file":"DashboardFootnote.js"}