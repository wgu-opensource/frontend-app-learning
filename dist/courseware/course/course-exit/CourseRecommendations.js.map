{"version":3,"sources":["../../../../src/courseware/course/course-exit/CourseRecommendations.jsx"],"names":["messages","recommendationsHeading","id","description","defaultMessage","recommendationsCourseFooter","listJoin","browseCatalog","loadingRecommendations","ListStyles","punctuation","conjunction","CourseCard","original","title","image","owners","marketingUrl","onClick","intl","formatList","items","style","join","formatMessage","sp","formattedOwners","map","owner","key","subtitle","text","reserveLastWord","width","height","src","propTypes","PropTypes","shape","string","arrayOf","func","isRequired","intlShape","IntlCard","CourseRecommendations","variant","courseId","recommendationsStatus","state","recommendations","courseware","org","number","dispatch","courseKey","administrator","recommendationsLength","length","LOADING","course_key","recommendations_status","recommendations_length","FAILED","LOADED","onCardClick","url","e","preventDefault","setTimeout","window","location","href","recommendationData","recommendation","Header","accessor","pageSize","pageIndex","textDecoration","SEARCH_CATALOG_URL"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { getConfig } from '@edx/frontend-platform';\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport {\n  FormattedMessage, injectIntl, intlShape, defineMessages,\n} from '@edx/frontend-platform/i18n';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Hyperlink, DataTable, CardView, Card,\n} from '@edx/paragon';\nimport PropTypes from 'prop-types';\nimport truncate from 'truncate-html';\nimport { useModel } from '../../../generic/model-store';\nimport fetchCourseRecommendations from './data/thunks';\nimport { FAILED, LOADED, LOADING } from './data/slice';\nimport CatalogSuggestion from './CatalogSuggestion';\nimport PageLoading from '../../../generic/PageLoading';\nimport { logClick } from './utils';\n\nconst messages = defineMessages({\n  recommendationsHeading: {\n    id: 'courseCelebration.recommendations.heading',\n    description: 'Header for recommendations section of course celebration',\n    defaultMessage: 'Keep building your skills with these courses!',\n  },\n  recommendationsCourseFooter: {\n    id: 'courseCelebration.recommendations.label', // not very descriptive, but is historical\n    description: 'Label on a discovery-card that lets a user know that it is a course card',\n    defaultMessage: 'Course',\n  },\n  listJoin: {\n    id: 'courseCelebration.recommendations.formatting.list_join',\n    description: 'Joining mark or word for a list of items, use the {sp} placeholder to include space before the joining word',\n    // eslint-disable-next-line prefer-template\n    defaultMessage: ('{style, select, '\n      + 'punctuation {, } ' // HACK: select keys must match ListStyles, above, but must be statically coded for extract\n      + 'conjunction { {sp}and } ' // HACK: interpolating a space character to get a leading-space here\n      + 'other { }}'),\n  },\n  browseCatalog: {\n    id: 'courseCelebration.recommendations.browse_catalog',\n    description: 'Link to course catalog in course celebration',\n    defaultMessage: 'Explore more courses',\n  },\n  loadingRecommendations: {\n    id: 'courseCelebration.recommendations.loading_recommendations',\n    description: 'Screen-reader text for the loading screen for recommendations',\n    defaultMessage: 'Loading recommendations',\n  },\n});\n\nconst ListStyles = {\n  punctuation: 'punctuation',\n  conjunction: 'conjunction',\n};\n\nfunction CourseCard({\n  original: {\n    title,\n    image,\n    owners,\n    marketingUrl,\n    onClick,\n  },\n  intl,\n}) {\n  const formatList = (items, style) => (\n    items.join(intl.formatMessage(\n      messages.listJoin,\n      { style, sp: ' ' }, // HACK: there isn't a way to escape a leading space in the format, so pass one in\n    ))\n  );\n\n  const formattedOwners = formatList(\n    owners.map(owner => owner.key),\n    ListStyles.punctuation,\n    intl,\n  );\n\n  const subtitle = (\n    <FormattedMessage\n      id=\"courseCelebration.recommendations.card.schools.label\"\n      description=\"Screenreader label for the Schools and Partners running the course.\"\n      defaultMessage=\"Schools and Partners\"\n    >{text => (\n      <>\n        <span className=\"sr-only\">{text}: </span>\n        {truncate(formattedOwners, 40, { reserveLastWord: -1 })}\n      </>\n    )}\n    </FormattedMessage>\n  );\n\n  return (\n    <div\n      role=\"group\"\n      aria-label={title}\n    >\n      <Hyperlink\n        destination={marketingUrl}\n        className=\"text-decoration-none\"\n        onClick={onClick}\n      >\n        <Card isClickable style={{ width: '21rem', height: '100%' }}>\n          <Card.ImageCap src={image.src} />\n          <Card.Header title={truncate(title, 70, { reserveLastWord: -1 })} subtitle={subtitle} size=\"sm\" />\n          {/* Section is needed for internal vertical spacing to work out. If you can remove, be my guest */}\n          <Card.Section> <></> </Card.Section>\n          <Card.Footer textElement={intl.formatMessage(messages.recommendationsCourseFooter)}><></></Card.Footer>\n        </Card>\n      </Hyperlink>\n    </div>\n  );\n}\n\nCourseCard.propTypes = {\n  original: PropTypes.shape({\n    marketingUrl: PropTypes.string,\n    title: PropTypes.string,\n    image: PropTypes.shape({\n      src: PropTypes.string,\n    }),\n    owners: PropTypes.arrayOf(PropTypes.shape({\n      key: PropTypes.string,\n    })),\n    onClick: PropTypes.func,\n  }).isRequired,\n  intl: intlShape.isRequired,\n};\n\nconst IntlCard = injectIntl(CourseCard);\n\nfunction CourseRecommendations({ intl, variant }) {\n  const { courseId, recommendationsStatus } = useSelector(state => ({ ...state.recommendations, ...state.courseware }));\n  const { recommendations } = useModel('coursewareMeta', courseId);\n  const { org, number } = useModel('courseHomeMeta', courseId);\n  const dispatch = useDispatch();\n\n  const courseKey = `${org}+${number}`;\n  const { administrator } = getAuthenticatedUser();\n\n  useEffect(() => {\n    dispatch(fetchCourseRecommendations(courseKey, courseId));\n  }, [dispatch]);\n\n  const recommendationsLength = recommendations ? recommendations.length : 0;\n\n  if (recommendationsStatus && recommendationsStatus !== LOADING) {\n    sendTrackEvent('edx.ui.lms.course_exit.recommendations.viewed', {\n      course_key: courseKey,\n      recommendations_status: recommendationsStatus,\n      recommendations_length: recommendationsLength,\n    });\n  }\n\n  if (recommendationsStatus === FAILED || (recommendationsStatus === LOADED && recommendationsLength < 2)) {\n    return (<CatalogSuggestion variant={variant} />);\n  }\n\n  if (recommendationsStatus === LOADING) {\n    return <PageLoading srMessage={intl.formatMessage(messages.loadingRecommendations)} />;\n  }\n\n  const onCardClick = (url) => (e) => {\n    e.preventDefault();\n    logClick(org, courseId, administrator, 'recommendation_discovery_card');\n    setTimeout(() => {\n      window.location.href = url;\n    }, (200));\n  };\n\n  const recommendationData = recommendations.map((recommendation) => (\n    { ...recommendation, onClick: onCardClick(recommendation.marketingUrl) }\n  ));\n\n  return (\n    <div className=\"course-recommendations d-flex flex-column align-items-center\" data-testid=\"course-recommendations\">\n      <h2 className=\"text-center mb-3\">{intl.formatMessage(messages.recommendationsHeading)}</h2>\n      <div className=\"mb-2 mt-3\">\n        <DataTable\n          isPaginated\n          itemCount={recommendationsLength}\n          data={recommendationData}\n          columns={[{ Header: 'Title', accessor: 'title' }]}\n          initialState={{\n            pageSize: 3,\n            pageIndex: 0,\n          }}\n        >\n          <CardView CardComponent={IntlCard} />\n        </DataTable>\n      </div>\n      <Hyperlink\n        style={{ textDecoration: 'underline' }}\n        destination={getConfig().SEARCH_CATALOG_URL}\n        className=\"text-center\"\n      >\n        {intl.formatMessage(messages.browseCatalog)}\n      </Hyperlink>\n    </div>\n  );\n}\n\nCourseRecommendations.propTypes = {\n  intl: intlShape.isRequired,\n  variant: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(CourseRecommendations);\n"],"file":"CourseRecommendations.js"}