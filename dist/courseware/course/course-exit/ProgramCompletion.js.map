{"version":3,"sources":["../../../../src/courseware/course/course-exit/ProgramCompletion.jsx"],"names":["programTypes","ProgramCompletion","intl","progress","title","type","url","includes","notStarted","inProgress","programLink","textDecoration","formatMessage","messages","dashboardLink","programsLastCourseHeader","SUPPORT_URL","microBachelorsLearnMore","CREDENTIALS_BASE_URL","applyForCredit","microMastersMessage","microMastersLearnMore","certImage","certificateImage","maxWidth","propTypes","intlShape","isRequired","PropTypes","shape","completed","number","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Alert, Button, Hyperlink } from '@edx/paragon';\nimport certImage from '../../../generic/assets/edX_certificate.png';\nimport messages from './messages';\n\n/**\n * Note for Open edX developers:\n * There are pieces of this component that are hard-coded and specific to edX that may not apply to your organization.\n * This includes mentions of our edX program types (MicroMasters, MicroBachelors, Professional Certificate, and\n * XSeries), along with their respective support article URLs and image variable names.\n *\n * Currently, this component will not render unless the learner's completed course has a related program of one of the\n * four aforementioned types. This will not impact the parent components (i.e. CourseCelebration will render normally).\n */\n\nconst programTypes = ['microbachelors', 'micromasters', 'professional-certificate', 'xseries'];\n\nfunction ProgramCompletion({\n  intl,\n  progress,\n  title,\n  type,\n  url,\n}) {\n  if (!programTypes.includes(type) || progress.notStarted !== 0 || progress.inProgress !== 0) {\n    return null;\n  }\n\n  const programLink = (\n    <Hyperlink\n      style={{ textDecoration: 'underline' }}\n      destination={url}\n      className=\"text-reset\"\n    >\n      {intl.formatMessage(messages.dashboardLink)}\n    </Hyperlink>\n  );\n\n  return (\n    <Alert variant=\"primary\" className=\"my-3\" data-testid=\"program-completion\">\n      <div className=\"d-flex\">\n        <div className=\"col order-1 order-md-0 pl-0 pr-0 pr-md-5\">\n          <div className=\"h4\">{intl.formatMessage(messages.programsLastCourseHeader, { title })}</div>\n          <p>\n            <FormattedMessage\n              id=\"courseExit.programCompletion.dashboardMessage\"\n              defaultMessage=\"To view your certificate status, check the Programs section of your {programLink}.\"\n              values={{ programLink }}\n              description=\"Text that precedes link to program page\"\n            />\n          </p>\n          {type === 'microbachelors' && (\n            <>\n              <p>\n                <Hyperlink\n                  style={{ textDecoration: 'underline' }}\n                  destination={`${getConfig().SUPPORT_URL}/hc/en-us/articles/360004623154`}\n                  className=\"text-reset\"\n                >\n                  {intl.formatMessage(messages.microBachelorsLearnMore)}\n                </Hyperlink>\n              </p>\n              <Button variant=\"primary\" className=\"mb-2 mb-sm-0\" href={`${getConfig().CREDENTIALS_BASE_URL}/records`}>\n                {intl.formatMessage(messages.applyForCredit)}\n              </Button>\n            </>\n          )}\n          {type === 'micromasters' && (\n            <p>\n              {intl.formatMessage(messages.microMastersMessage)}\n              {' '}\n              <Hyperlink\n                style={{ textDecoration: 'underline' }}\n                destination={`${getConfig().SUPPORT_URL}/hc/en-us/articles/360010346853-Does-a-Micromasters-certificate-count-towards-the-online-Master-s-degree-`}\n                className=\"text-reset\"\n              >\n                {intl.formatMessage(messages.microMastersLearnMore)}\n              </Hyperlink>\n            </p>\n          )}\n        </div>\n        <div className=\"col-12 order-0 col-md-3 order-md-1 w-100 mb-3 p-0 text-center\">\n          <img\n            src={certImage}\n            alt={`${intl.formatMessage(messages.certificateImage)}`}\n            className=\"w-100\"\n            style={{ maxWidth: '13rem' }}\n            data-testid={type}\n          />\n        </div>\n      </div>\n    </Alert>\n  );\n}\n\nProgramCompletion.propTypes = {\n  intl: intlShape.isRequired,\n  progress: PropTypes.shape({\n    completed: PropTypes.number.isRequired,\n    inProgress: PropTypes.number.isRequired,\n    notStarted: PropTypes.number.isRequired,\n  }).isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(ProgramCompletion);\n"],"file":"ProgramCompletion.js"}