{"version":3,"sources":["../../../../src/courseware/course/course-exit/CatalogSuggestion.jsx"],"names":["CatalogSuggestion","intl","variant","courseId","state","courseware","org","administrator","searchOurCatalogLink","textDecoration","SEARCH_CATALOG_URL","formatMessage","messages","faSearch","width","propTypes","intlShape","isRequired","PropTypes","string"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAGA;;;;AAEA;;AAEA;;AAEA;;AACA;;;;;;AAEA,SAASA,iBAAT,OAA8C;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAe,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAArB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAU,0BAAS,gBAAT,EAA2BH,QAA3B,CAAhB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAoB,iCAA1B;AAEA,QAAMC,oBAAoB,gBACxB,qBAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KADT;AAEE,IAAA,WAAW,EAAE,mCAAYC,kBAF3B;AAGE,IAAA,SAAS,EAAC,YAHZ;AAIE,IAAA,OAAO,EAAE,MAAM,qBAASJ,GAAT,EAAcH,QAAd,EAAwBI,aAAxB,EAAuC,gBAAvC,EAAyD;AAAEL,MAAAA;AAAF,KAAzD,CAJjB;AAAA,cAMGD,IAAI,CAACU,aAAL,CAAmBC,kBAASJ,oBAA5B;AANH,IADF;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAA4D,mBAAY,oBAAxE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA,8BACE,qBAAC,iCAAD;AAAiB,QAAA,IAAI,EAAEK,kBAAvB;AAAiC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAxC,QADF,uBAEE,qBAAC,sBAAD;AACE,QAAA,EAAE,EAAC,oCADL;AAEE,QAAA,cAAc,EAAC,6FAFjB;AAGE,QAAA,MAAM,EAAE;AAAEN,UAAAA;AAAF,SAHV;AAIE,QAAA,WAAW,EAAC;AAJd,QAFF;AAAA;AADF,IADF;AAaD;;AAEDR,iBAAiB,CAACe,SAAlB,GAA8B;AAC5Bd,EAAAA,IAAI,EAAEe,gBAAUC,UADY;AAE5Bf,EAAAA,OAAO,EAAEgB,mBAAUC,MAAV,CAAiBF;AAFE,CAA9B;;eAKe,sBAAWjB,iBAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport {\n  FormattedMessage, injectIntl, intlShape,\n} from '@edx/frontend-platform/i18n';\nimport { Hyperlink } from '@edx/paragon';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { useModel } from '../../../generic/model-store';\n\nimport messages from './messages';\nimport { logClick } from './utils';\n\nfunction CatalogSuggestion({ intl, variant }) {\n  const { courseId } = useSelector(state => state.courseware);\n  const { org } = useModel('courseHomeMeta', courseId);\n  const { administrator } = getAuthenticatedUser();\n\n  const searchOurCatalogLink = (\n    <Hyperlink\n      style={{ textDecoration: 'underline' }}\n      destination={getConfig().SEARCH_CATALOG_URL}\n      className=\"text-reset\"\n      onClick={() => logClick(org, courseId, administrator, 'catalog_search', { variant })}\n    >\n      {intl.formatMessage(messages.searchOurCatalogLink)}\n    </Hyperlink>\n  );\n\n  return (\n    <div className=\"row w-100 mx-0 my-2 justify-content-center\" data-testid=\"catalog-suggestion\">\n      <div className=\"col col-md-8 p-4 bg-info-100 text-center\">\n        <FontAwesomeIcon icon={faSearch} style={{ width: '20px' }} />&nbsp;\n        <FormattedMessage\n          id=\"courseExit.catalogSearchSuggestion\"\n          defaultMessage=\"Looking to learn more? {searchOurCatalogLink} to find more courses and programs to explore.\"\n          values={{ searchOurCatalogLink }}\n          description=\"Suggesting to learner to explore other course. Shown when they finish the course\"\n        />\n      </div>\n    </div>\n  );\n}\n\nCatalogSuggestion.propTypes = {\n  intl: intlShape.isRequired,\n  variant: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(CatalogSuggestion);\n"],"file":"CatalogSuggestion.js"}