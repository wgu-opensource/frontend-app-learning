{"version":3,"file":"CourseExit.js","names":["_react","_interopRequireWildcard","require","_frontendPlatform","_i18n","_paragon","_reactRedux","_reactRouterDom","_CourseCelebration","_interopRequireDefault","_CourseInProgress","_CourseNonPassing","_utils","_messages","_thunks","_modelStore","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","CourseExit","_ref","intl","courseId","useSelector","state","courseware","certificateData","courseExitPageIsActive","courseGoals","enrollmentMode","hasScheduledContent","isEnrolled","userHasPassingGrade","useModel","isMasquerading","canViewCertificate","mode","getCourseExitMode","useEffect","unsubscribeFromGoalReminders","body","COURSE_EXIT_MODES","nonPassing","jsx","inProgress","celebration","Navigate","to","replace","jsxs","Fragment","children","className","Button","variant","href","getConfig","LMS_BASE_URL","formatMessage","messages","viewCoursesButton","propTypes","intlShape","isRequired","_default","injectIntl","exports"],"sources":["../../../../src/courseware/course/course-exit/CourseExit.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Button } from '@edx/paragon';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport CourseCelebration from './CourseCelebration';\nimport CourseInProgress from './CourseInProgress';\nimport CourseNonPassing from './CourseNonPassing';\nimport { COURSE_EXIT_MODES, getCourseExitMode } from './utils';\nimport messages from './messages';\nimport { unsubscribeFromGoalReminders } from './data/thunks';\n\nimport { useModel } from '../../../generic/model-store';\n\nconst CourseExit = ({ intl }) => {\n  const { courseId } = useSelector(state => state.courseware);\n  const {\n    certificateData,\n    courseExitPageIsActive,\n    courseGoals,\n    enrollmentMode,\n    hasScheduledContent,\n    isEnrolled,\n    userHasPassingGrade,\n  } = useModel('coursewareMeta', courseId);\n\n  const {\n    isMasquerading,\n    canViewCertificate,\n  } = useModel('courseHomeMeta', courseId);\n\n  const mode = getCourseExitMode(\n    certificateData,\n    hasScheduledContent,\n    isEnrolled,\n    userHasPassingGrade,\n    courseExitPageIsActive,\n    canViewCertificate,\n  );\n\n  // Audit users cannot fully complete a course, so we will\n  // unsubscribe them from goal reminders once they reach the course exit page\n  // to avoid spamming them with goal reminder emails\n  if (courseGoals && enrollmentMode === 'audit' && !isMasquerading) {\n    useEffect(() => {\n      unsubscribeFromGoalReminders(courseId);\n    }, []);\n  }\n\n  let body = null;\n  if (mode === COURSE_EXIT_MODES.nonPassing) {\n    body = (<CourseNonPassing />);\n  } else if (mode === COURSE_EXIT_MODES.inProgress) {\n    body = (<CourseInProgress />);\n  } else if (mode === COURSE_EXIT_MODES.celebration) {\n    body = (<CourseCelebration />);\n  } else {\n    return (<Navigate to={`/course/${courseId}`} replace />);\n  }\n\n  return (\n    <>\n      <div className=\"row w-100 mt-2 mb-4 justify-content-end\">\n        <Button\n          variant=\"outline-primary\"\n          href={`${getConfig().LMS_BASE_URL}/dashboard`}\n        >\n          {intl.formatMessage(messages.viewCoursesButton)}\n        </Button>\n      </div>\n      {body}\n    </>\n  );\n};\n\nCourseExit.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(CourseExit);\n"],"mappings":"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"}