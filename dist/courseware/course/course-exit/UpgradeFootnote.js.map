{"version":3,"sources":["../../../../src/courseware/course/course-exit/UpgradeFootnote.jsx"],"names":["UpgradeFootnote","deadline","href","intl","courseId","state","courseware","org","administrator","upgradeLink","textDecoration","formatMessage","messages","expirationDate","faCalendarAlt","propTypes","PropTypes","instanceOf","Date","isRequired","string","intlShape"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAGA;;;;AAGA;;AACA;;AACA;;AACA;;;;;;AAEA,SAASA,eAAT,OAAmD;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,GAA0B;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAe,6BAAYC,KAAK,IAAIA,KAAK,CAACC,UAA3B,CAArB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAU,0BAAS,gBAAT,EAA2BH,QAA3B,CAAhB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAoB,iCAA1B;AAEA,QAAMC,WAAW,gBACf,qBAAC,kBAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KADT;AAEE,IAAA,WAAW,EAAER,IAFf;AAGE,IAAA,SAAS,EAAC,YAHZ;AAIE,IAAA,OAAO,EAAE,MAAM,qBAASK,GAAT,EAAcH,QAAd,EAAwBI,aAAxB,EAAuC,kBAAvC,CAJjB;AAAA,cAMGL,IAAI,CAACQ,aAAL,CAAmBC,kBAASH,WAA5B;AANH,IADF;AAWA,QAAMI,cAAc,gBAClB,qBAAC,mBAAD;AACE,IAAA,GAAG,EAAC,SADN;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,KAAK,EAAEZ;AAJT,IADF;AASA,sBACE,qBAAC,iBAAD;AACE,IAAA,IAAI,EAAEa,4BADR;AAEE,IAAA,IAAI,eACF,qBAAC,sBAAD;AACE,MAAA,EAAE,EAAC,4BADL;AAEE,MAAA,cAAc,EAAC,kIAFjB;AAGE,MAAA,MAAM,EAAE;AACND,QAAAA,cADM;AAENJ,QAAAA;AAFM,OAHV;AAOE,MAAA,WAAW,EAAC;AAPd;AAHJ,IADF;AAgBD;;AAEDT,eAAe,CAACe,SAAhB,GAA4B;AAC1Bd,EAAAA,QAAQ,EAAEe,mBAAUC,UAAV,CAAqBC,IAArB,EAA2BC,UADX;AAE1BjB,EAAAA,IAAI,EAAEc,mBAAUI,MAAV,CAAiBD,UAFG;AAG1BhB,EAAAA,IAAI,EAAEkB,gBAAUF;AAHU,CAA5B;;eAMe,sBAAWnB,eAAX,C","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport {\n  FormattedDate, FormattedMessage, injectIntl, intlShape,\n} from '@edx/frontend-platform/i18n';\nimport { Hyperlink } from '@edx/paragon';\nimport { faCalendarAlt } from '@fortawesome/free-regular-svg-icons';\n\nimport Footnote from './Footnote';\nimport { logClick } from './utils';\nimport messages from './messages';\nimport { useModel } from '../../../generic/model-store';\n\nfunction UpgradeFootnote({ deadline, href, intl }) {\n  const { courseId } = useSelector(state => state.courseware);\n  const { org } = useModel('courseHomeMeta', courseId);\n  const { administrator } = getAuthenticatedUser();\n\n  const upgradeLink = (\n    <Hyperlink\n      style={{ textDecoration: 'underline' }}\n      destination={href}\n      className=\"text-reset\"\n      onClick={() => logClick(org, courseId, administrator, 'upgrade_footnote')}\n    >\n      {intl.formatMessage(messages.upgradeLink)}\n    </Hyperlink>\n  );\n\n  const expirationDate = (\n    <FormattedDate\n      day=\"numeric\"\n      month=\"long\"\n      year=\"numeric\"\n      value={deadline}\n    />\n  );\n\n  return (\n    <Footnote\n      icon={faCalendarAlt}\n      text={(\n        <FormattedMessage\n          id=\"courseExit.upgradeFootnote\"\n          defaultMessage=\"Access to this course and its materials are available on your dashboard until {expirationDate}. To extend access, {upgradeLink}.\"\n          values={{\n            expirationDate,\n            upgradeLink,\n          }}\n          description=\"Message body to tell learner until when the materiel will be available, and to suggest to upgrade\"\n        />\n      )}\n    />\n  );\n}\n\nUpgradeFootnote.propTypes = {\n  deadline: PropTypes.instanceOf(Date).isRequired,\n  href: PropTypes.string.isRequired,\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(UpgradeFootnote);\n"],"file":"UpgradeFootnote.js"}