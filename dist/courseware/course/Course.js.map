{"version":3,"sources":["../../../src/courseware/course/Course.jsx"],"names":["Course","courseId","sequenceId","unitId","nextSequenceHandler","previousSequenceHandler","unitNavigationHandler","windowWidth","course","celebrations","isStaff","sequence","section","sectionId","pageTitleBreadCrumbs","filter","element","map","title","dispatch","firstSectionCelebrationOpen","setFirstSectionCelebrationOpen","weeklyGoalCelebrationOpen","setWeeklyGoalCelebrationOpen","streakLengthToCelebrate","weeklyGoal","shouldDisplayTriggers","breakpoints","small","minWidth","daysPerWeek","courseGoals","selectedGoal","shouldDisplayNotificationTrayOpenOnLoad","medium","MMP2P","celebrateFirstSection","firstSection","join","SITE_NAME","id","meta","modalLock","propTypes","PropTypes","string","func","isRequired","number","defaultProps","CourseWrapper","props","width","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { getConfig } from '@edx/frontend-platform';\nimport { breakpoints, useWindowSize } from '@edx/paragon';\n\nimport { AlertList } from '../../generic/user-messages';\n\nimport Sequence from './sequence';\n\nimport { CelebrationModal, shouldCelebrateOnSectionLoad, WeeklyGoalCelebrationModal } from './celebration';\nimport ContentTools from './content-tools';\nimport CourseBreadcrumbs from './CourseBreadcrumbs';\nimport SidebarProvider from './sidebar/SidebarContextProvider';\nimport SidebarTriggers from './sidebar/SidebarTriggers';\n\nimport { useModel } from '../../generic/model-store';\nimport { getSessionStorage, setSessionStorage } from '../../data/sessionStorage';\n\n/** [MM-P2P] Experiment */\nimport { initCoursewareMMP2P, MMP2PBlockModal } from '../../experiments/mm-p2p';\n\nfunction Course({\n  courseId,\n  sequenceId,\n  unitId,\n  nextSequenceHandler,\n  previousSequenceHandler,\n  unitNavigationHandler,\n  windowWidth,\n}) {\n  const course = useModel('coursewareMeta', courseId);\n  const {\n    celebrations,\n    isStaff,\n  } = useModel('courseHomeMeta', courseId);\n  const sequence = useModel('sequences', sequenceId);\n  const section = useModel('sections', sequence ? sequence.sectionId : null);\n\n  const pageTitleBreadCrumbs = [\n    sequence,\n    section,\n    course,\n  ].filter(element => element != null).map(element => element.title);\n\n  // Below the tabs, above the breadcrumbs alerts (appearing in the order listed here)\n  const dispatch = useDispatch();\n\n  const [firstSectionCelebrationOpen, setFirstSectionCelebrationOpen] = useState(false);\n  // If streakLengthToCelebrate is populated, that modal takes precedence. Wait til the next load to display\n  // the weekly goal celebration modal.\n  const [weeklyGoalCelebrationOpen, setWeeklyGoalCelebrationOpen] = useState(\n    celebrations && !celebrations.streakLengthToCelebrate && celebrations.weeklyGoal,\n  );\n  const shouldDisplayTriggers = windowWidth >= breakpoints.small.minWidth;\n  const daysPerWeek = course?.courseGoals?.selectedGoal?.daysPerWeek;\n\n  // Responsive breakpoints for showing the notification button/tray\n  const shouldDisplayNotificationTrayOpenOnLoad = windowWidth > breakpoints.medium.minWidth;\n\n  // Course specific notification tray open/closed persistance by browser session\n  if (!getSessionStorage(`notificationTrayStatus.${courseId}`)) {\n    if (shouldDisplayNotificationTrayOpenOnLoad) {\n      setSessionStorage(`notificationTrayStatus.${courseId}`, 'open');\n    } else {\n      // responsive version displays the tray closed on initial load, set the sessionStorage to closed\n      setSessionStorage(`notificationTrayStatus.${courseId}`, 'closed');\n    }\n  }\n\n  /** [MM-P2P] Experiment */\n  const MMP2P = initCoursewareMMP2P(courseId, sequenceId, unitId);\n\n  useEffect(() => {\n    const celebrateFirstSection = celebrations && celebrations.firstSection;\n    setFirstSectionCelebrationOpen(shouldCelebrateOnSectionLoad(\n      courseId,\n      sequenceId,\n      celebrateFirstSection,\n      dispatch,\n      celebrations,\n    ));\n  }, [sequenceId]);\n\n  return (\n    <SidebarProvider courseId={courseId} unitId={unitId}>\n      <Helmet>\n        <title>{`${pageTitleBreadCrumbs.join(' | ')} | ${getConfig().SITE_NAME}`}</title>\n      </Helmet>\n      <div className=\"position-relative d-flex align-items-start\">\n        <CourseBreadcrumbs\n          courseId={courseId}\n          sectionId={section ? section.id : null}\n          sequenceId={sequenceId}\n          isStaff={isStaff}\n          unitId={unitId}\n          //* * [MM-P2P] Experiment */\n          mmp2p={MMP2P}\n        />\n        {shouldDisplayTriggers && (\n          <SidebarTriggers />\n        )}\n      </div>\n\n      <AlertList topic=\"sequence\" />\n      <Sequence\n        unitId={unitId}\n        sequenceId={sequenceId}\n        courseId={courseId}\n        unitNavigationHandler={unitNavigationHandler}\n        nextSequenceHandler={nextSequenceHandler}\n        previousSequenceHandler={previousSequenceHandler}\n        //* * [MM-P2P] Experiment */\n        mmp2p={MMP2P}\n      />\n      <CelebrationModal\n        courseId={courseId}\n        isOpen={firstSectionCelebrationOpen}\n        onClose={() => setFirstSectionCelebrationOpen(false)}\n      />\n      <WeeklyGoalCelebrationModal\n        courseId={courseId}\n        daysPerWeek={daysPerWeek}\n        isOpen={weeklyGoalCelebrationOpen}\n        onClose={() => setWeeklyGoalCelebrationOpen(false)}\n      />\n      <ContentTools course={course} />\n      { /** [MM-P2P] Experiment */ }\n      { MMP2P.meta.modalLock && <MMP2PBlockModal options={MMP2P} /> }\n    </SidebarProvider>\n  );\n}\n\nCourse.propTypes = {\n  courseId: PropTypes.string,\n  sequenceId: PropTypes.string,\n  unitId: PropTypes.string,\n  nextSequenceHandler: PropTypes.func.isRequired,\n  previousSequenceHandler: PropTypes.func.isRequired,\n  unitNavigationHandler: PropTypes.func.isRequired,\n  windowWidth: PropTypes.number.isRequired,\n};\n\nCourse.defaultProps = {\n  courseId: null,\n  sequenceId: null,\n  unitId: null,\n};\n\nfunction CourseWrapper(props) {\n  // useWindowSize initially returns an undefined width intentionally at first.\n  // See https://www.joshwcomeau.com/react/the-perils-of-rehydration/ for why.\n  // But <Course> has some tricky window-size-dependent, session-storage-setting logic and React would yell at us if\n  // we exited that component early, before hitting all the useState() calls.\n  // So just skip all that until we have a window size available.\n  const windowWidth = useWindowSize().width;\n  if (windowWidth === undefined) {\n    return null;\n  }\n\n  return <Course {...props} windowWidth={windowWidth} />;\n}\n\nexport default CourseWrapper;\n"],"file":"Course.js"}