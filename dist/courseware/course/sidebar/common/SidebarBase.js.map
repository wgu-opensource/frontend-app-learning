{"version":3,"sources":["../../../../../src/courseware/course/sidebar/common/SidebarBase.jsx"],"names":["SidebarBase","intl","title","ariaLabel","sidebarId","className","children","showTitleBar","width","toggleSidebar","shouldDisplayFullScreen","currentSidebar","SidebarContext","receiveMessage","data","type","formatMessage","messages","responsiveCloseNotificationTray","ArrowBackIos","Close","Icon","closeNotificationTrigger","propTypes","intlShape","isRequired","PropTypes","string","element","bool","defaultProps"],"mappings":"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","sourcesContent":["import { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Icon, IconButton } from '@edx/paragon';\nimport { ArrowBackIos, Close } from '@edx/paragon/icons';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useContext } from 'react';\nimport { useEventListener } from '../../../../generic/hooks';\nimport messages from '../../messages';\nimport SidebarContext from '../SidebarContext';\n\nfunction SidebarBase({\n  intl,\n  title,\n  ariaLabel,\n  sidebarId,\n  className,\n  children,\n  showTitleBar,\n  width,\n}) {\n  const {\n    toggleSidebar,\n    shouldDisplayFullScreen,\n    currentSidebar,\n  } = useContext(SidebarContext);\n\n  const receiveMessage = useCallback(({ data }) => {\n    const { type } = data;\n    if (type === 'learning.events.sidebar.close') {\n      toggleSidebar(null);\n    }\n  }, [sidebarId, toggleSidebar]);\n\n  useEventListener('message', receiveMessage);\n\n  return currentSidebar === sidebarId && (\n    <section\n      className={classNames('ml-0 ml-lg-4 border border-light-400 rounded-sm h-auto align-top', {\n        'bg-white m-0 border-0 fixed-top vh-100 rounded-0': shouldDisplayFullScreen,\n      }, className)}\n      style={{ width: shouldDisplayFullScreen ? '100%' : width }}\n      aria-label={ariaLabel}\n    >\n      {shouldDisplayFullScreen ? (\n        <div\n          className=\"pt-2 pb-2.5 border-bottom border-light-400 d-flex align-items-center ml-2\"\n          onClick={() => toggleSidebar(null)}\n          onKeyDown={() => toggleSidebar(null)}\n          role=\"button\"\n          tabIndex=\"0\"\n          alt={intl.formatMessage(messages.responsiveCloseNotificationTray)}\n        >\n          <Icon src={ArrowBackIos} />\n          <span className=\"font-weight-bold m-2 d-inline-block\">\n            {intl.formatMessage(messages.responsiveCloseNotificationTray)}\n          </span>\n        </div>\n      ) : null}\n      {showTitleBar && (\n        <>\n          <div className=\"d-flex align-items-center\">\n            <span className=\"p-2.5 d-inline-block\">{title}</span>\n            {shouldDisplayFullScreen\n              ? null\n              : (\n                <div className=\"d-inline-flex mr-2 mt-1.5 ml-auto\">\n                  <IconButton\n                    src={Close}\n                    size=\"sm\"\n                    iconAs={Icon}\n                    onClick={() => toggleSidebar(null)}\n                    variant=\"primary\"\n                    alt={intl.formatMessage(messages.closeNotificationTrigger)}\n                  />\n                </div>\n              )}\n          </div>\n          <div className=\"py-1 bg-gray-100 border-top border-bottom border-light-400\" />\n        </>\n      )}\n      {children}\n    </section>\n  );\n}\n\nSidebarBase.propTypes = {\n  intl: intlShape.isRequired,\n  title: PropTypes.string.isRequired,\n  ariaLabel: PropTypes.string.isRequired,\n  sidebarId: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  showTitleBar: PropTypes.bool,\n  width: PropTypes.string,\n};\n\nSidebarBase.defaultProps = {\n  width: '31rem',\n  showTitleBar: true,\n  className: '',\n};\n\nexport default injectIntl(SidebarBase);\n"],"file":"SidebarBase.js"}