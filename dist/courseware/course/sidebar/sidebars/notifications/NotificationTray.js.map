{"version":3,"sources":["../../../../../../src/courseware/course/sidebar/sidebars/notifications/NotificationTray.jsx"],"names":["NotificationTray","intl","courseId","onNotificationSeen","shouldDisplayFullScreen","upgradeNotificationCurrentState","setUpgradeNotificationCurrentState","SidebarContext","course","accessExpiration","contentTypeGatingEnabled","marketingUrl","offer","timeOffsetMillis","userTimezone","org","verifiedMode","setTimeout","formatMessage","messages","notificationTitle","notificationTray","ID","noNotificationsMessage","propTypes","intlShape","isRequired","Trigger","NotificationTrigger"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,SAASA,gBAAT,OAAoC;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAClC,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,kBAFI;AAGJC,IAAAA,uBAHI;AAIJC,IAAAA,+BAJI;AAKJC,IAAAA;AALI,MAMF,uBAAWC,uBAAX,CANJ;AAOA,QAAMC,MAAM,GAAG,0BAAS,gBAAT,EAA2BN,QAA3B,CAAf;AAEA,QAAM;AACJO,IAAAA,gBADI;AAEJC,IAAAA,wBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,gBALI;AAMJC,IAAAA;AANI,MAOFN,MAPJ;AASA,QAAM;AACJO,IAAAA,GADI;AAEJC,IAAAA;AAFI,MAGF,0BAAS,gBAAT,EAA2Bd,QAA3B,CAHJ,CAnBkC,CAwBlC;;AACA,wBAAU,MAAM;AAAEe,IAAAA,UAAU,CAACd,kBAAD,EAAqB,IAArB,CAAV;AAAuC,GAAzD,EAA2D,EAA3D;AAEA,sBACE,qBAAC,oBAAD;AACE,IAAA,KAAK,EAAEF,IAAI,CAACiB,aAAL,CAAmBC,kBAASC,iBAA5B,CADT;AAEE,IAAA,SAAS,EAAEnB,IAAI,CAACiB,aAAL,CAAmBC,kBAASE,gBAA5B,CAFb;AAGE,IAAA,SAAS,EAAEC,uBAHb;AAIE,IAAA,SAAS,EAAE,yBAAW;AAAE,eAAS,CAACN,YAAD,IAAiB,CAACZ;AAA7B,KAAX,CAJb;AAAA,2BAME;AAAA,gBAAMY,YAAY,gBAEd,qBAAC,4BAAD;AACE,QAAA,KAAK,EAAEJ,KADT;AAEE,QAAA,YAAY,EAAEI,YAFhB;AAGE,QAAA,gBAAgB,EAAEP,gBAHpB;AAIE,QAAA,wBAAwB,EAAEC,wBAJ5B;AAKE,QAAA,YAAY,EAAEC,YALhB;AAME,QAAA,cAAc,EAAC,WANjB;AAOE,QAAA,YAAY,EAAEG,YAPhB;AAQE,QAAA,mBAAmB,EAAE,KARvB;AASE,QAAA,gBAAgB,EAAED,gBATpB;AAUE,QAAA,QAAQ,EAAEX,QAVZ;AAWE,QAAA,GAAG,EAAEa,GAXP;AAYE,QAAA,+BAA+B,EAAEV,+BAZnC;AAaE,QAAA,kCAAkC,EAAEC;AAbtC,QAFc,gBAkBd;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BL,IAAI,CAACiB,aAAL,CAAmBC,kBAASI,sBAA5B;AAA1B;AAlBJ;AANF,IADF;AA8BD;;AAEDvB,gBAAgB,CAACwB,SAAjB,GAA6B;AAC3BvB,EAAAA,IAAI,EAAEwB,gBAAUC;AADW,CAA7B;AAIA1B,gBAAgB,CAAC2B,OAAjB,GAA2BC,4BAA3B;AACA5B,gBAAgB,CAACsB,EAAjB,GAAsBA,uBAAtB;;eAEe,sBAAWtB,gBAAX,C","sourcesContent":["import { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport classNames from 'classnames';\nimport React, { useContext, useEffect } from 'react';\nimport { useModel } from '../../../../../generic/model-store';\nimport UpgradeNotification from '../../../../../generic/upgrade-notification/UpgradeNotification';\n\nimport messages from '../../../messages';\nimport SidebarBase from '../../common/SidebarBase';\nimport SidebarContext from '../../SidebarContext';\nimport NotificationTrigger, { ID } from './NotificationTrigger';\n\nfunction NotificationTray({ intl }) {\n  const {\n    courseId,\n    onNotificationSeen,\n    shouldDisplayFullScreen,\n    upgradeNotificationCurrentState,\n    setUpgradeNotificationCurrentState,\n  } = useContext(SidebarContext);\n  const course = useModel('coursewareMeta', courseId);\n\n  const {\n    accessExpiration,\n    contentTypeGatingEnabled,\n    marketingUrl,\n    offer,\n    timeOffsetMillis,\n    userTimezone,\n  } = course;\n\n  const {\n    org,\n    verifiedMode,\n  } = useModel('courseHomeMeta', courseId);\n\n  // After three seconds, update notificationSeen (to hide red dot)\n  useEffect(() => { setTimeout(onNotificationSeen, 3000); }, []);\n\n  return (\n    <SidebarBase\n      title={intl.formatMessage(messages.notificationTitle)}\n      ariaLabel={intl.formatMessage(messages.notificationTray)}\n      sidebarId={ID}\n      className={classNames({ 'h-100': !verifiedMode && !shouldDisplayFullScreen })}\n    >\n      <div>{verifiedMode\n        ? (\n          <UpgradeNotification\n            offer={offer}\n            verifiedMode={verifiedMode}\n            accessExpiration={accessExpiration}\n            contentTypeGatingEnabled={contentTypeGatingEnabled}\n            marketingUrl={marketingUrl}\n            upsellPageName=\"in_course\"\n            userTimezone={userTimezone}\n            shouldDisplayBorder={false}\n            timeOffsetMillis={timeOffsetMillis}\n            courseId={courseId}\n            org={org}\n            upgradeNotificationCurrentState={upgradeNotificationCurrentState}\n            setupgradeNotificationCurrentState={setUpgradeNotificationCurrentState}\n          />\n        ) : (\n          <p className=\"p-3 small\">{intl.formatMessage(messages.noNotificationsMessage)}</p>\n        )}\n      </div>\n    </SidebarBase>\n  );\n}\n\nNotificationTray.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nNotificationTray.Trigger = NotificationTrigger;\nNotificationTray.ID = ID;\n\nexport default injectIntl(NotificationTray);\n"],"file":"NotificationTray.js"}