{"version":3,"sources":["../../../../src/courseware/course/course-license/CourseLicense.jsx"],"names":["CreativeCommonsLicenseTags","by","intlMessagesId","icon","faCreativeCommonsBy","nc","faCreativeCommonsNc","nd","faCreativeCommonsNd","sa","faCreativeCommonsSa","zero","faCreativeCommonsZero","parseLicense","license","colonIndex","indexOf","licenseType","slice","trim","optionStr","options","version","defaultVersion","split","forEach","option","key","value","toLowerCase","Object","keys","length","CourseLicense","intl","renderAllRightsReservedLicense","faCopyright","formatMessage","messages","renderCreativeCommonsLicense","activeCreativeCommonsLicenseTags","join","faCreativeCommons","map","tag","licenseOptions","licenseVersion","propTypes","PropTypes","string","intlShape","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopyright } from '@fortawesome/free-regular-svg-icons';\nimport {\n  faCreativeCommons,\n  faCreativeCommonsBy,\n  faCreativeCommonsNc,\n  faCreativeCommonsNd,\n  faCreativeCommonsSa,\n  faCreativeCommonsZero,\n} from '@fortawesome/free-brands-svg-icons';\n\nimport messages from './messages';\n\nconst CreativeCommonsLicenseTags = {\n  by: {\n    intlMessagesId: 'learn.course.license.creativeCommons.terms.by',\n    icon: faCreativeCommonsBy,\n  },\n  nc: {\n    intlMessagesId: 'learn.course.license.creativeCommons.terms.nc',\n    icon: faCreativeCommonsNc,\n  },\n  nd: {\n    intlMessagesId: 'learn.course.license.creativeCommons.terms.nd',\n    icon: faCreativeCommonsNd,\n  },\n  sa: {\n    intlMessagesId: 'learn.course.license.creativeCommons.terms.sa',\n    icon: faCreativeCommonsSa,\n  },\n  zero: {\n    intlMessagesId: 'learn.course.license.creativeCommons.terms.zero',\n    icon: faCreativeCommonsZero,\n  },\n};\n\nfunction parseLicense(license) {\n  if (!license) {\n    // Default to All Rights Reserved if no license\n    // is detected\n    return ['all-rights-reserved', {}];\n  }\n\n  // Search for a colon character denoting the end\n  // of the license type and start of the options\n  const colonIndex = license.indexOf(':');\n  if (colonIndex === -1) {\n    // no options, so the entire thing is the license type\n    return [license, {}];\n  }\n\n  // Split the license on the colon\n  const licenseType = license.slice(0, colonIndex).trim();\n  const optionStr = license.slice(colonIndex + 1).trim();\n\n  let options = {};\n  let version = '';\n\n  // Set the defaultVersion to 4.0\n  const defaultVersion = '4.0';\n  optionStr.split(' ').forEach(option => {\n    // Split the option into key and value\n    // Default the value to `true` if no value\n    let key = '';\n    let value = '';\n    if (option.indexOf('=') !== -1) {\n      [key, value] = option.split('=');\n    } else {\n      key = option;\n      value = true;\n    }\n\n    // Check for version\n    if (key === 'ver') {\n      version = value;\n    } else {\n      // Set the option key to lowercase to make\n      // it easier to query\n      options[key.toLowerCase()] = value;\n    }\n  });\n\n  // No options\n  if (Object.keys(options).length === 0) {\n    // If no other options are set for the\n    // license, set version to 1.0\n    version = '1.0';\n\n    // Set the `zero` option so the link\n    // works correctly\n    options = {\n      zero: true,\n    };\n  }\n\n  // Set the version to whatever was included,\n  // using `defaultVersion` as a fallback if unset\n  version = version || defaultVersion;\n\n  return [licenseType, options, version];\n}\n\nfunction CourseLicense({\n  license,\n  intl,\n}) {\n  const renderAllRightsReservedLicense = () => (\n    <div className=\"text-gray-500\">\n      <FontAwesomeIcon aria-hidden=\"true\" className=\"mr-1\" icon={faCopyright} />\n      {intl.formatMessage(messages['learn.course.license.allRightsReserved.text'])}\n    </div>\n  );\n\n  const renderCreativeCommonsLicense = (activeCreativeCommonsLicenseTags, version) => (\n    <a\n      className=\"text-decoration-none text-gray-500\"\n      rel=\"license noopener noreferrer\"\n      target=\"_blank\"\n      href={`https://creativecommons.org/licenses/${activeCreativeCommonsLicenseTags.join('-')}/${version}/`}\n    >\n      <span className=\"sr-only\">\n        {intl.formatMessage(messages['learn.course.license.creativeCommons.terms.preamble'])}&nbsp;\n      </span>\n      <FontAwesomeIcon aria-hidden=\"true\" className=\"mr-1\" icon={faCreativeCommons} />\n      {activeCreativeCommonsLicenseTags.map(tag => (\n        <span key={tag}>\n          <span className=\"sr-only\">\n            {intl.formatMessage(messages[CreativeCommonsLicenseTags[tag].intlMessagesId])}&nbsp;\n          </span>\n          <FontAwesomeIcon aria-hidden=\"true\" className=\"mr-1\" icon={CreativeCommonsLicenseTags[tag].icon} />\n        </span>\n      ))}\n      {intl.formatMessage(messages['learn.course.license.creativeCommons.text'])}\n    </a>\n  );\n\n  const [licenseType, licenseOptions, licenseVersion] = parseLicense(license);\n\n  return (\n    <div className=\"text-right small py-1\">\n      {licenseType === 'all-rights-reserved' && renderAllRightsReservedLicense()}\n      {licenseType === 'creative-commons' && renderCreativeCommonsLicense(\n        Object.keys(licenseOptions),\n        licenseVersion,\n      )}\n    </div>\n  );\n}\n\nCourseLicense.propTypes = {\n  license: PropTypes.string,\n  intl: intlShape.isRequired,\n};\n\nCourseLicense.defaultProps = {\n  license: 'all-rights-reserved',\n};\n\nexport default injectIntl(CourseLicense);\n"],"file":"CourseLicense.js"}