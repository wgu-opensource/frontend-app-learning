{"version":3,"sources":["../../../../src/courseware/course/celebration/CelebrationModal.jsx"],"names":["CelebrationModal","courseId","intl","isOpen","onClose","rest","org","celebrations","dispatch","wideScreen","width","breakpoints","small","minWidth","formatMessage","messages","forward","congrats","completed","ClapsMobile","ClapsTablet","earned","share","emailSubject","socialMessage","propTypes","PropTypes","string","isRequired","intlShape","bool","func"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,gBAAT,OAEG;AAAA,MAFuB;AACxBC,IAAAA,QADwB;AACdC,IAAAA,IADc;AACRC,IAAAA,MADQ;AACAC,IAAAA;AADA,GAEvB;AAAA,MADmCC,IACnC;;AACD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAwB,0BAAS,gBAAT,EAA2BN,QAA3B,CAA9B;AACA,QAAMO,QAAQ,GAAG,8BAAjB;;AACA,QAAMC,UAAU,GAAG,8BAAgBC,KAAhB,IAAyBC,qBAAYC,KAAZ,CAAkBC,QAA9D;;AAEA,wBAAU,MAAM;AACd,QAAIV,MAAJ,EAAY;AACV,gDAA8BG,GAA9B,EAAmCL,QAAnC,EAA6CM,YAA7C,EAA2DC,QAA3D;AACD;AACF,GAJD,EAIG,CAACL,MAAD,CAJH;AAMA,sBACE,qBAAC,sBAAD;AACE,IAAA,UAAU,eACR,qBAAC,kBAAD;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAA,6BACE,qBAAC,eAAD;AAAQ,QAAA,OAAO,EAAEC,OAAjB;AAAA,kBAA2BF,IAAI,CAACY,aAAL,CAAmBC,kBAASC,OAA5B;AAA3B;AADF,MAFJ;AAME,IAAA,cAAc,EAAE,KANlB;AAOE,IAAA,MAAM,EAAEb,MAPV;AAQE,IAAA,OAAO,EAAEC,OARX;AASE,IAAA,KAAK,eACH;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAA,gBAA0CF,IAAI,CAACY,aAAL,CAAmBC,kBAASE,QAA5B;AAA1C;AAVJ,KAYMZ,IAZN;AAAA,2BAcE;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,kBAA4BH,IAAI,CAACY,aAAL,CAAmBC,kBAASG,SAA5B;AAA5B,QADF,EAEG,CAACT,UAAD,iBAAe;AAAK,QAAA,GAAG,EAAEU,mBAAV;AAAuB,QAAA,GAAG,EAAC,EAA3B;AAA8B,QAAA,SAAS,EAAC;AAAxC,QAFlB,EAGGV,UAAU,iBAAI;AAAK,QAAA,GAAG,EAAEW,mBAAV;AAAuB,QAAA,GAAG,EAAC,EAA3B;AAA8B,QAAA,SAAS,EAAC;AAAxC,QAHjB,eAIE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA,gCACE;AAAA,oBAASlB,IAAI,CAACY,aAAL,CAAmBC,kBAASM,MAA5B;AAAT,UADF,OAC0DnB,IAAI,CAACY,aAAL,CAAmBC,kBAASO,KAA5B,CAD1D;AAAA,QAJF,eAOE,qBAAC,oBAAD;AACE,QAAA,WAAW,EAAC,6CADd;AAEE,QAAA,QAAQ,EAAErB,QAFZ;AAGE,QAAA,YAAY,EAAEc,kBAASQ,YAHzB;AAIE,QAAA,aAAa,EAAER,kBAASS;AAJ1B,QAPF;AAAA;AAdF,KADF;AA+BD;;AAEDxB,gBAAgB,CAACyB,SAAjB,GAA6B;AAC3BxB,EAAAA,QAAQ,EAAEyB,mBAAUC,MAAV,CAAiBC,UADA;AAE3B1B,EAAAA,IAAI,EAAE2B,gBAAUD,UAFW;AAG3BzB,EAAAA,MAAM,EAAEuB,mBAAUI,IAAV,CAAeF,UAHI;AAI3BxB,EAAAA,OAAO,EAAEsB,mBAAUK,IAAV,CAAeH;AAJG,CAA7B;;eAOe,sBAAW5B,gBAAX,C","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport {\n  ActionRow,\n  breakpoints,\n  Button,\n  StandardModal,\n  useWindowSize,\n} from '@edx/paragon';\n\nimport { useDispatch } from 'react-redux';\nimport ClapsMobile from './assets/claps_280x201.gif';\nimport ClapsTablet from './assets/claps_456x328.gif';\nimport messages from './messages';\nimport SocialIcons from '../../social-share/SocialIcons';\nimport { recordFirstSectionCelebration } from './utils';\nimport { useModel } from '../../../generic/model-store';\n\nfunction CelebrationModal({\n  courseId, intl, isOpen, onClose, ...rest\n}) {\n  const { org, celebrations } = useModel('courseHomeMeta', courseId);\n  const dispatch = useDispatch();\n  const wideScreen = useWindowSize().width >= breakpoints.small.minWidth;\n\n  useEffect(() => {\n    if (isOpen) {\n      recordFirstSectionCelebration(org, courseId, celebrations, dispatch);\n    }\n  }, [isOpen]);\n\n  return (\n    <StandardModal\n      footerNode={(\n        <ActionRow isStacked className=\"pb-2\">\n          <Button onClick={onClose}>{intl.formatMessage(messages.forward)}</Button>\n        </ActionRow>\n      )}\n      hasCloseButton={false}\n      isOpen={isOpen}\n      onClose={onClose}\n      title={(\n        <p className=\"h2 text-center mr-n5 pt-4\">{intl.formatMessage(messages.congrats)}</p>\n      )}\n      {...rest}\n    >\n      <>\n        <p className=\"text-center\">{intl.formatMessage(messages.completed)}</p>\n        {!wideScreen && <img src={ClapsMobile} alt=\"\" className=\"img-fluid\" />}\n        {wideScreen && <img src={ClapsTablet} alt=\"\" className=\"img-fluid w-100\" />}\n        <p className=\"mt-3 text-center\">\n          <strong>{intl.formatMessage(messages.earned)}</strong> {intl.formatMessage(messages.share)}\n        </p>\n        <SocialIcons\n          analyticsId=\"edx.ui.lms.celebration.social_share.clicked\"\n          courseId={courseId}\n          emailSubject={messages.emailSubject}\n          socialMessage={messages.socialMessage}\n        />\n      </>\n    </StandardModal>\n  );\n}\n\nCelebrationModal.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  intl: intlShape.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(CelebrationModal);\n"],"file":"CelebrationModal.js"}