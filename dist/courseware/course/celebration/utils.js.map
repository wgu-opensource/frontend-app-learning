{"version":3,"sources":["../../../../src/courseware/course/celebration/utils.jsx"],"names":["CELEBRATION_LOCAL_STORAGE_KEY","handleNextSectionCelebration","sequenceId","nextSequenceId","prevSequenceId","recordFirstSectionCelebration","org","courseId","celebrations","dispatch","first_section","modelType","model","id","firstSection","administrator","org_key","courserun_key","course_id","is_staff","recordWeeklyGoalCelebration","weekly_goal","shouldCelebrateOnSectionLoad","celebrateFirstSection","celebrationIds","onTargetSequence","shouldCelebrate","streakLengthToCelebrate"],"mappings":";;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEA,MAAMA,6BAA6B,GAAG,oCAAtC,C,CAEA;;AACA,SAASC,4BAAT,CAAsCC,UAAtC,EAAkDC,cAAlD,EAAkE;AAChE,qCAAgBH,6BAAhB,EAA+C;AAC7CI,IAAAA,cAAc,EAAEF,UAD6B;AAE7CC,IAAAA;AAF6C,GAA/C;AAID;;AAED,SAASE,6BAAT,CAAuCC,GAAvC,EAA4CC,QAA5C,EAAsDC,YAAtD,EAAoEC,QAApE,EAA8E;AAC5E;AACA,oCAAwBF,QAAxB,EAAkC;AAAEG,IAAAA,aAAa,EAAE;AAAjB,GAAlC,EAF4E,CAG5E;;AACAD,EAAAA,QAAQ,CAAC,6BAAY;AACnBE,IAAAA,SAAS,EAAE,gBADQ;AAEnBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,EAAE,EAAEN,QADC;AAELC,MAAAA,YAAY,kCACPA,YADO;AAEVM,QAAAA,YAAY,EAAE;AAFJ;AAFP;AAFY,GAAZ,CAAD,CAAR,CAJ4E,CAe5E;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoB,iCAA1B;AACA,iCAAe,6CAAf,EAA8D;AAC5DC,IAAAA,OAAO,EAAEV,GADmD;AAE5DW,IAAAA,aAAa,EAAEV,QAF6C;AAG5DW,IAAAA,SAAS,EAAEX,QAHiD;AAGvC;AACrBY,IAAAA,QAAQ,EAAEJ;AAJkD,GAA9D;AAMD;;AAED,SAASK,2BAAT,CAAqCd,GAArC,EAA0CC,QAA1C,EAAoD;AAClD;AACA,oCAAwBA,QAAxB,EAAkC;AAAEc,IAAAA,WAAW,EAAE;AAAf,GAAlC,EAFkD,CAIlD;;AACA,QAAM;AAAEN,IAAAA;AAAF,MAAoB,iCAA1B;AACA,iCAAe,2CAAf,EAA4D;AAC1DC,IAAAA,OAAO,EAAEV,GADiD;AAE1DW,IAAAA,aAAa,EAAEV,QAF2C;AAG1DY,IAAAA,QAAQ,EAAEJ;AAHgD,GAA5D;AAKD,C,CAED;AACA;;;AACA,SAASO,4BAAT,CAAsCf,QAAtC,EAAgDL,UAAhD,EAA4DqB,qBAA5D,EAAmFd,QAAnF,EAA6FD,YAA7F,EAA2G;AACzG,QAAMgB,cAAc,GAAG,mCAAgBxB,6BAAhB,CAAvB;;AACA,MAAI,CAACwB,cAAL,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,QAAM;AACJpB,IAAAA,cADI;AAEJD,IAAAA;AAFI,MAGFqB,cAHJ;AAIA,QAAMC,gBAAgB,GAAGvB,UAAU,KAAKC,cAAxC;AACA,MAAIuB,eAAe,GAAGD,gBAAgB,IAAIF,qBAA1C;;AAEA,MAAIG,eAAe,IAAIlB,YAAY,CAACmB,uBAApC,EAA6D;AAC3D;AACA;AACA;AACAD,IAAAA,eAAe,GAAG,KAAlB;AACA,sCAAwBnB,QAAxB,EAAkC;AAAEG,MAAAA,aAAa,EAAE;AAAjB,KAAlC;AACD;;AAED,MAAIR,UAAU,KAAKE,cAAf,IAAiC,CAACqB,gBAAtC,EAAwD;AACtD;AACA,yCAAkBzB,6BAAlB,EAFsD,CAItD;;AACAS,IAAAA,QAAQ,CAAC,6BAAY;AACnBE,MAAAA,SAAS,EAAE,gBADQ;AAEnBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,EAAE,EAAEN,QADC;AAELC,QAAAA,YAAY,kCACPA,YADO;AAEVM,UAAAA,YAAY,EAAE;AAFJ;AAFP;AAFY,KAAZ,CAAD,CAAR;AAUD;;AAED,SAAOY,eAAP;AACD","sourcesContent":["import { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\n\nimport { postCelebrationComplete } from './data/api';\nimport { clearLocalStorage, getLocalStorage, setLocalStorage } from '../../../data/localStorage';\nimport { updateModel } from '../../../generic/model-store';\n\nconst CELEBRATION_LOCAL_STORAGE_KEY = 'CelebrationModal.showOnSectionLoad';\n\n// Records clicks through the end of a section, so that we can know whether we should celebrate when we finish loading\nfunction handleNextSectionCelebration(sequenceId, nextSequenceId) {\n  setLocalStorage(CELEBRATION_LOCAL_STORAGE_KEY, {\n    prevSequenceId: sequenceId,\n    nextSequenceId,\n  });\n}\n\nfunction recordFirstSectionCelebration(org, courseId, celebrations, dispatch) {\n  // Tell the LMS\n  postCelebrationComplete(courseId, { first_section: false });\n  // Update our local copy of course data from LMS\n  dispatch(updateModel({\n    modelType: 'courseHomeMeta',\n    model: {\n      id: courseId,\n      celebrations: {\n        ...celebrations,\n        firstSection: false,\n      },\n    },\n  }));\n\n  // Tell our analytics\n  const { administrator } = getAuthenticatedUser();\n  sendTrackEvent('edx.ui.lms.celebration.first_section.opened', {\n    org_key: org,\n    courserun_key: courseId,\n    course_id: courseId, // should only be courserun_key, but left as-is for historical reasons\n    is_staff: administrator,\n  });\n}\n\nfunction recordWeeklyGoalCelebration(org, courseId) {\n  // Tell the LMS\n  postCelebrationComplete(courseId, { weekly_goal: false });\n\n  // Tell our analytics\n  const { administrator } = getAuthenticatedUser();\n  sendTrackEvent('edx.ui.lms.celebration.weekly_goal.opened', {\n    org_key: org,\n    courserun_key: courseId,\n    is_staff: administrator,\n  });\n}\n\n// Looks at local storage to see whether we just came from the end of a section.\n// Note! This does have side effects (will clear some local storage and may start an api call).\nfunction shouldCelebrateOnSectionLoad(courseId, sequenceId, celebrateFirstSection, dispatch, celebrations) {\n  const celebrationIds = getLocalStorage(CELEBRATION_LOCAL_STORAGE_KEY);\n  if (!celebrationIds) {\n    return false;\n  }\n\n  const {\n    prevSequenceId,\n    nextSequenceId,\n  } = celebrationIds;\n  const onTargetSequence = sequenceId === nextSequenceId;\n  let shouldCelebrate = onTargetSequence && celebrateFirstSection;\n\n  if (shouldCelebrate && celebrations.streakLengthToCelebrate) {\n    // We don't want two modals to show up on the same page.\n    // If we are going to celebrate a streak then we will not also celebrate the first section.\n    // We will still mark the first section as celebrated, so that we don't incorrectly celebrate the second section.\n    shouldCelebrate = false;\n    postCelebrationComplete(courseId, { first_section: false });\n  }\n\n  if (sequenceId !== prevSequenceId && !onTargetSequence) {\n    // Don't clear until we move off of current/prev sequence\n    clearLocalStorage(CELEBRATION_LOCAL_STORAGE_KEY);\n\n    // Update our local copy of course data from LMS\n    dispatch(updateModel({\n      modelType: 'courseHomeMeta',\n      model: {\n        id: courseId,\n        celebrations: {\n          ...celebrations,\n          firstSection: false,\n        },\n      },\n    }));\n  }\n\n  return shouldCelebrate;\n}\n\nexport {\n  handleNextSectionCelebration,\n  recordFirstSectionCelebration,\n  recordWeeklyGoalCelebration,\n  shouldCelebrateOnSectionLoad,\n};\n"],"file":"utils.js"}