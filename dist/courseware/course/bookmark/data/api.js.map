{"version":3,"sources":["../../../../../src/courseware/course/bookmark/data/api.js"],"names":["bookmarksBaseUrl","LMS_BASE_URL","createBookmark","usageId","post","usage_id","deleteBookmark","username","delete"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA,MAAMA,gBAAgB,GAAI,GAAE,mCAAYC,YAAa,8BAArD;;AAEO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,SAAO,wCAA6BC,IAA7B,CAAkCJ,gBAAlC,EAAoD;AAAEK,IAAAA,QAAQ,EAAEF;AAAZ,GAApD,CAAP;AACD;;AAEM,eAAeG,cAAf,CAA8BH,OAA9B,EAAuC;AAC5C,QAAM;AAAEI,IAAAA;AAAF,MAAe,iCAArB;AACA,SAAO,wCAA6BC,MAA7B,CAAqC,GAAER,gBAAiB,GAAEO,QAAS,IAAGJ,OAAQ,GAA9E,CAAP;AACD","sourcesContent":["import { getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedHttpClient, getAuthenticatedUser } from '@edx/frontend-platform/auth';\n\nconst bookmarksBaseUrl = `${getConfig().LMS_BASE_URL}/api/bookmarks/v1/bookmarks/`;\n\nexport async function createBookmark(usageId) {\n  return getAuthenticatedHttpClient().post(bookmarksBaseUrl, { usage_id: usageId });\n}\n\nexport async function deleteBookmark(usageId) {\n  const { username } = getAuthenticatedUser();\n  return getAuthenticatedHttpClient().delete(`${bookmarksBaseUrl}${username},${usageId}/`);\n}\n"],"file":"api.js"}