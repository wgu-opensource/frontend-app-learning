{"version":3,"sources":["../../../src/courseware/social-share/SocialIcons.jsx"],"names":["SocialIcons","analyticsId","className","courseId","emailBody","emailSubject","hashtags","intl","socialMessage","marketingUrl","org","title","twitterUrl","TWITTER_URL","twitterAccount","substring","lastIndexOf","logClick","service","administrator","org_key","courserun_key","course_id","is_staff","socialUtmCampaign","SOCIAL_UTM_MILESTONE_CAMPAIGN","socialUtmMarketingUrl","formatMessage","messages","shareService","platform","SITE_NAME","shareEmail","defaultProps","defaultEmailBody","TWITTER_HASHTAG","propTypes","PropTypes","string","isRequired","shape","arrayOf","intlShape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmailIcon,\n  EmailShareButton,\n  FacebookIcon,\n  FacebookShareButton,\n  LinkedinIcon,\n  LinkedinShareButton,\n  TwitterIcon,\n  TwitterShareButton,\n} from 'react-share';\n\nimport { getConfig } from '@edx/frontend-platform';\nimport { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\n\nimport messages from './messages';\nimport { useModel } from '../../generic/model-store';\n\nfunction SocialIcons({\n  analyticsId,\n  className,\n  courseId,\n  emailBody,\n  emailSubject,\n  hashtags,\n  intl,\n  socialMessage,\n}) {\n  const { marketingUrl } = useModel('coursewareMeta', courseId);\n\n  const {\n    org,\n    title,\n  } = useModel('courseHomeMeta', courseId);\n\n  if (!marketingUrl) {\n    return null;\n  }\n\n  const twitterUrl = getConfig().TWITTER_URL;\n  const twitterAccount = twitterUrl && twitterUrl.substring(twitterUrl.lastIndexOf('/') + 1);\n\n  const logClick = (service) => {\n    if (!analyticsId) {\n      return;\n    }\n\n    const { administrator } = getAuthenticatedUser();\n    sendTrackEvent(analyticsId, {\n      org_key: org,\n      courserun_key: courseId,\n      course_id: courseId, // should only be courserun_key, but left as-is for historical reasons\n      is_staff: administrator,\n      service,\n    });\n  };\n\n  const socialUtmCampaign = getConfig().SOCIAL_UTM_MILESTONE_CAMPAIGN\n    ? `utm_campaign=${getConfig().SOCIAL_UTM_MILESTONE_CAMPAIGN}&` : '';\n  const socialUtmMarketingUrl = `${marketingUrl}?${socialUtmCampaign}utm_medium=social`;\n\n  return (\n    <div className={`social-icons ${className}`}>\n      <LinkedinShareButton\n        beforeOnClick={() => logClick('linkedin')}\n        url={`${socialUtmMarketingUrl}&utm_source=linkedin`}\n      >\n        <LinkedinIcon round size={32} />\n        <span className=\"sr-only\">{intl.formatMessage(messages.shareService, { service: 'LinkedIn' })}</span>\n      </LinkedinShareButton>\n      {twitterAccount && (\n        <TwitterShareButton\n          beforeOnClick={() => logClick('twitter')}\n          className=\"ml-2\"\n          hashtags={hashtags}\n          title={socialMessage ? intl.formatMessage(socialMessage, { platform: `@${twitterAccount}`, title }) : ''}\n          url={`${socialUtmMarketingUrl}&utm_source=twitter`}\n        >\n          <TwitterIcon round size={32} />\n          <span className=\"sr-only\">{intl.formatMessage(messages.shareService, { service: 'Twitter' })}</span>\n        </TwitterShareButton>\n      )}\n      <FacebookShareButton\n        beforeOnClick={() => logClick('facebook')}\n        className=\"ml-2\"\n        quote={socialMessage ? intl.formatMessage(socialMessage, { platform: getConfig().SITE_NAME, title }) : ''}\n        url={`${socialUtmMarketingUrl}&utm_source=facebook`}\n      >\n        <FacebookIcon round size={32} />\n        <span className=\"sr-only\">{intl.formatMessage(messages.shareService, { service: 'Facebook' })}</span>\n      </FacebookShareButton>\n      <EmailShareButton\n        beforeOnClick={() => logClick('email')}\n        body={emailBody ? `${intl.formatMessage(emailBody)}\\n\\n` : ''}\n        className=\"ml-2\"\n        subject={emailSubject ? intl.formatMessage(emailSubject, { platform: getConfig().SITE_NAME, title }) : ''}\n        url={`${marketingUrl}?${socialUtmCampaign}utm_medium=email&utm_source=email`}\n      >\n        <EmailIcon round size={32} />\n        <span className=\"sr-only\">{intl.formatMessage(messages.shareEmail)}</span>\n      </EmailShareButton>\n    </div>\n  );\n}\n\nSocialIcons.defaultProps = {\n  analyticsId: '',\n  className: '',\n  emailBody: messages.defaultEmailBody,\n  emailSubject: null,\n  hashtags: [getConfig().TWITTER_HASHTAG],\n  socialMessage: null,\n};\n\nSocialIcons.propTypes = {\n  analyticsId: PropTypes.string,\n  className: PropTypes.string,\n  courseId: PropTypes.string.isRequired,\n  emailBody: PropTypes.shape({}),\n  emailSubject: PropTypes.shape({}),\n  hashtags: PropTypes.arrayOf(PropTypes.string),\n  intl: intlShape.isRequired,\n  socialMessage: PropTypes.shape({}),\n};\n\nexport default injectIntl(SocialIcons);\n"],"file":"SocialIcons.js"}