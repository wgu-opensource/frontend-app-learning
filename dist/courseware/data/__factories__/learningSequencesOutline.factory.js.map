{"version":3,"file":"learningSequencesOutline.factory.js","names":["_rosie","require","Factory","define","attrs","title","course_id","outline","sections","sequences","buildEmptyOutline","courseId","build","buildOutlineFromBlocks","courseBlocks","courseBlock","Object","values","blocks","forEach","block","type","id","display_name","start","effective_start","sequence_ids","children","accessible","course_key","map","sectionId"],"sources":["../../../../src/courseware/data/__factories__/learningSequencesOutline.factory.js"],"sourcesContent":["import { Factory } from 'rosie'; // eslint-disable-line import/no-extraneous-dependencies\n\nFactory.define('learningSequencesOutline')\n  .attrs({\n    title: 'Demo Course',\n    course_id: 'course-v1:edX+DemoX+Demo_Course',\n    outline: {\n      sections: [],\n      sequences: {\n      },\n    },\n  });\n\nexport function buildEmptyOutline(courseId) {\n  return Factory.build(\n    'learningSequencesOutline',\n    {\n      title: 'Demo Course',\n      course_id: courseId,\n      outline: {\n        sections: [],\n        sequences: {\n        },\n      },\n    },\n    { courseId },\n  );\n}\n\n// Given courseBlocks (output from buildSimpleCourseBlocks), create a matching\n// Learning Sequences API outline (what the REST API would return to us).\n// Ideally this method would go away at some point, and we'd use a learning\n// sequence factory directly. But this method exists as a bridge-gap from\n// when course blocks were always used anyway. Now that they are rarely used,\n// this can probably go away.\nexport function buildOutlineFromBlocks(courseBlocks) {\n  const sections = {};\n  const sequences = {};\n  let courseBlock = null;\n\n  Object.values(courseBlocks.blocks).forEach(block => {\n    if (block.type === 'course') {\n      courseBlock = block;\n    } else if (block.type === 'chapter') {\n      sections[block.id] = {\n        id: block.id,\n        title: block.display_name,\n        start: null,\n        effective_start: null,\n        sequence_ids: [...block.children],\n      };\n    } else if (block.type === 'sequential') {\n      sequences[block.id] = {\n        id: block.id,\n        title: block.display_name,\n        accessible: true,\n        start: null,\n        effective_start: null,\n      };\n    }\n  });\n\n  const outline = Factory.build(\n    'learningSequencesOutline',\n    {\n      course_key: courseBlocks.courseId,\n      title: courseBlocks.title,\n      outline: {\n        sections: courseBlock.children.map(sectionId => sections[sectionId]),\n        sequences,\n      },\n    },\n    {},\n  );\n\n  return outline;\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAAiC;;AAEjCC,cAAO,CAACC,MAAM,CAAC,0BAA0B,CAAC,CACvCC,KAAK,CAAC;EACLC,KAAK,EAAE,aAAa;EACpBC,SAAS,EAAE,iCAAiC;EAC5CC,OAAO,EAAE;IACPC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,CACX;EACF;AACF,CAAC,CAAC;AAEG,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EAC1C,OAAOT,cAAO,CAACU,KAAK,CAClB,0BAA0B,EAC1B;IACEP,KAAK,EAAE,aAAa;IACpBC,SAAS,EAAEK,QAAQ;IACnBJ,OAAO,EAAE;MACPC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,CACX;IACF;EACF,CAAC,EACD;IAAEE;EAAS,CACb,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,sBAAsBA,CAACC,YAAY,EAAE;EACnD,MAAMN,QAAQ,GAAG,CAAC,CAAC;EACnB,MAAMC,SAAS,GAAG,CAAC,CAAC;EACpB,IAAIM,WAAW,GAAG,IAAI;EAEtBC,MAAM,CAACC,MAAM,CAACH,YAAY,CAACI,MAAM,CAAC,CAACC,OAAO,CAACC,KAAK,IAAI;IAClD,IAAIA,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAE;MAC3BN,WAAW,GAAGK,KAAK;IACrB,CAAC,MAAM,IAAIA,KAAK,CAACC,IAAI,KAAK,SAAS,EAAE;MACnCb,QAAQ,CAACY,KAAK,CAACE,EAAE,CAAC,GAAG;QACnBA,EAAE,EAAEF,KAAK,CAACE,EAAE;QACZjB,KAAK,EAAEe,KAAK,CAACG,YAAY;QACzBC,KAAK,EAAE,IAAI;QACXC,eAAe,EAAE,IAAI;QACrBC,YAAY,EAAE,CAAC,GAAGN,KAAK,CAACO,QAAQ;MAClC,CAAC;IACH,CAAC,MAAM,IAAIP,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;MACtCZ,SAAS,CAACW,KAAK,CAACE,EAAE,CAAC,GAAG;QACpBA,EAAE,EAAEF,KAAK,CAACE,EAAE;QACZjB,KAAK,EAAEe,KAAK,CAACG,YAAY;QACzBK,UAAU,EAAE,IAAI;QAChBJ,KAAK,EAAE,IAAI;QACXC,eAAe,EAAE;MACnB,CAAC;IACH;EACF,CAAC,CAAC;EAEF,MAAMlB,OAAO,GAAGL,cAAO,CAACU,KAAK,CAC3B,0BAA0B,EAC1B;IACEiB,UAAU,EAAEf,YAAY,CAACH,QAAQ;IACjCN,KAAK,EAAES,YAAY,CAACT,KAAK;IACzBE,OAAO,EAAE;MACPC,QAAQ,EAAEO,WAAW,CAACY,QAAQ,CAACG,GAAG,CAACC,SAAS,IAAIvB,QAAQ,CAACuB,SAAS,CAAC,CAAC;MACpEtB;IACF;EACF,CAAC,EACD,CAAC,CACH,CAAC;EAED,OAAOF,OAAO;AAChB"}