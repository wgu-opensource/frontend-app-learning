{"version":3,"sources":["../../../../src/courseware/data/__factories__/learningSequencesOutline.factory.js"],"names":["Factory","define","attrs","title","course_id","outline","sections","sequences","buildEmptyOutline","courseId","build","buildOutlineFromBlocks","courseBlocks","courseBlock","Object","values","blocks","forEach","block","type","id","display_name","start","effective_start","sequence_ids","children","accessible","course_key","map","sectionId"],"mappings":";;;;;;;;AAAA;;AAAiC;AAEjCA,eAAQC,MAAR,CAAe,0BAAf,EACGC,KADH,CACS;AACLC,EAAAA,KAAK,EAAE,aADF;AAELC,EAAAA,SAAS,EAAE,iCAFN;AAGLC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,SAAS,EAAE;AAFJ;AAHJ,CADT;;AAWO,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AAC1C,SAAOT,eAAQU,KAAR,CACL,0BADK,EAEL;AACEP,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,SAAS,EAAEK,QAFb;AAGEJ,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,SAAS,EAAE;AAFJ;AAHX,GAFK,EAWL;AAAEE,IAAAA;AAAF,GAXK,CAAP;AAaD,C,CAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASE,sBAAT,CAAgCC,YAAhC,EAA8C;AACnD,QAAMN,QAAQ,GAAG,EAAjB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,MAAIM,WAAW,GAAG,IAAlB;AAEAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,YAAY,CAACI,MAA3B,EAAmCC,OAAnC,CAA2CC,KAAK,IAAI;AAClD,QAAIA,KAAK,CAACC,IAAN,KAAe,QAAnB,EAA6B;AAC3BN,MAAAA,WAAW,GAAGK,KAAd;AACD,KAFD,MAEO,IAAIA,KAAK,CAACC,IAAN,KAAe,SAAnB,EAA8B;AACnCb,MAAAA,QAAQ,CAACY,KAAK,CAACE,EAAP,CAAR,GAAqB;AACnBA,QAAAA,EAAE,EAAEF,KAAK,CAACE,EADS;AAEnBjB,QAAAA,KAAK,EAAEe,KAAK,CAACG,YAFM;AAGnBC,QAAAA,KAAK,EAAE,IAHY;AAInBC,QAAAA,eAAe,EAAE,IAJE;AAKnBC,QAAAA,YAAY,EAAE,CAAC,GAAGN,KAAK,CAACO,QAAV;AALK,OAArB;AAOD,KARM,MAQA,IAAIP,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AACtCZ,MAAAA,SAAS,CAACW,KAAK,CAACE,EAAP,CAAT,GAAsB;AACpBA,QAAAA,EAAE,EAAEF,KAAK,CAACE,EADU;AAEpBjB,QAAAA,KAAK,EAAEe,KAAK,CAACG,YAFO;AAGpBK,QAAAA,UAAU,EAAE,IAHQ;AAIpBJ,QAAAA,KAAK,EAAE,IAJa;AAKpBC,QAAAA,eAAe,EAAE;AALG,OAAtB;AAOD;AACF,GApBD;;AAsBA,QAAMlB,OAAO,GAAGL,eAAQU,KAAR,CACd,0BADc,EAEd;AACEiB,IAAAA,UAAU,EAAEf,YAAY,CAACH,QAD3B;AAEEN,IAAAA,KAAK,EAAES,YAAY,CAACT,KAFtB;AAGEE,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAEO,WAAW,CAACY,QAAZ,CAAqBG,GAArB,CAAyBC,SAAS,IAAIvB,QAAQ,CAACuB,SAAD,CAA9C,CADH;AAEPtB,MAAAA;AAFO;AAHX,GAFc,EAUd,EAVc,CAAhB;;AAaA,SAAOF,OAAP;AACD","sourcesContent":["import { Factory } from 'rosie'; // eslint-disable-line import/no-extraneous-dependencies\n\nFactory.define('learningSequencesOutline')\n  .attrs({\n    title: 'Demo Course',\n    course_id: 'course-v1:edX+DemoX+Demo_Course',\n    outline: {\n      sections: [],\n      sequences: {\n      },\n    },\n  });\n\nexport function buildEmptyOutline(courseId) {\n  return Factory.build(\n    'learningSequencesOutline',\n    {\n      title: 'Demo Course',\n      course_id: courseId,\n      outline: {\n        sections: [],\n        sequences: {\n        },\n      },\n    },\n    { courseId },\n  );\n}\n\n// Given courseBlocks (output from buildSimpleCourseBlocks), create a matching\n// Learning Sequences API outline (what the REST API would return to us).\n// Ideally this method would go away at some point, and we'd use a learning\n// sequence factory directly. But this method exists as a bridge-gap from\n// when course blocks were always used anyway. Now that they are rarely used,\n// this can probably go away.\nexport function buildOutlineFromBlocks(courseBlocks) {\n  const sections = {};\n  const sequences = {};\n  let courseBlock = null;\n\n  Object.values(courseBlocks.blocks).forEach(block => {\n    if (block.type === 'course') {\n      courseBlock = block;\n    } else if (block.type === 'chapter') {\n      sections[block.id] = {\n        id: block.id,\n        title: block.display_name,\n        start: null,\n        effective_start: null,\n        sequence_ids: [...block.children],\n      };\n    } else if (block.type === 'sequential') {\n      sequences[block.id] = {\n        id: block.id,\n        title: block.display_name,\n        accessible: true,\n        start: null,\n        effective_start: null,\n      };\n    }\n  });\n\n  const outline = Factory.build(\n    'learningSequencesOutline',\n    {\n      course_key: courseBlocks.courseId,\n      title: courseBlocks.title,\n      outline: {\n        sections: courseBlock.children.map(sectionId => sections[sectionId]),\n        sequences,\n      },\n    },\n    {},\n  );\n\n  return outline;\n}\n"],"file":"learningSequencesOutline.factory.js"}