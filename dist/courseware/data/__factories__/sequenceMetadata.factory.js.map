{"version":3,"sources":["../../../../src/courseware/data/__factories__/sequenceMetadata.factory.js"],"names":["Factory","define","option","courseId","Error","build","type","unitBlocks","children","map","unitBlock","id","attr","sequenceBlock","block_id","display_name","gated","prereq_url","prereq_id","prereq_section_name","gated_section_name","href","graded","bookmarked","path","complete","content","page_title","contains_content_type_gated_content","attrs","exclude_units","position","next_url","tag","save_position","prev_url","is_time_limited","is_hidden_after_due","show_completion","banner_text","format","buildSimpleCourseAndSequenceMetadata","options","courseMetadata","course_access","has_access","simpleCourseBlocks","name","sequenceBlocks","sequenceMetadata","block","courseHomeMetadata"],"mappings":"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","sourcesContent":["import { Factory } from 'rosie'; // eslint-disable-line import/no-extraneous-dependencies\nimport '../../../shared/data/__factories__/block.factory';\nimport { buildSimpleCourseBlocks } from '../../../shared/data/__factories__/courseBlocks.factory';\n\nFactory.define('sequenceMetadata')\n  .option('courseId', (courseId) => {\n    if (courseId) {\n      return courseId;\n    }\n    throw new Error('courseId must be specified for sequenceMetadata factory.');\n  })\n  // An array of units\n  .option('unitBlocks', ['courseId'], courseId => ([\n    Factory.build(\n      'block',\n      { type: 'vertical' },\n      { courseId },\n    ),\n  ]))\n  .option(\n    'sequenceBlock', ['courseId', 'unitBlocks'], (courseId, unitBlocks) => (\n      Factory.build(\n        'block',\n        { type: 'sequential', children: unitBlocks.map(unitBlock => unitBlock.id) },\n        { courseId },\n      )\n    ),\n  )\n  .attr('element_id', ['sequenceBlock'], sequenceBlock => sequenceBlock.block_id)\n  .attr('item_id', ['sequenceBlock'], sequenceBlock => sequenceBlock.id)\n  .attr('display_name', ['sequenceBlock'], sequenceBlock => sequenceBlock.display_name)\n  .attr('gated_content', ['sequenceBlock'], sequenceBlock => ({\n    gated: false,\n    prereq_url: null,\n    prereq_id: `${sequenceBlock.id}-prereq`,\n    prereq_section_name: `${sequenceBlock.display_name}-prereq`,\n    gated_section_name: sequenceBlock.display_name,\n  }))\n  .attr('items', ['unitBlocks', 'sequenceBlock'], (unitBlocks, sequenceBlock) => unitBlocks.map(\n    unitBlock => ({\n      href: '',\n      graded: unitBlock.graded,\n      id: unitBlock.id,\n      bookmarked: unitBlock.bookmarked || false,\n      path: `Chapter Display Name > ${sequenceBlock.display_name} > ${unitBlock.display_name}`,\n      type: unitBlock.type,\n      complete: unitBlock.complete || null,\n      content: '',\n      page_title: unitBlock.display_name,\n      contains_content_type_gated_content: unitBlock.contains_content_type_gated_content,\n    }),\n  ))\n  .attrs({\n    exclude_units: true,\n    position: null,\n    next_url: null,\n    tag: 'sequential',\n    save_position: true,\n    prev_url: null,\n    is_time_limited: false,\n    is_hidden_after_due: false,\n    show_completion: true,\n    banner_text: null,\n    format: 'Homework',\n  });\n\n/**\n * Build a simple course and simple metadata for its sequence.\n */\nexport default function buildSimpleCourseAndSequenceMetadata(options = {}) {\n  const courseMetadata = options.courseMetadata || Factory.build('courseMetadata', {\n    course_access: {\n      has_access: false,\n    },\n  });\n  const courseId = courseMetadata.id;\n  const simpleCourseBlocks = buildSimpleCourseBlocks(courseId, courseMetadata.name, options);\n  const { unitBlocks, sequenceBlocks } = simpleCourseBlocks;\n  const sequenceMetadata = options.sequenceMetadata || sequenceBlocks.map(block => Factory.build(\n    'sequenceMetadata',\n    {},\n    {\n      courseId, unitBlocks, sequenceBlock: block,\n    },\n  ));\n  const courseHomeMetadata = options.courseHomeMetadata || Factory.build('courseHomeMetadata');\n  return {\n    ...simpleCourseBlocks,\n    courseMetadata,\n    sequenceMetadata,\n    courseHomeMetadata,\n  };\n}\n"],"file":"sequenceMetadata.factory.js"}