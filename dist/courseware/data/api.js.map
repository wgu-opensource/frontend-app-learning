{"version":3,"file":"api.js","names":["_frontendPlatform","require","_auth","_api","_utils","normalizeLearningSequencesData","learningSequencesData","models","courses","sections","sequences","now","Date","isReleased","block","accessible","effective_start","parse","Object","entries","outline","forEach","_ref","seqId","sequence","id","title","section","availableSequenceIds","sequence_ids","filter","length","sequenceIds","courseId","course_key","childSeqId","sectionId","sectionIds","map","_ref2","hasScheduledContent","values","some","seq","getSequenceForUnitDeprecated","unitId","authenticatedUser","getAuthenticatedUser","url","URL","getConfig","LMS_BASE_URL","searchParams","append","username","data","getAuthenticatedHttpClient","get","href","parent","blocks","find","type","children","includes","getLearningSequencesOutline","outlineUrl","normalizeMetadata","metadata","requestTime","responseTime","headers","accessExpiration","camelCaseObject","access_expiration","canShowUpgradeSock","can_show_upgrade_sock","contentTypeGatingEnabled","content_type_gating_enabled","courseGoals","course_goals","name","offer","enrollmentStart","enrollment_start","enrollmentEnd","enrollment_end","end","start","enrollmentMode","enrollment","mode","isEnrolled","is_active","license","userTimezone","user_timezone","showCalculator","show_calculator","notes","marketingUrl","marketing_url","celebrations","userHasPassingGrade","user_has_passing_grade","courseExitPageIsActive","course_exit_page_is_active","certificateData","certificate_data","entranceExamData","entrance_exam_data","timeOffsetMillis","getTimeOffsetMillis","date","verifyIdentityUrl","verify_identity_url","verificationStatus","verification_status","linkedinAddToProfileUrl","linkedin_add_to_profile_url","relatedPrograms","related_programs","userNeedsIntegritySignature","user_needs_integrity_signature","canAccessProctoredExams","can_access_proctored_exams","getCourseMetadata","appendBrowserTimezoneToUrl","normalizeSequenceMetadata","item_id","blockType","tag","unitIds","items","unit","bannerText","banner_text","format","display_name","gatedContent","gated_content","isTimeLimited","is_time_limited","isProctored","is_proctored","isHiddenAfterDue","is_hidden_after_due","activeUnitIndex","position","saveUnitPosition","save_position","showCompletion","show_completion","allowProctoringOptOut","allow_proctoring_opt_out","units","sequenceId","bookmarked","complete","page_title","contentType","graded","containsContentTypeGatedContent","contains_content_type_gated_content","getSequenceMetadata","getSequenceHandlerUrl","getBlockCompletion","usageKey","post","usage_key","postSequencePosition","getResumeBlock","postIntegritySignature","sendActivationEmail","getCourseDiscussionConfig","getCourseTopics"],"sources":["../../../src/courseware/data/api.js"],"sourcesContent":["import { camelCaseObject, getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedHttpClient, getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport { getTimeOffsetMillis } from '../../course-home/data/api';\nimport { appendBrowserTimezoneToUrl } from '../../utils';\n\nexport function normalizeLearningSequencesData(learningSequencesData) {\n  const models = {\n    courses: {},\n    sections: {},\n    sequences: {},\n  };\n\n  const now = new Date();\n  function isReleased(block) {\n    // We check whether the backend marks this as accessible because staff users are granted access anyway.\n    // Note that sections don't have the `accessible` field and will just be checking `effective_start`.\n    return block.accessible || !block.effective_start || now >= Date.parse(block.effective_start);\n  }\n\n  // Sequences\n  Object.entries(learningSequencesData.outline.sequences).forEach(([seqId, sequence]) => {\n    if (!isReleased(sequence)) {\n      return; // Don't let the learner see unreleased sequences\n    }\n\n    models.sequences[seqId] = {\n      id: seqId,\n      title: sequence.title,\n    };\n  });\n\n  // Sections\n  learningSequencesData.outline.sections.forEach(section => {\n    // Filter out any ignored sequences (e.g. unreleased sequences)\n    const availableSequenceIds = section.sequence_ids.filter(seqId => seqId in models.sequences);\n\n    // If we are unreleased and already stripped out all our children, just don't show us at all.\n    // (We check both release date and children because children will exist for an unreleased section even for staff,\n    // so we still want to show this section.)\n    if (!isReleased(section) && availableSequenceIds.length === 0) {\n      return;\n    }\n\n    models.sections[section.id] = {\n      id: section.id,\n      title: section.title,\n      sequenceIds: availableSequenceIds,\n      courseId: learningSequencesData.course_key,\n    };\n\n    // Add back-references to this section for all child sequences.\n    availableSequenceIds.forEach(childSeqId => {\n      models.sequences[childSeqId].sectionId = section.id;\n    });\n  });\n\n  // Course\n  models.courses[learningSequencesData.course_key] = {\n    id: learningSequencesData.course_key,\n    title: learningSequencesData.title,\n    sectionIds: Object.entries(models.sections).map(([sectionId]) => sectionId),\n\n    // Scan through all the sequences and look for ones that aren't released yet.\n    hasScheduledContent: Object.values(learningSequencesData.outline.sequences).some(seq => !isReleased(seq)),\n  };\n\n  return models;\n}\n\n// Do not add further calls to this API - we don't like making use of the modulestore if we can help it\nexport async function getSequenceForUnitDeprecated(courseId, unitId) {\n  const authenticatedUser = getAuthenticatedUser();\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/courses/v2/blocks/`);\n  url.searchParams.append('course_id', courseId);\n  url.searchParams.append('username', authenticatedUser ? authenticatedUser.username : '');\n  url.searchParams.append('depth', 3);\n  url.searchParams.append('requested_fields', 'children,discussions_url');\n\n  const { data } = await getAuthenticatedHttpClient().get(url.href, {});\n  const parent = Object.values(data.blocks).find(block => block.type === 'sequential' && block.children.includes(unitId));\n  return parent?.id;\n}\n\nexport async function getLearningSequencesOutline(courseId) {\n  const outlineUrl = new URL(`${getConfig().LMS_BASE_URL}/api/learning_sequences/v1/course_outline/${courseId}`);\n  const { data } = await getAuthenticatedHttpClient().get(outlineUrl.href, {});\n  return normalizeLearningSequencesData(data);\n}\n\nfunction normalizeMetadata(metadata) {\n  const requestTime = Date.now();\n  const responseTime = requestTime;\n  const { data, headers } = metadata;\n  return {\n    accessExpiration: camelCaseObject(data.access_expiration),\n    canShowUpgradeSock: data.can_show_upgrade_sock,\n    contentTypeGatingEnabled: data.content_type_gating_enabled,\n    courseGoals: camelCaseObject(data.course_goals),\n    id: data.id,\n    title: data.name,\n    offer: camelCaseObject(data.offer),\n    enrollmentStart: data.enrollment_start,\n    enrollmentEnd: data.enrollment_end,\n    end: data.end,\n    start: data.start,\n    enrollmentMode: data.enrollment.mode,\n    isEnrolled: data.enrollment.is_active,\n    license: data.license,\n    userTimezone: data.user_timezone,\n    showCalculator: data.show_calculator,\n    notes: camelCaseObject(data.notes),\n    marketingUrl: data.marketing_url,\n    celebrations: camelCaseObject(data.celebrations),\n    userHasPassingGrade: data.user_has_passing_grade,\n    courseExitPageIsActive: data.course_exit_page_is_active,\n    certificateData: camelCaseObject(data.certificate_data),\n    entranceExamData: camelCaseObject(data.entrance_exam_data),\n    timeOffsetMillis: getTimeOffsetMillis(headers && headers.date, requestTime, responseTime),\n    verifyIdentityUrl: data.verify_identity_url,\n    verificationStatus: data.verification_status,\n    linkedinAddToProfileUrl: data.linkedin_add_to_profile_url,\n    relatedPrograms: camelCaseObject(data.related_programs),\n    userNeedsIntegritySignature: data.user_needs_integrity_signature,\n    canAccessProctoredExams: data.can_access_proctored_exams,\n  };\n}\n\nexport async function getCourseMetadata(courseId) {\n  let url = `${getConfig().LMS_BASE_URL}/api/courseware/course/${courseId}`;\n  url = appendBrowserTimezoneToUrl(url);\n  const metadata = await getAuthenticatedHttpClient().get(url);\n  return normalizeMetadata(metadata);\n}\n\nfunction normalizeSequenceMetadata(sequence) {\n  return {\n    sequence: {\n      id: sequence.item_id,\n      blockType: sequence.tag,\n      unitIds: sequence.items.map(unit => unit.id),\n      bannerText: sequence.banner_text,\n      format: sequence.format,\n      title: sequence.display_name,\n      /*\n      Example structure of gated_content when prerequisites exist:\n      {\n        prereq_id: 'id of the prereq section',\n        prereq_url: 'unused by this frontend',\n        prereq_section_name: 'Name of the prerequisite section',\n        gated: true,\n        gated_section_name: 'Name of this gated section',\n      */\n      gatedContent: camelCaseObject(sequence.gated_content),\n      isTimeLimited: sequence.is_time_limited,\n      isProctored: sequence.is_proctored,\n      isHiddenAfterDue: sequence.is_hidden_after_due,\n      // Position comes back from the server 1-indexed. Adjust here.\n      activeUnitIndex: sequence.position ? sequence.position - 1 : 0,\n      saveUnitPosition: sequence.save_position,\n      showCompletion: sequence.show_completion,\n      allowProctoringOptOut: sequence.allow_proctoring_opt_out,\n    },\n    units: sequence.items.map(unit => ({\n      id: unit.id,\n      sequenceId: sequence.item_id,\n      bookmarked: unit.bookmarked,\n      complete: unit.complete,\n      title: unit.page_title,\n      contentType: unit.type,\n      graded: unit.graded,\n      containsContentTypeGatedContent: unit.contains_content_type_gated_content,\n    })),\n  };\n}\n\nexport async function getSequenceMetadata(sequenceId) {\n  const { data } = await getAuthenticatedHttpClient()\n    .get(`${getConfig().LMS_BASE_URL}/api/courseware/sequence/${sequenceId}`, {});\n\n  return normalizeSequenceMetadata(data);\n}\n\nconst getSequenceHandlerUrl = (courseId, sequenceId) => `${getConfig().LMS_BASE_URL}/courses/${courseId}/xblock/${sequenceId}/handler`;\n\nexport async function getBlockCompletion(courseId, sequenceId, usageKey) {\n  const { data } = await getAuthenticatedHttpClient().post(\n    `${getSequenceHandlerUrl(courseId, sequenceId)}/get_completion`,\n    { usage_key: usageKey },\n  );\n  return data.complete === true;\n}\n\nexport async function postSequencePosition(courseId, sequenceId, activeUnitIndex) {\n  const { data } = await getAuthenticatedHttpClient().post(\n    `${getSequenceHandlerUrl(courseId, sequenceId)}/goto_position`,\n    // Position is 1-indexed on the server and 0-indexed in this app. Adjust here.\n    { position: activeUnitIndex + 1 },\n  );\n  return data;\n}\n\nexport async function getResumeBlock(courseId) {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/courseware/resume/${courseId}`);\n  const { data } = await getAuthenticatedHttpClient().get(url.href, {});\n  return camelCaseObject(data);\n}\n\nexport async function postIntegritySignature(courseId) {\n  const { data } = await getAuthenticatedHttpClient().post(`${getConfig().LMS_BASE_URL}/api/agreements/v1/integrity_signature/${courseId}`, {});\n  return camelCaseObject(data);\n}\n\nexport async function sendActivationEmail() {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/send_account_activation_email`);\n  const { data } = await getAuthenticatedHttpClient().post(url.href, {});\n  return data;\n}\n\nexport async function getCourseDiscussionConfig(courseId) {\n  const url = `${getConfig().LMS_BASE_URL}/api/discussion/v1/courses/${courseId}`;\n  const { data } = await getAuthenticatedHttpClient().get(url);\n  return data;\n}\n\nexport async function getCourseTopics(courseId) {\n  const { data } = await getAuthenticatedHttpClient()\n    .get(`${getConfig().LMS_BASE_URL}/api/discussion/v2/course_topics/${courseId}`);\n  return camelCaseObject(data);\n}\n"],"mappings":"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"}