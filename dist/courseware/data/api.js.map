{"version":3,"sources":["../../../src/courseware/data/api.js"],"names":["normalizeLearningSequencesData","learningSequencesData","models","courses","sections","sequences","now","Date","isReleased","block","accessible","effective_start","parse","Object","entries","outline","forEach","seqId","sequence","id","title","section","availableSequenceIds","sequence_ids","filter","length","sequenceIds","courseId","course_key","childSeqId","sectionId","sectionIds","map","hasScheduledContent","values","some","seq","getSequenceForUnitDeprecated","unitId","authenticatedUser","url","URL","LMS_BASE_URL","searchParams","append","username","data","get","href","parent","blocks","find","type","children","includes","getLearningSequencesOutline","outlineUrl","normalizeMetadata","metadata","requestTime","responseTime","headers","accessExpiration","access_expiration","canShowUpgradeSock","can_show_upgrade_sock","contentTypeGatingEnabled","content_type_gating_enabled","courseGoals","course_goals","name","offer","enrollmentStart","enrollment_start","enrollmentEnd","enrollment_end","end","start","enrollmentMode","enrollment","mode","isEnrolled","is_active","license","userTimezone","user_timezone","showCalculator","show_calculator","notes","marketingUrl","marketing_url","celebrations","userHasPassingGrade","user_has_passing_grade","courseExitPageIsActive","course_exit_page_is_active","certificateData","certificate_data","entranceExamData","entrance_exam_data","timeOffsetMillis","date","verifyIdentityUrl","verify_identity_url","verificationStatus","verification_status","linkedinAddToProfileUrl","linkedin_add_to_profile_url","relatedPrograms","related_programs","userNeedsIntegritySignature","user_needs_integrity_signature","canAccessProctoredExams","can_access_proctored_exams","getCourseMetadata","normalizeSequenceMetadata","item_id","blockType","tag","unitIds","items","unit","bannerText","banner_text","format","display_name","gatedContent","gated_content","isTimeLimited","is_time_limited","isProctored","is_proctored","isHiddenAfterDue","is_hidden_after_due","activeUnitIndex","position","saveUnitPosition","save_position","showCompletion","show_completion","allowProctoringOptOut","allow_proctoring_opt_out","units","sequenceId","bookmarked","complete","page_title","contentType","graded","containsContentTypeGatedContent","contains_content_type_gated_content","getSequenceMetadata","getSequenceHandlerUrl","getBlockCompletion","usageKey","post","usage_key","postSequencePosition","getResumeBlock","postIntegritySignature","sendActivationEmail","getCourseDiscussionConfig","getCourseTopics"],"mappings":"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","sourcesContent":["import { camelCaseObject, getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedHttpClient, getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport { getTimeOffsetMillis } from '../../course-home/data/api';\nimport { appendBrowserTimezoneToUrl } from '../../utils';\n\nexport function normalizeLearningSequencesData(learningSequencesData) {\n  const models = {\n    courses: {},\n    sections: {},\n    sequences: {},\n  };\n\n  const now = new Date();\n  function isReleased(block) {\n    // We check whether the backend marks this as accessible because staff users are granted access anyway.\n    // Note that sections don't have the `accessible` field and will just be checking `effective_start`.\n    return block.accessible || !block.effective_start || now >= Date.parse(block.effective_start);\n  }\n\n  // Sequences\n  Object.entries(learningSequencesData.outline.sequences).forEach(([seqId, sequence]) => {\n    if (!isReleased(sequence)) {\n      return; // Don't let the learner see unreleased sequences\n    }\n\n    models.sequences[seqId] = {\n      id: seqId,\n      title: sequence.title,\n    };\n  });\n\n  // Sections\n  learningSequencesData.outline.sections.forEach(section => {\n    // Filter out any ignored sequences (e.g. unreleased sequences)\n    const availableSequenceIds = section.sequence_ids.filter(seqId => seqId in models.sequences);\n\n    // If we are unreleased and already stripped out all our children, just don't show us at all.\n    // (We check both release date and children because children will exist for an unreleased section even for staff,\n    // so we still want to show this section.)\n    if (!isReleased(section) && availableSequenceIds.length === 0) {\n      return;\n    }\n\n    models.sections[section.id] = {\n      id: section.id,\n      title: section.title,\n      sequenceIds: availableSequenceIds,\n      courseId: learningSequencesData.course_key,\n    };\n\n    // Add back-references to this section for all child sequences.\n    availableSequenceIds.forEach(childSeqId => {\n      models.sequences[childSeqId].sectionId = section.id;\n    });\n  });\n\n  // Course\n  models.courses[learningSequencesData.course_key] = {\n    id: learningSequencesData.course_key,\n    title: learningSequencesData.title,\n    sectionIds: Object.entries(models.sections).map(([sectionId]) => sectionId),\n\n    // Scan through all the sequences and look for ones that aren't released yet.\n    hasScheduledContent: Object.values(learningSequencesData.outline.sequences).some(seq => !isReleased(seq)),\n  };\n\n  return models;\n}\n\n// Do not add further calls to this API - we don't like making use of the modulestore if we can help it\nexport async function getSequenceForUnitDeprecated(courseId, unitId) {\n  const authenticatedUser = getAuthenticatedUser();\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/courses/v2/blocks/`);\n  url.searchParams.append('course_id', courseId);\n  url.searchParams.append('username', authenticatedUser ? authenticatedUser.username : '');\n  url.searchParams.append('depth', 3);\n  url.searchParams.append('requested_fields', 'children,discussions_url');\n\n  const { data } = await getAuthenticatedHttpClient().get(url.href, {});\n  const parent = Object.values(data.blocks).find(block => block.type === 'sequential' && block.children.includes(unitId));\n  return parent?.id;\n}\n\nexport async function getLearningSequencesOutline(courseId) {\n  const outlineUrl = new URL(`${getConfig().LMS_BASE_URL}/api/learning_sequences/v1/course_outline/${courseId}`);\n  const { data } = await getAuthenticatedHttpClient().get(outlineUrl.href, {});\n  return normalizeLearningSequencesData(data);\n}\n\nfunction normalizeMetadata(metadata) {\n  const requestTime = Date.now();\n  const responseTime = requestTime;\n  const { data, headers } = metadata;\n  return {\n    accessExpiration: camelCaseObject(data.access_expiration),\n    canShowUpgradeSock: data.can_show_upgrade_sock,\n    contentTypeGatingEnabled: data.content_type_gating_enabled,\n    courseGoals: camelCaseObject(data.course_goals),\n    id: data.id,\n    title: data.name,\n    offer: camelCaseObject(data.offer),\n    enrollmentStart: data.enrollment_start,\n    enrollmentEnd: data.enrollment_end,\n    end: data.end,\n    start: data.start,\n    enrollmentMode: data.enrollment.mode,\n    isEnrolled: data.enrollment.is_active,\n    license: data.license,\n    userTimezone: data.user_timezone,\n    showCalculator: data.show_calculator,\n    notes: camelCaseObject(data.notes),\n    marketingUrl: data.marketing_url,\n    celebrations: camelCaseObject(data.celebrations),\n    userHasPassingGrade: data.user_has_passing_grade,\n    courseExitPageIsActive: data.course_exit_page_is_active,\n    certificateData: camelCaseObject(data.certificate_data),\n    entranceExamData: camelCaseObject(data.entrance_exam_data),\n    timeOffsetMillis: getTimeOffsetMillis(headers && headers.date, requestTime, responseTime),\n    verifyIdentityUrl: data.verify_identity_url,\n    verificationStatus: data.verification_status,\n    linkedinAddToProfileUrl: data.linkedin_add_to_profile_url,\n    relatedPrograms: camelCaseObject(data.related_programs),\n    userNeedsIntegritySignature: data.user_needs_integrity_signature,\n    canAccessProctoredExams: data.can_access_proctored_exams,\n  };\n}\n\nexport async function getCourseMetadata(courseId) {\n  let url = `${getConfig().LMS_BASE_URL}/api/courseware/course/${courseId}`;\n  url = appendBrowserTimezoneToUrl(url);\n  const metadata = await getAuthenticatedHttpClient().get(url);\n  return normalizeMetadata(metadata);\n}\n\nfunction normalizeSequenceMetadata(sequence) {\n  return {\n    sequence: {\n      id: sequence.item_id,\n      blockType: sequence.tag,\n      unitIds: sequence.items.map(unit => unit.id),\n      bannerText: sequence.banner_text,\n      format: sequence.format,\n      title: sequence.display_name,\n      /*\n      Example structure of gated_content when prerequisites exist:\n      {\n        prereq_id: 'id of the prereq section',\n        prereq_url: 'unused by this frontend',\n        prereq_section_name: 'Name of the prerequisite section',\n        gated: true,\n        gated_section_name: 'Name of this gated section',\n      */\n      gatedContent: camelCaseObject(sequence.gated_content),\n      isTimeLimited: sequence.is_time_limited,\n      isProctored: sequence.is_proctored,\n      isHiddenAfterDue: sequence.is_hidden_after_due,\n      // Position comes back from the server 1-indexed. Adjust here.\n      activeUnitIndex: sequence.position ? sequence.position - 1 : 0,\n      saveUnitPosition: sequence.save_position,\n      showCompletion: sequence.show_completion,\n      allowProctoringOptOut: sequence.allow_proctoring_opt_out,\n    },\n    units: sequence.items.map(unit => ({\n      id: unit.id,\n      sequenceId: sequence.item_id,\n      bookmarked: unit.bookmarked,\n      complete: unit.complete,\n      title: unit.page_title,\n      contentType: unit.type,\n      graded: unit.graded,\n      containsContentTypeGatedContent: unit.contains_content_type_gated_content,\n    })),\n  };\n}\n\nexport async function getSequenceMetadata(sequenceId) {\n  const { data } = await getAuthenticatedHttpClient()\n    .get(`${getConfig().LMS_BASE_URL}/api/courseware/sequence/${sequenceId}`, {});\n\n  return normalizeSequenceMetadata(data);\n}\n\nconst getSequenceHandlerUrl = (courseId, sequenceId) => `${getConfig().LMS_BASE_URL}/courses/${courseId}/xblock/${sequenceId}/handler`;\n\nexport async function getBlockCompletion(courseId, sequenceId, usageKey) {\n  const { data } = await getAuthenticatedHttpClient().post(\n    `${getSequenceHandlerUrl(courseId, sequenceId)}/get_completion`,\n    { usage_key: usageKey },\n  );\n  return data.complete === true;\n}\n\nexport async function postSequencePosition(courseId, sequenceId, activeUnitIndex) {\n  const { data } = await getAuthenticatedHttpClient().post(\n    `${getSequenceHandlerUrl(courseId, sequenceId)}/goto_position`,\n    // Position is 1-indexed on the server and 0-indexed in this app. Adjust here.\n    { position: activeUnitIndex + 1 },\n  );\n  return data;\n}\n\nexport async function getResumeBlock(courseId) {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/courseware/resume/${courseId}`);\n  const { data } = await getAuthenticatedHttpClient().get(url.href, {});\n  return camelCaseObject(data);\n}\n\nexport async function postIntegritySignature(courseId) {\n  const { data } = await getAuthenticatedHttpClient().post(\n    `${getConfig().LMS_BASE_URL}/api/agreements/v1/integrity_signature/${courseId}`, {},\n  );\n  return camelCaseObject(data);\n}\n\nexport async function sendActivationEmail() {\n  const url = new URL(`${getConfig().LMS_BASE_URL}/api/send_account_activation_email`);\n  const { data } = await getAuthenticatedHttpClient().post(url.href, {});\n  return data;\n}\n\nexport async function getCourseDiscussionConfig(courseId) {\n  const url = `${getConfig().LMS_BASE_URL}/api/discussion/v1/courses/${courseId}`;\n  const { data } = await getAuthenticatedHttpClient().get(url);\n  return data;\n}\n\nexport async function getCourseTopics(courseId) {\n  const { data } = await getAuthenticatedHttpClient()\n    .get(`${getConfig().LMS_BASE_URL}/api/discussion/v2/course_topics/${courseId}`);\n  return camelCaseObject(data);\n}\n"],"file":"api.js"}