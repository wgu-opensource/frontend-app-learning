{"version":3,"file":"redux.test.js","names":["_rosie","require","_axiosMockAdapter","_interopRequireDefault","_auth","_frontendPlatform","thunks","_interopRequireWildcard","_utils","_courseBlocks","_learningSequencesOutline","_setupTest","_store","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","loggingService","initializeMockApp","axiosMock","MockAdapter","getAuthenticatedHttpClient","describe","courseBaseUrl","getConfig","LMS_BASE_URL","learningSequencesUrlRegExp","RegExp","sequenceBaseUrl","courseMetadata","Factory","build","courseId","id","courseHomeMetadata","courseBlocks","unitBlocks","sequenceBlocks","buildSimpleCourseBlocks","sequenceMetadata","sequenceBlock","simpleOutline","buildOutlineFromBlocks","courseUrl","appendBrowserTimezoneToUrl","courseHomeMetadataUrl","sequenceUrl","item_id","sequenceId","unitId","store","beforeEach","reset","logError","mockReset","initializeStore","it","onGet","networkError","executeThunk","fetchCourse","dispatch","expect","toHaveBeenCalled","getState","courseware","toEqual","objectContaining","courseStatus","forbiddenCourseMetadata","forbiddenCourseHomeMetadata","course_access","has_access","forbiddenCourseHomeUrl","forbiddenCourseBlocks","forbiddenCourseUrl","reply","state","models","courseHomeMeta","courseAccess","not","toBeUndefined","sequenceStatus","coursewareMeta","marketingUrl","sequences","values","sections","section","sequenceIds","emptyOutline","fetchSequence","sectionMetadata","tag","gatedContent","any","activeUnitIndex","units","complete","bookmarked","Boolean","getCompletionURL","onPost","checkBlockCompletion","history","post","url","toBeTruthy","gotoPositionURL","oldPosition","newPosition","saveSequencePosition","courseMetadataNeedSignature","user_needs_integrity_signature","courseUrlNeedSignature","userNeedsIntegritySignature","integritySignatureUrl","saveIntegritySignature"],"sources":["../../../src/courseware/data/redux.test.js"],"sourcesContent":["import { Factory } from 'rosie';\nimport MockAdapter from 'axios-mock-adapter';\n\nimport { getAuthenticatedHttpClient } from '@edx/frontend-platform/auth';\nimport { getConfig } from '@edx/frontend-platform';\n\nimport * as thunks from './thunks';\n\nimport { appendBrowserTimezoneToUrl, executeThunk } from '../../utils';\n\nimport { buildSimpleCourseBlocks } from '../../shared/data/__factories__/courseBlocks.factory';\nimport { buildOutlineFromBlocks } from './__factories__/learningSequencesOutline.factory';\nimport { initializeMockApp } from '../../setupTest';\nimport initializeStore from '../../store';\n\nconst { loggingService } = initializeMockApp();\n\nconst axiosMock = new MockAdapter(getAuthenticatedHttpClient());\n\ndescribe('Data layer integration tests', () => {\n  const courseBaseUrl = `${getConfig().LMS_BASE_URL}/api/courseware/course`;\n  const learningSequencesUrlRegExp = new RegExp(`${getConfig().LMS_BASE_URL}/api/learning_sequences/v1/course_outline/*`);\n  const sequenceBaseUrl = `${getConfig().LMS_BASE_URL}/api/courseware/sequence`;\n\n  // building minimum set of api responses to test all thunks\n  const courseMetadata = Factory.build('courseMetadata');\n  const courseId = courseMetadata.id;\n  const courseHomeMetadata = Factory.build('courseHomeMetadata');\n  const { courseBlocks, unitBlocks, sequenceBlocks } = buildSimpleCourseBlocks(courseId);\n  const sequenceMetadata = Factory.build(\n    'sequenceMetadata',\n    {},\n    { courseId, unitBlocks, sequenceBlock: sequenceBlocks[0] },\n  );\n  const simpleOutline = buildOutlineFromBlocks(courseBlocks);\n\n  let courseUrl = `${courseBaseUrl}/${courseId}`;\n  courseUrl = appendBrowserTimezoneToUrl(courseUrl);\n\n  const courseHomeMetadataUrl = appendBrowserTimezoneToUrl(\n    `${getConfig().LMS_BASE_URL}/api/course_home/course_metadata/${courseId}`,\n  );\n  const sequenceUrl = `${sequenceBaseUrl}/${sequenceMetadata.item_id}`;\n  const sequenceId = sequenceBlocks[0].id;\n  const unitId = unitBlocks[0].id;\n\n  let store;\n\n  beforeEach(() => {\n    axiosMock.reset();\n    loggingService.logError.mockReset();\n\n    store = initializeStore();\n  });\n\n  describe('Test fetchCourse', () => {\n    it('Should fail to fetch course and blocks if request error happens', async () => {\n      axiosMock.onGet(courseUrl).networkError();\n      axiosMock.onGet(learningSequencesUrlRegExp).networkError();\n\n      await executeThunk(thunks.fetchCourse(courseId), store.dispatch);\n\n      expect(loggingService.logError).toHaveBeenCalled();\n      expect(store.getState().courseware).toEqual(expect.objectContaining({\n        courseId,\n        courseStatus: 'failed',\n      }));\n    });\n\n    it('Should fetch, normalize, and save metadata, but with denied status', async () => {\n      const forbiddenCourseMetadata = Factory.build('courseMetadata');\n      const forbiddenCourseHomeMetadata = Factory.build('courseHomeMetadata', {\n        course_access: {\n          has_access: false,\n        },\n      });\n      const forbiddenCourseHomeUrl = appendBrowserTimezoneToUrl(\n        `${getConfig().LMS_BASE_URL}/api/course_home/course_metadata/${courseId}`,\n      );\n      const forbiddenCourseBlocks = Factory.build('courseBlocks', {\n        courseId: forbiddenCourseMetadata.id,\n      });\n      let forbiddenCourseUrl = `${courseBaseUrl}/${forbiddenCourseMetadata.id}`;\n      forbiddenCourseUrl = appendBrowserTimezoneToUrl(forbiddenCourseUrl);\n\n      axiosMock.onGet(forbiddenCourseHomeUrl).reply(200, forbiddenCourseHomeMetadata);\n      axiosMock.onGet(forbiddenCourseUrl).reply(200, forbiddenCourseMetadata);\n      axiosMock.onGet(learningSequencesUrlRegExp).reply(200, buildOutlineFromBlocks(forbiddenCourseBlocks));\n\n      await executeThunk(thunks.fetchCourse(forbiddenCourseMetadata.id), store.dispatch);\n\n      const state = store.getState();\n\n      expect(state.courseware.courseStatus).toEqual('denied');\n\n      // check that at least one key camel cased, thus course data normalized\n      expect(state.models.courseHomeMeta[forbiddenCourseMetadata.id].courseAccess).not.toBeUndefined();\n    });\n\n    it('Should fetch, normalize, and save metadata', async () => {\n      axiosMock.onGet(courseHomeMetadataUrl).reply(200, courseHomeMetadata);\n      axiosMock.onGet(courseUrl).reply(200, courseMetadata);\n      axiosMock.onGet(learningSequencesUrlRegExp).reply(200, buildOutlineFromBlocks(courseBlocks));\n\n      await executeThunk(thunks.fetchCourse(courseId), store.dispatch);\n\n      const state = store.getState();\n\n      expect(state.courseware.courseStatus).toEqual('loaded');\n      expect(state.courseware.courseId).toEqual(courseId);\n      expect(state.courseware.sequenceStatus).toEqual('loading');\n      expect(state.courseware.sequenceId).toEqual(null);\n\n      // check that at least one key camel cased, thus course data normalized\n      expect(state.models.coursewareMeta[courseId].marketingUrl).not.toBeUndefined();\n    });\n\n    it('Should fetch, normalize, and save metadata; filtering has no effect', async () => {\n      // Very similar to previous test, but pass back an outline for filtering\n      // (even though it won't actually filter down in this case).\n      axiosMock.onGet(courseHomeMetadataUrl).reply(200, courseHomeMetadata);\n      axiosMock.onGet(courseUrl).reply(200, courseMetadata);\n      axiosMock.onGet(learningSequencesUrlRegExp).reply(200, simpleOutline);\n\n      await executeThunk(thunks.fetchCourse(courseId), store.dispatch);\n\n      const state = store.getState();\n\n      expect(state.courseware.courseStatus).toEqual('loaded');\n      expect(state.courseware.courseId).toEqual(courseId);\n      expect(state.courseware.sequenceStatus).toEqual('loading');\n      expect(state.courseware.sequenceId).toEqual(null);\n\n      // check that at least one key camel cased, thus course data normalized\n      expect(state.models.coursewareMeta[courseId].marketingUrl).not.toBeUndefined();\n      expect(state.models.sequences.length === 1);\n\n      Object.values(state.models.sections).forEach(section => expect(section.sequenceIds.length === 1));\n    });\n\n    it('Should fetch, normalize, and save metadata; filtering removes sequence', async () => {\n      // Very similar to previous test, but pass back an outline for filtering\n      // (even though it won't actually filter down in this case).\n      axiosMock.onGet(courseHomeMetadataUrl).reply(200, courseHomeMetadata);\n      axiosMock.onGet(courseUrl).reply(200, courseMetadata);\n\n      // Create an outline with basic matching metadata, but then empty it out...\n      const emptyOutline = buildOutlineFromBlocks(courseBlocks);\n      emptyOutline.sequences = {};\n      emptyOutline.sections = [];\n      axiosMock.onGet(learningSequencesUrlRegExp).reply(200, emptyOutline);\n      await executeThunk(thunks.fetchCourse(courseId), store.dispatch);\n\n      const state = store.getState();\n\n      expect(state.courseware.courseStatus).toEqual('loaded');\n      expect(state.courseware.courseId).toEqual(courseId);\n      expect(state.courseware.sequenceStatus).toEqual('loading');\n      expect(state.courseware.sequenceId).toEqual(null);\n\n      // check that at least one key camel cased, thus course data normalized\n      expect(state.models.coursewareMeta[courseId].marketingUrl).not.toBeUndefined();\n      expect(state.models.sequences === null);\n\n      Object.values(state.models.sections).forEach(section => expect(section.sequenceIds.length === 0));\n    });\n  });\n\n  describe('Test fetchSequence', () => {\n    it('Should result in fetch failure if error occurs', async () => {\n      axiosMock.onGet(sequenceUrl).networkError();\n\n      await executeThunk(thunks.fetchSequence(sequenceId), store.dispatch);\n\n      expect(loggingService.logError).toHaveBeenCalled();\n      expect(store.getState().courseware.sequenceStatus).toEqual('failed');\n    });\n\n    it('Should result in fetch failure if a non-sequential block is returned', async () => {\n      const sectionMetadata = {\n        ...sequenceMetadata,\n        // 'chapter' is the block_type of a Section, which the sequence metadata\n        // API will happily return if requested, since SectionBlock is implemented\n        // as a subclass of SequenceBlock.\n        tag: 'chapter',\n      };\n      axiosMock.onGet(sequenceUrl).reply(200, sectionMetadata);\n\n      await executeThunk(thunks.fetchSequence(sequenceId), store.dispatch);\n\n      expect(loggingService.logError).toHaveBeenCalled();\n      expect(store.getState().courseware.sequenceStatus).toEqual('failed');\n    });\n\n    it('Should fetch and normalize metadata, and then update existing models with sequence metadata', async () => {\n      axiosMock.onGet(courseHomeMetadataUrl).reply(200, courseHomeMetadata);\n      axiosMock.onGet(courseUrl).reply(200, courseMetadata);\n      axiosMock.onGet(learningSequencesUrlRegExp).reply(200, buildOutlineFromBlocks(courseBlocks));\n      axiosMock.onGet(sequenceUrl).reply(200, sequenceMetadata);\n\n      // setting course with blocks before sequence to check that blocks receive\n      // additional information after fetchSequence call.\n      await executeThunk(thunks.fetchCourse(courseId), store.dispatch);\n\n      // ensure that initial state has no additional sequence info\n      let state = store.getState();\n      expect(state.models.sequences).toEqual({\n        [sequenceId]: expect.not.objectContaining({\n          gatedContent: expect.any(Object),\n          activeUnitIndex: expect.any(Number),\n        }),\n      });\n\n      // Update our state variable again.\n      state = store.getState();\n\n      expect(state.courseware.courseStatus).toEqual('loaded');\n      expect(state.courseware.courseId).toEqual(courseId);\n      expect(state.courseware.sequenceStatus).toEqual('loading');\n      expect(state.courseware.sequenceId).toEqual(null);\n\n      await executeThunk(thunks.fetchSequence(sequenceId), store.dispatch);\n\n      // Update our state variable again.\n      state = store.getState();\n\n      // ensure that additional information appeared in store\n      expect(state.models.sequences).toEqual({\n        [sequenceId]: expect.objectContaining({\n          gatedContent: expect.any(Object),\n          activeUnitIndex: expect.any(Number),\n        }),\n      });\n      expect(state.models.units).toEqual({\n        [unitId]: expect.objectContaining({\n          complete: null,\n          bookmarked: expect.any(Boolean),\n        }),\n      });\n\n      expect(state.courseware.courseStatus).toEqual('loaded');\n      expect(state.courseware.courseId).toEqual(courseId);\n      expect(state.courseware.sequenceStatus).toEqual('loaded');\n      expect(state.courseware.sequenceId).toEqual(sequenceId);\n    });\n  });\n\n  describe('Thunks that require fetched sequences', () => {\n    beforeEach(async () => {\n      // thunks tested in this block rely on fact, that store already has\n      // some info about sequence\n      axiosMock.onGet(sequenceUrl).reply(200, sequenceMetadata);\n      await executeThunk(thunks.fetchSequence(sequenceMetadata.item_id), store.dispatch);\n    });\n\n    describe('Test checkBlockCompletion', () => {\n      const getCompletionURL = `${getConfig().LMS_BASE_URL}/courses/${courseId}/xblock/${sequenceId}/handler/get_completion`;\n\n      it('Should fail to check completion and log error', async () => {\n        axiosMock.onPost(getCompletionURL).networkError();\n\n        await executeThunk(\n          thunks.checkBlockCompletion(courseId, sequenceId, unitId),\n          store.dispatch,\n          store.getState,\n        );\n\n        expect(loggingService.logError).toHaveBeenCalled();\n        expect(axiosMock.history.post[0].url).toEqual(getCompletionURL);\n      });\n\n      it('Should update complete field of unit model', async () => {\n        axiosMock.onPost(getCompletionURL).reply(201, { complete: true });\n\n        await executeThunk(\n          thunks.checkBlockCompletion(courseId, sequenceId, unitId),\n          store.dispatch,\n          store.getState,\n        );\n\n        expect(store.getState().models.units[unitId].complete).toBeTruthy();\n      });\n    });\n\n    describe('Test saveSequencePosition', () => {\n      const gotoPositionURL = `${getConfig().LMS_BASE_URL}/courses/${courseId}/xblock/${sequenceId}/handler/goto_position`;\n\n      it('Should change and revert sequence model activeUnitIndex in case of error', async () => {\n        axiosMock.onPost(gotoPositionURL).networkError();\n\n        const oldPosition = store.getState().models.sequences[sequenceId].activeUnitIndex;\n        const newPosition = 123;\n\n        await executeThunk(\n          thunks.saveSequencePosition(courseId, sequenceId, newPosition),\n          store.dispatch,\n          store.getState,\n        );\n\n        expect(loggingService.logError).toHaveBeenCalled();\n        expect(axiosMock.history.post[0].url).toEqual(gotoPositionURL);\n        expect(store.getState().models.sequences[sequenceId].activeUnitIndex).toEqual(oldPosition);\n      });\n\n      it('Should update sequence model activeUnitIndex', async () => {\n        axiosMock.onPost(gotoPositionURL).reply(201, {});\n\n        const newPosition = 123;\n\n        await executeThunk(\n          thunks.saveSequencePosition(courseId, sequenceId, newPosition),\n          store.dispatch,\n          store.getState,\n        );\n\n        expect(axiosMock.history.post[0].url).toEqual(gotoPositionURL);\n        expect(store.getState().models.sequences[sequenceId].activeUnitIndex).toEqual(newPosition);\n      });\n    });\n  });\n\n  describe('test saveIntegritySignature', () => {\n    it('Should update userNeedsIntegritySignature upon success', async () => {\n      const courseMetadataNeedSignature = Factory.build('courseMetadata', {\n        user_needs_integrity_signature: true,\n      });\n\n      let courseUrlNeedSignature = `${courseBaseUrl}/${courseMetadataNeedSignature.id}`;\n      courseUrlNeedSignature = appendBrowserTimezoneToUrl(courseUrlNeedSignature);\n\n      axiosMock.onGet(courseUrlNeedSignature).reply(200, courseMetadataNeedSignature);\n\n      await executeThunk(thunks.fetchCourse(courseMetadataNeedSignature.id), store.dispatch);\n      expect(\n        store.getState().models.coursewareMeta[courseMetadataNeedSignature.id].userNeedsIntegritySignature,\n      ).toEqual(true);\n\n      const integritySignatureUrl = `${getConfig().LMS_BASE_URL}/api/agreements/v1/integrity_signature/${courseMetadataNeedSignature.id}`;\n      axiosMock.onPost(integritySignatureUrl).reply(200, {});\n      await executeThunk(\n        thunks.saveIntegritySignature(courseMetadataNeedSignature.id),\n        store.dispatch,\n        store.getState,\n      );\n      expect(\n        store.getState().models.coursewareMeta[courseMetadataNeedSignature.id].userNeedsIntegritySignature,\n      ).toEqual(false);\n    });\n  });\n});\n"],"mappings":"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"}