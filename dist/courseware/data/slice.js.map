{"version":3,"sources":["../../../src/courseware/data/slice.js"],"names":["LOADING","LOADED","FAILED","DENIED","slice","name","initialState","courseStatus","courseId","sequenceStatus","sequenceId","sequenceMightBeUnit","reducers","fetchCourseRequest","state","payload","fetchCourseSuccess","fetchCourseFailure","fetchCourseDenied","fetchSequenceRequest","fetchSequenceSuccess","fetchSequenceFailure","fetchCourseRecommendationsRequest","fetchCourseRecommendationsSuccess","fetchCourseRecommendationsFailure","actions","reducer"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\n\nexport const LOADING = 'loading';\nexport const LOADED = 'loaded';\nexport const FAILED = 'failed';\nexport const DENIED = 'denied';\n\nconst slice = createSlice({\n  name: 'courseware',\n  initialState: {\n    courseStatus: 'loading',\n    courseId: null,\n    sequenceStatus: 'loading',\n    sequenceId: null,\n    sequenceMightBeUnit: false,\n  },\n  reducers: {\n    fetchCourseRequest: (state, { payload }) => {\n      state.courseId = payload.courseId;\n      state.courseStatus = LOADING;\n    },\n    fetchCourseSuccess: (state, { payload }) => {\n      state.courseId = payload.courseId;\n      state.courseStatus = LOADED;\n    },\n    fetchCourseFailure: (state, { payload }) => {\n      state.courseId = payload.courseId;\n      state.courseStatus = FAILED;\n    },\n    fetchCourseDenied: (state, { payload }) => {\n      state.courseId = payload.courseId;\n      state.courseStatus = DENIED;\n    },\n    fetchSequenceRequest: (state, { payload }) => {\n      state.sequenceId = payload.sequenceId;\n      state.sequenceStatus = LOADING;\n      state.sequenceMightBeUnit = false;\n    },\n    fetchSequenceSuccess: (state, { payload }) => {\n      state.sequenceId = payload.sequenceId;\n      state.sequenceStatus = LOADED;\n      state.sequenceMightBeUnit = false;\n    },\n    fetchSequenceFailure: (state, { payload }) => {\n      state.sequenceId = payload.sequenceId;\n      state.sequenceStatus = FAILED;\n      state.sequenceMightBeUnit = payload.sequenceMightBeUnit || false;\n    },\n  },\n});\n\nexport const {\n  fetchCourseRequest,\n  fetchCourseSuccess,\n  fetchCourseFailure,\n  fetchCourseDenied,\n  fetchSequenceRequest,\n  fetchSequenceSuccess,\n  fetchSequenceFailure,\n  fetchCourseRecommendationsRequest,\n  fetchCourseRecommendationsSuccess,\n  fetchCourseRecommendationsFailure,\n} = slice.actions;\n\nexport const {\n  reducer,\n} = slice;\n"],"file":"slice.js"}