{"version":3,"sources":["../../src/instructor-toolbar/InstructorToolbar.jsx"],"names":["getInsightsUrl","courseId","urlBase","INSIGHTS_BASE_URL","urlFull","getStudioUrl","unitId","STUDIO_BASE_URL","InstructorToolbar","props","didMount","setDidMount","tab","urlInsights","urlStudio","masqueradeErrorMessage","showMasqueradeError","accessExpirationMasqueradeBanner","courseStartDateMasqueradeBanner","ALERT_TYPES","ERROR","propTypes","PropTypes","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getConfig } from '@edx/frontend-platform';\n\nimport { ALERT_TYPES, AlertList } from '../generic/user-messages';\nimport Alert from '../generic/user-messages/Alert';\nimport MasqueradeWidget from './masquerade-widget';\nimport { useAccessExpirationMasqueradeBanner } from '../alerts/access-expiration-alert';\nimport { useCourseStartMasqueradeBanner } from '../alerts/course-start-alert';\n\nfunction getInsightsUrl(courseId) {\n  const urlBase = getConfig().INSIGHTS_BASE_URL;\n  let urlFull;\n  if (urlBase) {\n    urlFull = `${urlBase}/courses`;\n    // This shouldn't actually be missing, at present,\n    // but we're providing a reasonable fallback,\n    // in case of either error or extension.\n    if (courseId) {\n      urlFull += `/${courseId}`;\n    }\n  }\n  return urlFull;\n}\n\nfunction getStudioUrl(courseId, unitId) {\n  const urlBase = getConfig().STUDIO_BASE_URL;\n  let urlFull;\n  if (urlBase) {\n    if (unitId) {\n      urlFull = `${urlBase}/container/${unitId}`;\n    } else if (courseId) {\n      urlFull = `${urlBase}/course/${courseId}`;\n    }\n  }\n  return urlFull;\n}\n\nexport default function InstructorToolbar(props) {\n  // This didMount logic became necessary once we had a page that does a redirect on a quick exit.\n  // As a result, it unmounts the InstructorToolbar (which will be remounted by the new component),\n  // but the InstructorToolbar's MasqueradeWidget has an outgoing request. Since it is unmounted\n  // during that time, it raises an error about a potential memory leak. By stopping the render\n  // when the InstructorToolbar is unmounted, we avoid the memory leak.\n  // NOTE: This was originally added because of the CourseExit page redirect. Once that page stops\n  //   doing a redirect because a CourseExit experience exists for all learners, this could be removed\n  const [didMount, setDidMount] = useState(false);\n  useEffect(() => {\n    setDidMount(true);\n    // Returning this function here will run setDidMount(false) when this component is unmounted\n    return () => setDidMount(false);\n  });\n\n  const {\n    courseId,\n    unitId,\n    tab,\n  } = props;\n\n  const urlInsights = getInsightsUrl(courseId);\n  const urlStudio = getStudioUrl(courseId, unitId);\n  const [masqueradeErrorMessage, showMasqueradeError] = useState(null);\n\n  const accessExpirationMasqueradeBanner = useAccessExpirationMasqueradeBanner(courseId, tab);\n  const courseStartDateMasqueradeBanner = useCourseStartMasqueradeBanner(courseId, tab);\n\n  return (!didMount ? null : (\n    <div data-testid=\"instructor-toolbar\">\n      <div className=\"bg-primary text-white\">\n        <div className=\"container-xl py-3 d-md-flex justify-content-end align-items-start\">\n          <div className=\"align-items-center flex-grow-1 d-md-flex mx-1 my-1\">\n            <MasqueradeWidget courseId={courseId} onError={showMasqueradeError} />\n          </div>\n          {(urlStudio || urlInsights) && (\n            <>\n              <hr className=\"border-light\" />\n              <span className=\"mr-2 mt-1 col-form-label\">View course in:</span>\n            </>\n          )}\n          {urlStudio && (\n            <span className=\"mx-1 my-1\">\n              <a className=\"btn btn-inverse-outline-primary\" href={urlStudio}>Studio</a>\n            </span>\n          )}\n          {urlInsights && (\n            <span className=\"mx-1 my-1\">\n              <a className=\"btn btn-inverse-outline-primary\" href={urlInsights}>Insights</a>\n            </span>\n          )}\n        </div>\n      </div>\n      {masqueradeErrorMessage && (\n        <div className=\"container-xl mt-3\">\n          <Alert\n            type={ALERT_TYPES.ERROR}\n            dismissible={false}\n          >\n            {masqueradeErrorMessage}\n          </Alert>\n        </div>\n      )}\n      <AlertList\n        topic=\"instructor-toolbar-alerts\"\n        customAlerts={{\n          ...accessExpirationMasqueradeBanner,\n          ...courseStartDateMasqueradeBanner,\n        }}\n      />\n    </div>\n  ));\n}\n\nInstructorToolbar.propTypes = {\n  courseId: PropTypes.string,\n  unitId: PropTypes.string,\n  tab: PropTypes.string,\n};\n\nInstructorToolbar.defaultProps = {\n  courseId: undefined,\n  unitId: undefined,\n  tab: '',\n};\n"],"file":"InstructorToolbar.js"}