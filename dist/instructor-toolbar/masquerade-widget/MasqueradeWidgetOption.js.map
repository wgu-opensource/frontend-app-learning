{"version":3,"sources":["../../../src/instructor-toolbar/masquerade-widget/MasqueradeWidgetOption.jsx"],"names":["MasqueradeWidgetOption","Component","onClick","event","target","parentNode","click","groupId","role","userName","userPartitionId","userNameInputToggle","props","payload","group_id","parseInt","user_partition_id","onSubmit","then","global","location","reload","isSelected","isEqual","reduce","accumulator","currentValue","selected","render","groupName","className","propTypes","PropTypes","number","string","isRequired","func","shape","courseKey","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from '@edx/paragon';\n\nclass MasqueradeWidgetOption extends Component {\n  onClick(event) {\n    // TODO: Remove this hack when we upgrade Paragon\n    // Note: The current version of Paragon does _not_ close dropdown components\n    // automatically (or easily programmatically) when you click on an item.\n    // We can simulate this behavior by programmatically clicking the\n    // toggle button on behalf of the user.\n    // The newest version of Paragon already contains this behavior,\n    // so we can remove this when we upgrade to that point.\n    event.target.parentNode.parentNode.click();\n    const {\n      groupId,\n      role,\n      userName,\n      userPartitionId,\n      userNameInputToggle,\n    } = this.props;\n    const payload = {};\n    if (userName || userName === '') {\n      userNameInputToggle(true);\n      return false;\n    }\n    if (role) {\n      payload.role = role;\n    }\n    if (groupId) {\n      payload.group_id = parseInt(groupId, 10);\n      payload.user_partition_id = parseInt(userPartitionId, 10);\n    }\n    this.props.onSubmit(payload).then(() => {\n      global.location.reload();\n    });\n    return true;\n  }\n\n  isSelected() {\n    /* eslint-disable arrow-body-style */\n    const isEqual = [\n      'groupId',\n      'role',\n      'userName',\n      'userPartitionId',\n    ].reduce((accumulator, currentValue) => {\n      return accumulator && (\n        this.props[currentValue] === this.props.selected[currentValue]\n      );\n    }, true);\n    return isEqual;\n  }\n\n  render() {\n    const {\n      groupName,\n    } = this.props;\n    if (!groupName) {\n      return null;\n    }\n    const selected = this.isSelected();\n    let className;\n    if (selected) {\n      className = 'active';\n    }\n    return (\n      <Dropdown.Item\n        className={className}\n        href=\"#\"\n        onClick={(event) => this.onClick(event)}\n      >\n        {groupName}\n      </Dropdown.Item>\n    );\n  }\n}\nMasqueradeWidgetOption.propTypes = {\n  groupId: PropTypes.number,\n  groupName: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  role: PropTypes.string,\n  selected: PropTypes.shape({\n    courseKey: PropTypes.string.isRequired,\n    groupId: PropTypes.number,\n    role: PropTypes.string,\n    userName: PropTypes.string,\n    userPartitionId: PropTypes.number,\n  }),\n  userName: PropTypes.string,\n  userNameInputToggle: PropTypes.func.isRequired,\n  userPartitionId: PropTypes.number,\n};\nMasqueradeWidgetOption.defaultProps = {\n  groupId: null,\n  role: null,\n  selected: null,\n  userName: null,\n  userPartitionId: null,\n};\n\nexport default MasqueradeWidgetOption;\n"],"file":"MasqueradeWidgetOption.js"}