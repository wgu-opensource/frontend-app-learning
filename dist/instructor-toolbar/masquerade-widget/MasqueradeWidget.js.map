{"version":3,"file":"MasqueradeWidget.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_i18n","_paragon","_userMessages","_MasqueradeUserNameInput","_MasqueradeWidgetOption","_api","_messages","_jsxRuntime","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","MasqueradeWidget","Component","constructor","props","courseId","state","autoFocus","masquerade","options","shouldShowUserNameInput","masqueradeUsername","componentDidMount","getMasqueradeOptions","then","data","success","onSuccess","onError","catch","response","console","error","message","onSubmit","payload","clearError","postMasqueradeOptions","parseAvailableOptions","setState","toggle","show","prevState","undefined","postData","_this","active","available","map","group","jsx","groupId","groupName","name","role","selected","userName","userPartitionId","userNameInputToggle","arguments","render","specificLearnerInputText","intl","formatMessage","messages","placeholder","jsxs","className","children","Dropdown","Toggle","variant","Menu","id","defaultValue","errorMessage","propTypes","PropTypes","string","isRequired","intlShape","func","contextType","UserMessagesContext","_default","injectIntl","exports"],"sources":["../../../src/instructor-toolbar/masquerade-widget/MasqueradeWidget.jsx"],"sourcesContent":["import React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Dropdown } from '@edx/paragon';\n\nimport { UserMessagesContext } from '../../generic/user-messages';\n\nimport MasqueradeUserNameInput from './MasqueradeUserNameInput';\nimport MasqueradeWidgetOption from './MasqueradeWidgetOption';\nimport {\n  getMasqueradeOptions,\n  postMasqueradeOptions,\n} from './data/api';\nimport messages from './messages';\n\nclass MasqueradeWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.courseId = props.courseId;\n    this.state = {\n      autoFocus: false,\n      masquerade: 'Staff',\n      options: [],\n      shouldShowUserNameInput: false,\n      masqueradeUsername: null,\n    };\n  }\n\n  componentDidMount() {\n    getMasqueradeOptions(this.courseId).then((data) => {\n      if (data.success) {\n        this.onSuccess(data);\n      } else {\n        // This was explicitly denied by the backend;\n        // assume it's disabled/unavailable.\n        // eslint-disable-next-line no-console\n        this.onError('Unable to get masquerade options');\n      }\n    }).catch((response) => {\n      // There's not much we can do to recover;\n      // if we can't fetch masquerade options,\n      // assume it's disabled/unavailable.\n      // eslint-disable-next-line no-console\n      console.error('Unable to get masquerade options', response);\n    });\n  }\n\n  onError(message) {\n    this.props.onError(message);\n  }\n\n  async onSubmit(payload) {\n    this.clearError();\n    const options = await postMasqueradeOptions(this.courseId, payload);\n    return options;\n  }\n\n  onSuccess(data) {\n    const options = this.parseAvailableOptions(data);\n    this.setState({\n      options,\n    });\n  }\n\n  clearError() {\n    this.props.onError('');\n  }\n\n  toggle(show) {\n    this.setState(prevState => ({\n      autoFocus: true,\n      masquerade: 'Specific Student...',\n      shouldShowUserNameInput: show === undefined ? !prevState.shouldShowUserNameInput : show,\n    }));\n  }\n\n  parseAvailableOptions(postData) {\n    const data = postData || {};\n    const active = data.active || {};\n    const available = data.available || [];\n    const options = available.map((group) => (\n      <MasqueradeWidgetOption\n        groupId={group.groupId}\n        groupName={group.name}\n        key={group.name}\n        role={group.role}\n        selected={active}\n        userName={group.userName}\n        userPartitionId={group.userPartitionId}\n        userNameInputToggle={(...args) => this.toggle(...args)}\n        onSubmit={(payload) => this.onSubmit(payload)}\n      />\n    ));\n    if (active.userName) {\n      this.setState({\n        autoFocus: false,\n        masquerade: 'Specific Student...',\n        masqueradeUsername: active.userName,\n        shouldShowUserNameInput: true,\n      });\n    } else if (active.groupName) {\n      this.setState({ masquerade: active.groupName });\n    } else if (active.role === 'student') {\n      this.setState({ masquerade: 'Learner' });\n    }\n    return options;\n  }\n\n  render() {\n    const {\n      autoFocus,\n      masquerade,\n      options,\n      shouldShowUserNameInput,\n      masqueradeUsername,\n    } = this.state;\n    const specificLearnerInputText = this.props.intl.formatMessage(messages.placeholder);\n    return (\n      <div className=\"flex-grow-1\">\n        <div className=\"row\">\n          <span className=\"col-auto col-form-label pl-3\">View this course as:</span>\n          <Dropdown className=\"flex-shrink-1 mx-1\">\n            <Dropdown.Toggle variant=\"inverse-outline-primary\">\n              {masquerade}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {options}\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        {shouldShowUserNameInput && (\n          <div className=\"row mt-2\">\n            <span className=\"col-auto col-form-label pl-3\" id=\"masquerade-search-label\">{`${specificLearnerInputText}:`}</span>\n            <MasqueradeUserNameInput\n              id=\"masquerade-search\"\n              className=\"col-4 form-control\"\n              autoFocus={autoFocus}\n              defaultValue={masqueradeUsername}\n              onError={(errorMessage) => this.onError(errorMessage)}\n              onSubmit={(payload) => this.onSubmit(payload)}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nMasqueradeWidget.propTypes = {\n  courseId: PropTypes.string.isRequired,\n  intl: intlShape.isRequired,\n  onError: PropTypes.func.isRequired,\n};\nMasqueradeWidget.contextType = UserMessagesContext;\nexport default injectIntl(MasqueradeWidget);\n"],"mappings":"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"}